[
    {
        "readme": "# easier-docker",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.py\n\u251c\u2500\u2500 easierdocker\n|   \u251c\u2500\u2500 __init__.py\n|   \u251c\u2500\u2500 __main__.py\n|   \u251c\u2500\u2500 config.py\n|   \u251c\u2500\u2500 constants.py\n|   \u251c\u2500\u2500 docker_utils.py\n|   \u251c\u2500\u2500 easier_docker.py # import docker;\n|   \u2514\u2500\u2500 exceptions.py\n\u2514\u2500\u2500 example\n    \u251c\u2500\u2500 docker_example.py\n    \u2514\u2500\u2500 example.py # from easierdocker import EasierDocker;",
        "relevant_file_paths": [],
        "relevant_file_sketches": "---\nCurrent File Sketch/1\n---\nHere is the file sketch of `easierdocker/__main__.py`.\n\n```python\nimport json\nimport os\nfrom argparse import ArgumentParser, FileType\nfrom easierdocker.config import Config\nfrom easierdocker.easier_docker import EasierDocker\nfrom easierdocker.log_re import log\n\n\ndef main():\n    \"\"\"TODO\"\"\"\n\n\nif __name__ == \"__main__\":\n    main()\n```",
        "current_file_path": "easierdocker/__main__.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as some relevant file sketches. Please fill the function body for the given function header.\n\n---\nREADME.md\n---\n# easier-docker\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.py\n\u251c\u2500\u2500 easierdocker\n|   \u251c\u2500\u2500 __init__.py\n|   \u251c\u2500\u2500 __main__.py\n|   \u251c\u2500\u2500 config.py\n|   \u251c\u2500\u2500 constants.py\n|   \u251c\u2500\u2500 docker_utils.py\n|   \u251c\u2500\u2500 easier_docker.py # import docker;\n|   \u2514\u2500\u2500 exceptions.py\n\u2514\u2500\u2500 example\n    \u251c\u2500\u2500 docker_example.py\n    \u2514\u2500\u2500 example.py # from easierdocker import EasierDocker;\n```\n\n---\nCurrent File Sketch/1\n---\nHere is the file sketch of `easierdocker/__main__.py`.\n\n```python\nimport json\nimport os\nfrom argparse import ArgumentParser, FileType\nfrom easierdocker.config import Config\nfrom easierdocker.easier_docker import EasierDocker\nfrom easierdocker.log_re import log\n\n\ndef main():\n    \"\"\"TODO\"\"\"\n\n\nif __name__ == \"__main__\":\n    main()\n```\n\n---\nFunction Complement\n---\ndef main():\n",
        "input": "",
        "output": "Here is a complete function body.\n\n```python\ndef main():\n    parser = ArgumentParser()\n    parser.add_argument(\n        \"--config\",\n        \"-c\",\n        help=\"configuration file path: yaml, yml and json\",\n        required=True,\n    )\n    args = parser.parse_args()\n    config_path = os.path.abspath(args.config) if args.config else None\n    config = Config(config_path).load_file()\n    log(\n        f\"\"\"config =\n     {json.dumps(config, sort_keys=False, indent=4, separators=(',', ': '))}\"\"\"\n    )\n    easier_docker = EasierDocker(config)\n    easier_docker.start()\n```"
    },
    {
        "readme": "# easier-docker",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.py\n\u251c\u2500\u2500 easierdocker\n|   \u251c\u2500\u2500 __init__.py\n|   \u251c\u2500\u2500 __main__.py\n|   \u251c\u2500\u2500 config.py\n|   \u251c\u2500\u2500 constants.py\n|   \u251c\u2500\u2500 docker_utils.py\n|   \u251c\u2500\u2500 easier_docker.py # import docker;\n|   \u2514\u2500\u2500 exceptions.py\n\u2514\u2500\u2500 example\n    \u251c\u2500\u2500 docker_example.py\n    \u2514\u2500\u2500 example.py # from easierdocker import EasierDocker;",
        "relevant_file_paths": [],
        "relevant_file_sketches": "---\nCurrent File Sketch/1\n---\nHere is the file sketch of `easierdocker/config.py`.\n\n```python\nimport json\nimport yaml\nfrom easierdocker.log_re import log\n\n\nclass Config:\n    def __init__(self, file_path: str):\n        \"\"\"TODO\"\"\"\n\n    def load_file(self) -> dict:\n        pass\n```",
        "current_file_path": "easierdocker/config.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as some relevant file sketches. Please fill the function body for the given function header.\n\n---\nREADME.md\n---\n# easier-docker\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.py\n\u251c\u2500\u2500 easierdocker\n|   \u251c\u2500\u2500 __init__.py\n|   \u251c\u2500\u2500 __main__.py\n|   \u251c\u2500\u2500 config.py\n|   \u251c\u2500\u2500 constants.py\n|   \u251c\u2500\u2500 docker_utils.py\n|   \u251c\u2500\u2500 easier_docker.py # import docker;\n|   \u2514\u2500\u2500 exceptions.py\n\u2514\u2500\u2500 example\n    \u251c\u2500\u2500 docker_example.py\n    \u2514\u2500\u2500 example.py # from easierdocker import EasierDocker;\n```\n\n---\nCurrent File Sketch/1\n---\nHere is the file sketch of `easierdocker/config.py`.\n\n```python\nimport json\nimport yaml\nfrom easierdocker.log_re import log\n\n\nclass Config:\n    def __init__(self, file_path: str):\n        \"\"\"TODO\"\"\"\n\n    def load_file(self) -> dict:\n        pass\n```\n\n---\nFunction Complement\n---\ndef __init__(self, file_path: str):\n",
        "input": "",
        "output": "Here is a complete function body.\n\n```python\ndef __init__(self, file_path: str):\n    self.file_path = file_path\n```"
    },
    {
        "readme": "# easier-docker",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.py\n\u251c\u2500\u2500 easierdocker\n|   \u251c\u2500\u2500 __init__.py\n|   \u251c\u2500\u2500 __main__.py\n|   \u251c\u2500\u2500 config.py\n|   \u251c\u2500\u2500 constants.py\n|   \u251c\u2500\u2500 docker_utils.py\n|   \u251c\u2500\u2500 easier_docker.py # import docker;\n|   \u2514\u2500\u2500 exceptions.py\n\u2514\u2500\u2500 example\n    \u251c\u2500\u2500 docker_example.py\n    \u2514\u2500\u2500 example.py # from easierdocker import EasierDocker;",
        "relevant_file_paths": [],
        "relevant_file_sketches": "---\nCurrent File Sketch/1\n---\nHere is the file sketch of `easierdocker/config.py`.\n\n```python\nimport json\nimport yaml\nfrom easierdocker.log_re import log\n\n\nclass Config:\n    def __init__(self, file_path: str):\n        pass\n\n    def load_file(self) -> dict:\n        \"\"\"TODO\"\"\"\n```",
        "current_file_path": "easierdocker/config.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as some relevant file sketches. Please fill the function body for the given function header.\n\n---\nREADME.md\n---\n# easier-docker\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.py\n\u251c\u2500\u2500 easierdocker\n|   \u251c\u2500\u2500 __init__.py\n|   \u251c\u2500\u2500 __main__.py\n|   \u251c\u2500\u2500 config.py\n|   \u251c\u2500\u2500 constants.py\n|   \u251c\u2500\u2500 docker_utils.py\n|   \u251c\u2500\u2500 easier_docker.py # import docker;\n|   \u2514\u2500\u2500 exceptions.py\n\u2514\u2500\u2500 example\n    \u251c\u2500\u2500 docker_example.py\n    \u2514\u2500\u2500 example.py # from easierdocker import EasierDocker;\n```\n\n---\nCurrent File Sketch/1\n---\nHere is the file sketch of `easierdocker/config.py`.\n\n```python\nimport json\nimport yaml\nfrom easierdocker.log_re import log\n\n\nclass Config:\n    def __init__(self, file_path: str):\n        pass\n\n    def load_file(self) -> dict:\n        \"\"\"TODO\"\"\"\n```\n\n---\nFunction Complement\n---\ndef load_file(self) -> dict:\n",
        "input": "",
        "output": "Here is a complete function body.\n\n```python\ndef load_file(self) -> dict:\n    config = {}\n    with open(self.file_path, encoding=\"utf8\") as file:\n        if self.file_path.endswith((\".yaml\", \".yml\")):\n            config: dict = yaml.safe_load(file)\n        elif self.file_path.endswith(\".json\"):\n            config: dict = json.load(file)\n        else:\n            log(f\"Currently unsupported file types: {self.file_path}\")\n    return config\n```"
    },
    {
        "readme": "# easier-docker",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.py\n\u251c\u2500\u2500 easierdocker\n|   \u251c\u2500\u2500 __init__.py\n|   \u251c\u2500\u2500 __main__.py\n|   \u251c\u2500\u2500 config.py\n|   \u251c\u2500\u2500 constants.py\n|   \u251c\u2500\u2500 docker_utils.py\n|   \u251c\u2500\u2500 easier_docker.py # import docker;\n|   \u2514\u2500\u2500 exceptions.py\n\u2514\u2500\u2500 example\n    \u251c\u2500\u2500 docker_example.py\n    \u2514\u2500\u2500 example.py # from easierdocker import EasierDocker;",
        "relevant_file_paths": [],
        "relevant_file_sketches": "---\nCurrent File Sketch/1\n---\nHere is the file sketch of `easierdocker/docker_utils.py`.\n\n```python\nimport time\nfrom docker.models.containers import Container\nfrom .constants import ContainerStatus\nfrom .log_re import log\n\n\ndef check_container(container: Container) -> ContainerStatus:\n    \"\"\"TODO\"\"\"\n```",
        "current_file_path": "easierdocker/docker_utils.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as some relevant file sketches. Please fill the function body for the given function header.\n\n---\nREADME.md\n---\n# easier-docker\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.py\n\u251c\u2500\u2500 easierdocker\n|   \u251c\u2500\u2500 __init__.py\n|   \u251c\u2500\u2500 __main__.py\n|   \u251c\u2500\u2500 config.py\n|   \u251c\u2500\u2500 constants.py\n|   \u251c\u2500\u2500 docker_utils.py\n|   \u251c\u2500\u2500 easier_docker.py # import docker;\n|   \u2514\u2500\u2500 exceptions.py\n\u2514\u2500\u2500 example\n    \u251c\u2500\u2500 docker_example.py\n    \u2514\u2500\u2500 example.py # from easierdocker import EasierDocker;\n```\n\n---\nCurrent File Sketch/1\n---\nHere is the file sketch of `easierdocker/docker_utils.py`.\n\n```python\nimport time\nfrom docker.models.containers import Container\nfrom .constants import ContainerStatus\nfrom .log_re import log\n\n\ndef check_container(container: Container) -> ContainerStatus:\n    \"\"\"TODO\"\"\"\n```\n\n---\nFunction Complement\n---\ndef check_container(container: Container) -> ContainerStatus:\n",
        "input": "",
        "output": "Here is a complete function body.\n\n```python\ndef check_container(container: Container) -> ContainerStatus:\n    for _ in range(60):\n        time.sleep(1)\n        if container.status != ContainerStatus.RUNNING.name.lower():\n            container.reload()\n        elif container.status == ContainerStatus.RUNNING.name.lower():\n            return ContainerStatus.RUNNING\n        elif container.status == ContainerStatus.EXITED.name.lower():\n            log(f\"Container name: [{container.name}] is exited\")\n            return ContainerStatus.EXITED\n```"
    },
    {
        "readme": "# easier-docker",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.py\n\u251c\u2500\u2500 easierdocker\n|   \u251c\u2500\u2500 __init__.py\n|   \u251c\u2500\u2500 __main__.py\n|   \u251c\u2500\u2500 config.py\n|   \u251c\u2500\u2500 constants.py\n|   \u251c\u2500\u2500 docker_utils.py\n|   \u251c\u2500\u2500 easier_docker.py # import docker;\n|   \u2514\u2500\u2500 exceptions.py\n\u2514\u2500\u2500 example\n    \u251c\u2500\u2500 docker_example.py\n    \u2514\u2500\u2500 example.py # from easierdocker import EasierDocker;",
        "relevant_file_paths": [],
        "relevant_file_sketches": "---\nCurrent File Sketch/1\n---\nHere is the file sketch of `easierdocker/easier_docker.py`.\n\n```python\nimport json\nfrom typing import Union\nimport docker\nfrom docker.errors import APIError, DockerException, ImageNotFound\nfrom docker.models.containers import Container\nfrom .constants import ContainerStatus\nfrom .docker_utils import check_container\nfrom .exceptions import DockerConnectionError\nfrom .log_re import log\n\n\nclass EasierDocker:\n    def __init__(self, config: dict):\n        \"\"\"TODO\"\"\"\n\n    @property\n    def config(self):\n        pass\n\n    @property\n    def client(self):\n        pass\n\n    @property\n    def image_name(self):\n        pass\n\n    @property\n    def container_name(self):\n        pass\n\n    def __get_image(self):\n        pass\n\n    def __get_container(self) -> Union[Container, None]:\n        pass\n\n    def __run_container(self):\n        pass\n\n    def __get_all_networks(self) -> list:\n        pass\n\n    def create_network(self, network_name, driver):\n        pass\n\n    def start(self):\n        pass\n```",
        "current_file_path": "easierdocker/easier_docker.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as some relevant file sketches. Please fill the function body for the given function header.\n\n---\nREADME.md\n---\n# easier-docker\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.py\n\u251c\u2500\u2500 easierdocker\n|   \u251c\u2500\u2500 __init__.py\n|   \u251c\u2500\u2500 __main__.py\n|   \u251c\u2500\u2500 config.py\n|   \u251c\u2500\u2500 constants.py\n|   \u251c\u2500\u2500 docker_utils.py\n|   \u251c\u2500\u2500 easier_docker.py # import docker;\n|   \u2514\u2500\u2500 exceptions.py\n\u2514\u2500\u2500 example\n    \u251c\u2500\u2500 docker_example.py\n    \u2514\u2500\u2500 example.py # from easierdocker import EasierDocker;\n```\n\n---\nCurrent File Sketch/1\n---\nHere is the file sketch of `easierdocker/easier_docker.py`.\n\n```python\nimport json\nfrom typing import Union\nimport docker\nfrom docker.errors import APIError, DockerException, ImageNotFound\nfrom docker.models.containers import Container\nfrom .constants import ContainerStatus\nfrom .docker_utils import check_container\nfrom .exceptions import DockerConnectionError\nfrom .log_re import log\n\n\nclass EasierDocker:\n    def __init__(self, config: dict):\n        \"\"\"TODO\"\"\"\n\n    @property\n    def config(self):\n        pass\n\n    @property\n    def client(self):\n        pass\n\n    @property\n    def image_name(self):\n        pass\n\n    @property\n    def container_name(self):\n        pass\n\n    def __get_image(self):\n        pass\n\n    def __get_container(self) -> Union[Container, None]:\n        pass\n\n    def __run_container(self):\n        pass\n\n    def __get_all_networks(self) -> list:\n        pass\n\n    def create_network(self, network_name, driver):\n        pass\n\n    def start(self):\n        pass\n```\n\n---\nFunction Complement\n---\ndef __init__(self, config: dict):\n",
        "input": "",
        "output": "Here is a complete function body.\n\n```python\ndef __init__(self, config: dict):\n    self._config = config\n    self._image_name = self._config[\"image\"]\n    self._container_name = self._config[\"name\"]\n    try:\n        self._client = docker.from_env()\n    except Exception as e:\n        if isinstance(e, DockerException):\n            raise DockerConnectionError\n        raise e\n```"
    },
    {
        "readme": "# easier-docker",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.py\n\u251c\u2500\u2500 easierdocker\n|   \u251c\u2500\u2500 __init__.py\n|   \u251c\u2500\u2500 __main__.py\n|   \u251c\u2500\u2500 config.py\n|   \u251c\u2500\u2500 constants.py\n|   \u251c\u2500\u2500 docker_utils.py\n|   \u251c\u2500\u2500 easier_docker.py # import docker;\n|   \u2514\u2500\u2500 exceptions.py\n\u2514\u2500\u2500 example\n    \u251c\u2500\u2500 docker_example.py\n    \u2514\u2500\u2500 example.py # from easierdocker import EasierDocker;",
        "relevant_file_paths": [],
        "relevant_file_sketches": "---\nCurrent File Sketch/1\n---\nHere is the file sketch of `easierdocker/easier_docker.py`.\n\n```python\nimport json\nfrom typing import Union\nimport docker\nfrom docker.errors import APIError, DockerException, ImageNotFound\nfrom docker.models.containers import Container\nfrom .constants import ContainerStatus\nfrom .docker_utils import check_container\nfrom .exceptions import DockerConnectionError\nfrom .log_re import log\n\n\nclass EasierDocker:\n    def __init__(self, config: dict):\n        pass\n\n    @property\n    def config(self):\n        \"\"\"TODO\"\"\"\n\n    @property\n    def client(self):\n        pass\n\n    @property\n    def image_name(self):\n        pass\n\n    @property\n    def container_name(self):\n        pass\n\n    def __get_image(self):\n        pass\n\n    def __get_container(self) -> Union[Container, None]:\n        pass\n\n    def __run_container(self):\n        pass\n\n    def __get_all_networks(self) -> list:\n        pass\n\n    def create_network(self, network_name, driver):\n        pass\n\n    def start(self):\n        pass\n```",
        "current_file_path": "easierdocker/easier_docker.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as some relevant file sketches. Please fill the function body for the given function header.\n\n---\nREADME.md\n---\n# easier-docker\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.py\n\u251c\u2500\u2500 easierdocker\n|   \u251c\u2500\u2500 __init__.py\n|   \u251c\u2500\u2500 __main__.py\n|   \u251c\u2500\u2500 config.py\n|   \u251c\u2500\u2500 constants.py\n|   \u251c\u2500\u2500 docker_utils.py\n|   \u251c\u2500\u2500 easier_docker.py # import docker;\n|   \u2514\u2500\u2500 exceptions.py\n\u2514\u2500\u2500 example\n    \u251c\u2500\u2500 docker_example.py\n    \u2514\u2500\u2500 example.py # from easierdocker import EasierDocker;\n```\n\n---\nCurrent File Sketch/1\n---\nHere is the file sketch of `easierdocker/easier_docker.py`.\n\n```python\nimport json\nfrom typing import Union\nimport docker\nfrom docker.errors import APIError, DockerException, ImageNotFound\nfrom docker.models.containers import Container\nfrom .constants import ContainerStatus\nfrom .docker_utils import check_container\nfrom .exceptions import DockerConnectionError\nfrom .log_re import log\n\n\nclass EasierDocker:\n    def __init__(self, config: dict):\n        pass\n\n    @property\n    def config(self):\n        \"\"\"TODO\"\"\"\n\n    @property\n    def client(self):\n        pass\n\n    @property\n    def image_name(self):\n        pass\n\n    @property\n    def container_name(self):\n        pass\n\n    def __get_image(self):\n        pass\n\n    def __get_container(self) -> Union[Container, None]:\n        pass\n\n    def __run_container(self):\n        pass\n\n    def __get_all_networks(self) -> list:\n        pass\n\n    def create_network(self, network_name, driver):\n        pass\n\n    def start(self):\n        pass\n```\n\n---\nFunction Complement\n---\ndef __init__(self, config: dict):\n",
        "input": "",
        "output": "Here is a complete function body.\n\n```python\ndef __init__(self, config: dict):\n    return self._config\n```"
    },
    {
        "readme": "# easier-docker",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.py\n\u251c\u2500\u2500 easierdocker\n|   \u251c\u2500\u2500 __init__.py\n|   \u251c\u2500\u2500 __main__.py\n|   \u251c\u2500\u2500 config.py\n|   \u251c\u2500\u2500 constants.py\n|   \u251c\u2500\u2500 docker_utils.py\n|   \u251c\u2500\u2500 easier_docker.py # import docker;\n|   \u2514\u2500\u2500 exceptions.py\n\u2514\u2500\u2500 example\n    \u251c\u2500\u2500 docker_example.py\n    \u2514\u2500\u2500 example.py # from easierdocker import EasierDocker;",
        "relevant_file_paths": [],
        "relevant_file_sketches": "---\nCurrent File Sketch/1\n---\nHere is the file sketch of `easierdocker/easier_docker.py`.\n\n```python\nimport json\nfrom typing import Union\nimport docker\nfrom docker.errors import APIError, DockerException, ImageNotFound\nfrom docker.models.containers import Container\nfrom .constants import ContainerStatus\nfrom .docker_utils import check_container\nfrom .exceptions import DockerConnectionError\nfrom .log_re import log\n\n\nclass EasierDocker:\n    def __init__(self, config: dict):\n        pass\n\n    @property\n    def config(self):\n        pass\n\n    @property\n    def client(self):\n        \"\"\"TODO\"\"\"\n\n    @property\n    def image_name(self):\n        pass\n\n    @property\n    def container_name(self):\n        pass\n\n    def __get_image(self):\n        pass\n\n    def __get_container(self) -> Union[Container, None]:\n        pass\n\n    def __run_container(self):\n        pass\n\n    def __get_all_networks(self) -> list:\n        pass\n\n    def create_network(self, network_name, driver):\n        pass\n\n    def start(self):\n        pass\n```",
        "current_file_path": "easierdocker/easier_docker.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as some relevant file sketches. Please fill the function body for the given function header.\n\n---\nREADME.md\n---\n# easier-docker\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.py\n\u251c\u2500\u2500 easierdocker\n|   \u251c\u2500\u2500 __init__.py\n|   \u251c\u2500\u2500 __main__.py\n|   \u251c\u2500\u2500 config.py\n|   \u251c\u2500\u2500 constants.py\n|   \u251c\u2500\u2500 docker_utils.py\n|   \u251c\u2500\u2500 easier_docker.py # import docker;\n|   \u2514\u2500\u2500 exceptions.py\n\u2514\u2500\u2500 example\n    \u251c\u2500\u2500 docker_example.py\n    \u2514\u2500\u2500 example.py # from easierdocker import EasierDocker;\n```\n\n---\nCurrent File Sketch/1\n---\nHere is the file sketch of `easierdocker/easier_docker.py`.\n\n```python\nimport json\nfrom typing import Union\nimport docker\nfrom docker.errors import APIError, DockerException, ImageNotFound\nfrom docker.models.containers import Container\nfrom .constants import ContainerStatus\nfrom .docker_utils import check_container\nfrom .exceptions import DockerConnectionError\nfrom .log_re import log\n\n\nclass EasierDocker:\n    def __init__(self, config: dict):\n        pass\n\n    @property\n    def config(self):\n        pass\n\n    @property\n    def client(self):\n        \"\"\"TODO\"\"\"\n\n    @property\n    def image_name(self):\n        pass\n\n    @property\n    def container_name(self):\n        pass\n\n    def __get_image(self):\n        pass\n\n    def __get_container(self) -> Union[Container, None]:\n        pass\n\n    def __run_container(self):\n        pass\n\n    def __get_all_networks(self) -> list:\n        pass\n\n    def create_network(self, network_name, driver):\n        pass\n\n    def start(self):\n        pass\n```\n\n---\nFunction Complement\n---\ndef client(self):\n",
        "input": "",
        "output": "Here is a complete function body.\n\n```python\ndef client(self):\n    return self._client\n```"
    },
    {
        "readme": "# easier-docker",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.py\n\u251c\u2500\u2500 easierdocker\n|   \u251c\u2500\u2500 __init__.py\n|   \u251c\u2500\u2500 __main__.py\n|   \u251c\u2500\u2500 config.py\n|   \u251c\u2500\u2500 constants.py\n|   \u251c\u2500\u2500 docker_utils.py\n|   \u251c\u2500\u2500 easier_docker.py # import docker;\n|   \u2514\u2500\u2500 exceptions.py\n\u2514\u2500\u2500 example\n    \u251c\u2500\u2500 docker_example.py\n    \u2514\u2500\u2500 example.py # from easierdocker import EasierDocker;",
        "relevant_file_paths": [],
        "relevant_file_sketches": "---\nCurrent File Sketch/1\n---\nHere is the file sketch of `easierdocker/easier_docker.py`.\n\n```python\nimport json\nfrom typing import Union\nimport docker\nfrom docker.errors import APIError, DockerException, ImageNotFound\nfrom docker.models.containers import Container\nfrom .constants import ContainerStatus\nfrom .docker_utils import check_container\nfrom .exceptions import DockerConnectionError\nfrom .log_re import log\n\n\nclass EasierDocker:\n    def __init__(self, config: dict):\n        pass\n\n    @property\n    def config(self):\n        pass\n\n    @property\n    def client(self):\n        pass\n\n    @property\n    def image_name(self):\n        \"\"\"TODO\"\"\"\n\n    @property\n    def container_name(self):\n        pass\n\n    def __get_image(self):\n        pass\n\n    def __get_container(self) -> Union[Container, None]:\n        pass\n\n    def __run_container(self):\n        pass\n\n    def __get_all_networks(self) -> list:\n        pass\n\n    def create_network(self, network_name, driver):\n        pass\n\n    def start(self):\n        pass\n```",
        "current_file_path": "easierdocker/easier_docker.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as some relevant file sketches. Please fill the function body for the given function header.\n\n---\nREADME.md\n---\n# easier-docker\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.py\n\u251c\u2500\u2500 easierdocker\n|   \u251c\u2500\u2500 __init__.py\n|   \u251c\u2500\u2500 __main__.py\n|   \u251c\u2500\u2500 config.py\n|   \u251c\u2500\u2500 constants.py\n|   \u251c\u2500\u2500 docker_utils.py\n|   \u251c\u2500\u2500 easier_docker.py # import docker;\n|   \u2514\u2500\u2500 exceptions.py\n\u2514\u2500\u2500 example\n    \u251c\u2500\u2500 docker_example.py\n    \u2514\u2500\u2500 example.py # from easierdocker import EasierDocker;\n```\n\n---\nCurrent File Sketch/1\n---\nHere is the file sketch of `easierdocker/easier_docker.py`.\n\n```python\nimport json\nfrom typing import Union\nimport docker\nfrom docker.errors import APIError, DockerException, ImageNotFound\nfrom docker.models.containers import Container\nfrom .constants import ContainerStatus\nfrom .docker_utils import check_container\nfrom .exceptions import DockerConnectionError\nfrom .log_re import log\n\n\nclass EasierDocker:\n    def __init__(self, config: dict):\n        pass\n\n    @property\n    def config(self):\n        pass\n\n    @property\n    def client(self):\n        pass\n\n    @property\n    def image_name(self):\n        \"\"\"TODO\"\"\"\n\n    @property\n    def container_name(self):\n        pass\n\n    def __get_image(self):\n        pass\n\n    def __get_container(self) -> Union[Container, None]:\n        pass\n\n    def __run_container(self):\n        pass\n\n    def __get_all_networks(self) -> list:\n        pass\n\n    def create_network(self, network_name, driver):\n        pass\n\n    def start(self):\n        pass\n```\n\n---\nFunction Complement\n---\ndef image_name(self):\n",
        "input": "",
        "output": "Here is a complete function body.\n\n```python\ndef image_name(self):\n    return self._image_name\n```"
    },
    {
        "readme": "# easier-docker",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.py\n\u251c\u2500\u2500 easierdocker\n|   \u251c\u2500\u2500 __init__.py\n|   \u251c\u2500\u2500 __main__.py\n|   \u251c\u2500\u2500 config.py\n|   \u251c\u2500\u2500 constants.py\n|   \u251c\u2500\u2500 docker_utils.py\n|   \u251c\u2500\u2500 easier_docker.py # import docker;\n|   \u2514\u2500\u2500 exceptions.py\n\u2514\u2500\u2500 example\n    \u251c\u2500\u2500 docker_example.py\n    \u2514\u2500\u2500 example.py # from easierdocker import EasierDocker;",
        "relevant_file_paths": [],
        "relevant_file_sketches": "---\nCurrent File Sketch/1\n---\nHere is the file sketch of `easierdocker/easier_docker.py`.\n\n```python\nimport json\nfrom typing import Union\nimport docker\nfrom docker.errors import APIError, DockerException, ImageNotFound\nfrom docker.models.containers import Container\nfrom .constants import ContainerStatus\nfrom .docker_utils import check_container\nfrom .exceptions import DockerConnectionError\nfrom .log_re import log\n\n\nclass EasierDocker:\n    def __init__(self, config: dict):\n        pass\n\n    @property\n    def config(self):\n        pass\n\n    @property\n    def client(self):\n        pass\n\n    @property\n    def image_name(self):\n        pass\n\n    @property\n    def container_name(self):\n        \"\"\"TODO\"\"\"\n\n    def __get_image(self):\n        pass\n\n    def __get_container(self) -> Union[Container, None]:\n        pass\n\n    def __run_container(self):\n        pass\n\n    def __get_all_networks(self) -> list:\n        pass\n\n    def create_network(self, network_name, driver):\n        pass\n\n    def start(self):\n        pass\n```",
        "current_file_path": "easierdocker/easier_docker.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as some relevant file sketches. Please fill the function body for the given function header.\n\n---\nREADME.md\n---\n# easier-docker\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.py\n\u251c\u2500\u2500 easierdocker\n|   \u251c\u2500\u2500 __init__.py\n|   \u251c\u2500\u2500 __main__.py\n|   \u251c\u2500\u2500 config.py\n|   \u251c\u2500\u2500 constants.py\n|   \u251c\u2500\u2500 docker_utils.py\n|   \u251c\u2500\u2500 easier_docker.py # import docker;\n|   \u2514\u2500\u2500 exceptions.py\n\u2514\u2500\u2500 example\n    \u251c\u2500\u2500 docker_example.py\n    \u2514\u2500\u2500 example.py # from easierdocker import EasierDocker;\n```\n\n---\nCurrent File Sketch/1\n---\nHere is the file sketch of `easierdocker/easier_docker.py`.\n\n```python\nimport json\nfrom typing import Union\nimport docker\nfrom docker.errors import APIError, DockerException, ImageNotFound\nfrom docker.models.containers import Container\nfrom .constants import ContainerStatus\nfrom .docker_utils import check_container\nfrom .exceptions import DockerConnectionError\nfrom .log_re import log\n\n\nclass EasierDocker:\n    def __init__(self, config: dict):\n        pass\n\n    @property\n    def config(self):\n        pass\n\n    @property\n    def client(self):\n        pass\n\n    @property\n    def image_name(self):\n        pass\n\n    @property\n    def container_name(self):\n        \"\"\"TODO\"\"\"\n\n    def __get_image(self):\n        pass\n\n    def __get_container(self) -> Union[Container, None]:\n        pass\n\n    def __run_container(self):\n        pass\n\n    def __get_all_networks(self) -> list:\n        pass\n\n    def create_network(self, network_name, driver):\n        pass\n\n    def start(self):\n        pass\n```\n\n---\nFunction Complement\n---\ndef container_name(self):\n",
        "input": "",
        "output": "Here is a complete function body.\n\n```python\ndef container_name(self):\n    return self._container_name\n```"
    },
    {
        "readme": "# easier-docker",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.py\n\u251c\u2500\u2500 easierdocker\n|   \u251c\u2500\u2500 __init__.py\n|   \u251c\u2500\u2500 __main__.py\n|   \u251c\u2500\u2500 config.py\n|   \u251c\u2500\u2500 constants.py\n|   \u251c\u2500\u2500 docker_utils.py\n|   \u251c\u2500\u2500 easier_docker.py # import docker;\n|   \u2514\u2500\u2500 exceptions.py\n\u2514\u2500\u2500 example\n    \u251c\u2500\u2500 docker_example.py\n    \u2514\u2500\u2500 example.py # from easierdocker import EasierDocker;",
        "relevant_file_paths": [],
        "relevant_file_sketches": "---\nCurrent File Sketch/1\n---\nHere is the file sketch of `easierdocker/easier_docker.py`.\n\n```python\nimport json\nfrom typing import Union\nimport docker\nfrom docker.errors import APIError, DockerException, ImageNotFound\nfrom docker.models.containers import Container\nfrom .constants import ContainerStatus\nfrom .docker_utils import check_container\nfrom .exceptions import DockerConnectionError\nfrom .log_re import log\n\n\nclass EasierDocker:\n    def __init__(self, config: dict):\n        pass\n\n    @property\n    def config(self):\n        pass\n\n    @property\n    def client(self):\n        pass\n\n    @property\n    def image_name(self):\n        pass\n\n    @property\n    def container_name(self):\n        pass\n\n    def __get_image(self):\n        \"\"\"TODO\"\"\"\n\n    def __get_container(self) -> Union[Container, None]:\n        pass\n\n    def __run_container(self):\n        pass\n\n    def __get_all_networks(self) -> list:\n        pass\n\n    def create_network(self, network_name, driver):\n        pass\n\n    def start(self):\n        pass\n```",
        "current_file_path": "easierdocker/easier_docker.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as some relevant file sketches. Please fill the function body for the given function header.\n\n---\nREADME.md\n---\n# easier-docker\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.py\n\u251c\u2500\u2500 easierdocker\n|   \u251c\u2500\u2500 __init__.py\n|   \u251c\u2500\u2500 __main__.py\n|   \u251c\u2500\u2500 config.py\n|   \u251c\u2500\u2500 constants.py\n|   \u251c\u2500\u2500 docker_utils.py\n|   \u251c\u2500\u2500 easier_docker.py # import docker;\n|   \u2514\u2500\u2500 exceptions.py\n\u2514\u2500\u2500 example\n    \u251c\u2500\u2500 docker_example.py\n    \u2514\u2500\u2500 example.py # from easierdocker import EasierDocker;\n```\n\n---\nCurrent File Sketch/1\n---\nHere is the file sketch of `easierdocker/easier_docker.py`.\n\n```python\nimport json\nfrom typing import Union\nimport docker\nfrom docker.errors import APIError, DockerException, ImageNotFound\nfrom docker.models.containers import Container\nfrom .constants import ContainerStatus\nfrom .docker_utils import check_container\nfrom .exceptions import DockerConnectionError\nfrom .log_re import log\n\n\nclass EasierDocker:\n    def __init__(self, config: dict):\n        pass\n\n    @property\n    def config(self):\n        pass\n\n    @property\n    def client(self):\n        pass\n\n    @property\n    def image_name(self):\n        pass\n\n    @property\n    def container_name(self):\n        pass\n\n    def __get_image(self):\n        \"\"\"TODO\"\"\"\n\n    def __get_container(self) -> Union[Container, None]:\n        pass\n\n    def __run_container(self):\n        pass\n\n    def __get_all_networks(self) -> list:\n        pass\n\n    def create_network(self, network_name, driver):\n        pass\n\n    def start(self):\n        pass\n```\n\n---\nFunction Complement\n---\ndef __get_image(self):\n",
        "input": "",
        "output": "Here is a complete function body.\n\n```python\ndef __get_image(self):\n    log(f\"Find docker image: [{self.image_name}] locally...\")\n    try:\n        self._client.images.get(self.image_name)\n        log(f\"Image: [{self.image_name}] is found locally\")\n    except Exception as e:\n        if isinstance(e, ImageNotFound):\n            log(f\"ImageNotFound: {str(e)}, it will be pulled\")\n            log(f\"Waiting docker pull {self.image_name}...\")\n            for event in self._client.api.pull(self.image_name, stream=True):\n                event_info = json.loads(event.decode(\"utf-8\"))\n                if \"status\" in event_info:\n                    status = event_info[\"status\"]\n                    progress = event_info.get(\"progress\", \"\")\n                    log(f\"Status: {status}, Progress: {progress}\")\n            log(f\"Docker pull {self.image_name} finish\")\n        else:\n            log(str(e))\n```"
    },
    {
        "readme": "# easier-docker",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.py\n\u251c\u2500\u2500 easierdocker\n|   \u251c\u2500\u2500 __init__.py\n|   \u251c\u2500\u2500 __main__.py\n|   \u251c\u2500\u2500 config.py\n|   \u251c\u2500\u2500 constants.py\n|   \u251c\u2500\u2500 docker_utils.py\n|   \u251c\u2500\u2500 easier_docker.py # import docker;\n|   \u2514\u2500\u2500 exceptions.py\n\u2514\u2500\u2500 example\n    \u251c\u2500\u2500 docker_example.py\n    \u2514\u2500\u2500 example.py # from easierdocker import EasierDocker;",
        "relevant_file_paths": [],
        "relevant_file_sketches": "---\nCurrent File Sketch/1\n---\nHere is the file sketch of `easierdocker/easier_docker.py`.\n\n```python\nimport json\nfrom typing import Union\nimport docker\nfrom docker.errors import APIError, DockerException, ImageNotFound\nfrom docker.models.containers import Container\nfrom .constants import ContainerStatus\nfrom .docker_utils import check_container\nfrom .exceptions import DockerConnectionError\nfrom .log_re import log\n\n\nclass EasierDocker:\n    def __init__(self, config: dict):\n        pass\n\n    @property\n    def config(self):\n        pass\n\n    @property\n    def client(self):\n        pass\n\n    @property\n    def image_name(self):\n        pass\n\n    @property\n    def container_name(self):\n        pass\n\n    def __get_image(self):\n        pass\n\n    def __get_container(self) -> Union[Container, None]:\n        \"\"\"TODO\"\"\"\n\n    def __run_container(self):\n        pass\n\n    def __get_all_networks(self) -> list:\n        pass\n\n    def create_network(self, network_name, driver):\n        pass\n\n    def start(self):\n        pass\n```",
        "current_file_path": "easierdocker/easier_docker.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as some relevant file sketches. Please fill the function body for the given function header.\n\n---\nREADME.md\n---\n# easier-docker\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.py\n\u251c\u2500\u2500 easierdocker\n|   \u251c\u2500\u2500 __init__.py\n|   \u251c\u2500\u2500 __main__.py\n|   \u251c\u2500\u2500 config.py\n|   \u251c\u2500\u2500 constants.py\n|   \u251c\u2500\u2500 docker_utils.py\n|   \u251c\u2500\u2500 easier_docker.py # import docker;\n|   \u2514\u2500\u2500 exceptions.py\n\u2514\u2500\u2500 example\n    \u251c\u2500\u2500 docker_example.py\n    \u2514\u2500\u2500 example.py # from easierdocker import EasierDocker;\n```\n\n---\nCurrent File Sketch/1\n---\nHere is the file sketch of `easierdocker/easier_docker.py`.\n\n```python\nimport json\nfrom typing import Union\nimport docker\nfrom docker.errors import APIError, DockerException, ImageNotFound\nfrom docker.models.containers import Container\nfrom .constants import ContainerStatus\nfrom .docker_utils import check_container\nfrom .exceptions import DockerConnectionError\nfrom .log_re import log\n\n\nclass EasierDocker:\n    def __init__(self, config: dict):\n        pass\n\n    @property\n    def config(self):\n        pass\n\n    @property\n    def client(self):\n        pass\n\n    @property\n    def image_name(self):\n        pass\n\n    @property\n    def container_name(self):\n        pass\n\n    def __get_image(self):\n        pass\n\n    def __get_container(self) -> Union[Container, None]:\n        \"\"\"TODO\"\"\"\n\n    def __run_container(self):\n        pass\n\n    def __get_all_networks(self) -> list:\n        pass\n\n    def create_network(self, network_name, driver):\n        pass\n\n    def start(self):\n        pass\n```\n\n---\nFunction Complement\n---\ndef __get_container(self) -> Union[Container, None]:\n",
        "input": "",
        "output": "Here is a complete function body.\n\n```python\ndef __get_container(self) -> Union[Container, None]:\n    log(f\"Find docker container: [{self.container_name}] locally...\")\n    containers = self._client.containers.list(all=True)\n    for container in containers:\n        if self.container_name == container.name:\n            container.start()\n            if check_container(container) is ContainerStatus.EXITED:\n                return container\n            log(f\"Container name: [{container.name}] is found locally\")\n            log(f\"Container id: [{container.short_id}] is found locally\")\n            ip_address = container.attrs[\"NetworkSettings\"][\"IPAddress\"]\n            log(f\"Container ip address: [{ip_address}]\")\n            created_time = container.attrs[\"Created\"]\n            log(\n                f\"Successfully container continue running and be created at {created_time}\"\n            )\n            return container\n    log(f\"ContainerNotFound: [{self.container_name}], it will be created\")\n    return None\n```"
    },
    {
        "readme": "# easier-docker",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.py\n\u251c\u2500\u2500 easierdocker\n|   \u251c\u2500\u2500 __init__.py\n|   \u251c\u2500\u2500 __main__.py\n|   \u251c\u2500\u2500 config.py\n|   \u251c\u2500\u2500 constants.py\n|   \u251c\u2500\u2500 docker_utils.py\n|   \u251c\u2500\u2500 easier_docker.py # import docker;\n|   \u2514\u2500\u2500 exceptions.py\n\u2514\u2500\u2500 example\n    \u251c\u2500\u2500 docker_example.py\n    \u2514\u2500\u2500 example.py # from easierdocker import EasierDocker;",
        "relevant_file_paths": [],
        "relevant_file_sketches": "---\nCurrent File Sketch/1\n---\nHere is the file sketch of `easierdocker/easier_docker.py`.\n\n```python\nimport json\nfrom typing import Union\nimport docker\nfrom docker.errors import APIError, DockerException, ImageNotFound\nfrom docker.models.containers import Container\nfrom .constants import ContainerStatus\nfrom .docker_utils import check_container\nfrom .exceptions import DockerConnectionError\nfrom .log_re import log\n\n\nclass EasierDocker:\n    def __init__(self, config: dict):\n        pass\n\n    @property\n    def config(self):\n        pass\n\n    @property\n    def client(self):\n        pass\n\n    @property\n    def image_name(self):\n        pass\n\n    @property\n    def container_name(self):\n        pass\n\n    def __get_image(self):\n        pass\n\n    def __get_container(self) -> Union[Container, None]:\n        pass\n\n    def __run_container(self):\n        \"\"\"TODO\"\"\"\n\n    def __get_all_networks(self) -> list:\n        pass\n\n    def create_network(self, network_name, driver):\n        pass\n\n    def start(self):\n        pass\n```",
        "current_file_path": "easierdocker/easier_docker.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as some relevant file sketches. Please fill the function body for the given function header.\n\n---\nREADME.md\n---\n# easier-docker\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.py\n\u251c\u2500\u2500 easierdocker\n|   \u251c\u2500\u2500 __init__.py\n|   \u251c\u2500\u2500 __main__.py\n|   \u251c\u2500\u2500 config.py\n|   \u251c\u2500\u2500 constants.py\n|   \u251c\u2500\u2500 docker_utils.py\n|   \u251c\u2500\u2500 easier_docker.py # import docker;\n|   \u2514\u2500\u2500 exceptions.py\n\u2514\u2500\u2500 example\n    \u251c\u2500\u2500 docker_example.py\n    \u2514\u2500\u2500 example.py # from easierdocker import EasierDocker;\n```\n\n---\nCurrent File Sketch/1\n---\nHere is the file sketch of `easierdocker/easier_docker.py`.\n\n```python\nimport json\nfrom typing import Union\nimport docker\nfrom docker.errors import APIError, DockerException, ImageNotFound\nfrom docker.models.containers import Container\nfrom .constants import ContainerStatus\nfrom .docker_utils import check_container\nfrom .exceptions import DockerConnectionError\nfrom .log_re import log\n\n\nclass EasierDocker:\n    def __init__(self, config: dict):\n        pass\n\n    @property\n    def config(self):\n        pass\n\n    @property\n    def client(self):\n        pass\n\n    @property\n    def image_name(self):\n        pass\n\n    @property\n    def container_name(self):\n        pass\n\n    def __get_image(self):\n        pass\n\n    def __get_container(self) -> Union[Container, None]:\n        pass\n\n    def __run_container(self):\n        \"\"\"TODO\"\"\"\n\n    def __get_all_networks(self) -> list:\n        pass\n\n    def create_network(self, network_name, driver):\n        pass\n\n    def start(self):\n        pass\n```\n\n---\nFunction Complement\n---\ndef __run_container(self):\n",
        "input": "",
        "output": "Here is a complete function body.\n\n```python\ndef __run_container(self):\n    try:\n        container: Container = self._client.containers.run(**self.config)\n        if check_container(container) is ContainerStatus.EXITED:\n            return\n        log(f\"Container name: [{container.name}] is running\")\n        log(f\"Container id: [{container.short_id}] is running\")\n        ip_address = container.attrs[\"NetworkSettings\"][\"IPAddress\"]\n        log(f\"Container ip address: [{ip_address}]\")\n        created_time = container.attrs[\"Created\"]\n        log(f\"Successfully container is running and be created at {created_time}\")\n    except Exception as e:\n        if isinstance(e, APIError):\n            log(f\"Error starting container: {str(e)}\")\n        else:\n            log(f\"An error occurred: {str(e)}\")\n        raise e\n```"
    },
    {
        "readme": "# easier-docker",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.py\n\u251c\u2500\u2500 easierdocker\n|   \u251c\u2500\u2500 __init__.py\n|   \u251c\u2500\u2500 __main__.py\n|   \u251c\u2500\u2500 config.py\n|   \u251c\u2500\u2500 constants.py\n|   \u251c\u2500\u2500 docker_utils.py\n|   \u251c\u2500\u2500 easier_docker.py # import docker;\n|   \u2514\u2500\u2500 exceptions.py\n\u2514\u2500\u2500 example\n    \u251c\u2500\u2500 docker_example.py\n    \u2514\u2500\u2500 example.py # from easierdocker import EasierDocker;",
        "relevant_file_paths": [],
        "relevant_file_sketches": "---\nCurrent File Sketch/1\n---\nHere is the file sketch of `easierdocker/easier_docker.py`.\n\n```python\nimport json\nfrom typing import Union\nimport docker\nfrom docker.errors import APIError, DockerException, ImageNotFound\nfrom docker.models.containers import Container\nfrom .constants import ContainerStatus\nfrom .docker_utils import check_container\nfrom .exceptions import DockerConnectionError\nfrom .log_re import log\n\n\nclass EasierDocker:\n    def __init__(self, config: dict):\n        pass\n\n    @property\n    def config(self):\n        pass\n\n    @property\n    def client(self):\n        pass\n\n    @property\n    def image_name(self):\n        pass\n\n    @property\n    def container_name(self):\n        pass\n\n    def __get_image(self):\n        pass\n\n    def __get_container(self) -> Union[Container, None]:\n        pass\n\n    def __run_container(self):\n        pass\n\n    def __get_all_networks(self) -> list:\n        \"\"\"TODO\"\"\"\n\n    def create_network(self, network_name, driver):\n        pass\n\n    def start(self):\n        pass\n```",
        "current_file_path": "easierdocker/easier_docker.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as some relevant file sketches. Please fill the function body for the given function header.\n\n---\nREADME.md\n---\n# easier-docker\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.py\n\u251c\u2500\u2500 easierdocker\n|   \u251c\u2500\u2500 __init__.py\n|   \u251c\u2500\u2500 __main__.py\n|   \u251c\u2500\u2500 config.py\n|   \u251c\u2500\u2500 constants.py\n|   \u251c\u2500\u2500 docker_utils.py\n|   \u251c\u2500\u2500 easier_docker.py # import docker;\n|   \u2514\u2500\u2500 exceptions.py\n\u2514\u2500\u2500 example\n    \u251c\u2500\u2500 docker_example.py\n    \u2514\u2500\u2500 example.py # from easierdocker import EasierDocker;\n```\n\n---\nCurrent File Sketch/1\n---\nHere is the file sketch of `easierdocker/easier_docker.py`.\n\n```python\nimport json\nfrom typing import Union\nimport docker\nfrom docker.errors import APIError, DockerException, ImageNotFound\nfrom docker.models.containers import Container\nfrom .constants import ContainerStatus\nfrom .docker_utils import check_container\nfrom .exceptions import DockerConnectionError\nfrom .log_re import log\n\n\nclass EasierDocker:\n    def __init__(self, config: dict):\n        pass\n\n    @property\n    def config(self):\n        pass\n\n    @property\n    def client(self):\n        pass\n\n    @property\n    def image_name(self):\n        pass\n\n    @property\n    def container_name(self):\n        pass\n\n    def __get_image(self):\n        pass\n\n    def __get_container(self) -> Union[Container, None]:\n        pass\n\n    def __run_container(self):\n        pass\n\n    def __get_all_networks(self) -> list:\n        \"\"\"TODO\"\"\"\n\n    def create_network(self, network_name, driver):\n        pass\n\n    def start(self):\n        pass\n```\n\n---\nFunction Complement\n---\ndef __get_all_networks(self) -> list:\n",
        "input": "",
        "output": "Here is a complete function body.\n\n```python\ndef __get_all_networks(self) -> list:\n    networks = self._client.networks.list()\n    for network in networks:\n        log(f\"Network id: [{network.short_id}], name: [{network.name}]\")\n    return networks\n```"
    },
    {
        "readme": "# easier-docker",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.py\n\u251c\u2500\u2500 easierdocker\n|   \u251c\u2500\u2500 __init__.py\n|   \u251c\u2500\u2500 __main__.py\n|   \u251c\u2500\u2500 config.py\n|   \u251c\u2500\u2500 constants.py\n|   \u251c\u2500\u2500 docker_utils.py\n|   \u251c\u2500\u2500 easier_docker.py # import docker;\n|   \u2514\u2500\u2500 exceptions.py\n\u2514\u2500\u2500 example\n    \u251c\u2500\u2500 docker_example.py\n    \u2514\u2500\u2500 example.py # from easierdocker import EasierDocker;",
        "relevant_file_paths": [],
        "relevant_file_sketches": "---\nCurrent File Sketch/1\n---\nHere is the file sketch of `easierdocker/easier_docker.py`.\n\n```python\nimport json\nfrom typing import Union\nimport docker\nfrom docker.errors import APIError, DockerException, ImageNotFound\nfrom docker.models.containers import Container\nfrom .constants import ContainerStatus\nfrom .docker_utils import check_container\nfrom .exceptions import DockerConnectionError\nfrom .log_re import log\n\n\nclass EasierDocker:\n    def __init__(self, config: dict):\n        pass\n\n    @property\n    def config(self):\n        pass\n\n    @property\n    def client(self):\n        pass\n\n    @property\n    def image_name(self):\n        pass\n\n    @property\n    def container_name(self):\n        pass\n\n    def __get_image(self):\n        pass\n\n    def __get_container(self) -> Union[Container, None]:\n        pass\n\n    def __run_container(self):\n        pass\n\n    def __get_all_networks(self) -> list:\n        pass\n\n    def create_network(self, network_name, driver):\n        \"\"\"TODO\"\"\"\n\n    def start(self):\n        pass\n```",
        "current_file_path": "easierdocker/easier_docker.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as some relevant file sketches. Please fill the function body for the given function header.\n\n---\nREADME.md\n---\n# easier-docker\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.py\n\u251c\u2500\u2500 easierdocker\n|   \u251c\u2500\u2500 __init__.py\n|   \u251c\u2500\u2500 __main__.py\n|   \u251c\u2500\u2500 config.py\n|   \u251c\u2500\u2500 constants.py\n|   \u251c\u2500\u2500 docker_utils.py\n|   \u251c\u2500\u2500 easier_docker.py # import docker;\n|   \u2514\u2500\u2500 exceptions.py\n\u2514\u2500\u2500 example\n    \u251c\u2500\u2500 docker_example.py\n    \u2514\u2500\u2500 example.py # from easierdocker import EasierDocker;\n```\n\n---\nCurrent File Sketch/1\n---\nHere is the file sketch of `easierdocker/easier_docker.py`.\n\n```python\nimport json\nfrom typing import Union\nimport docker\nfrom docker.errors import APIError, DockerException, ImageNotFound\nfrom docker.models.containers import Container\nfrom .constants import ContainerStatus\nfrom .docker_utils import check_container\nfrom .exceptions import DockerConnectionError\nfrom .log_re import log\n\n\nclass EasierDocker:\n    def __init__(self, config: dict):\n        pass\n\n    @property\n    def config(self):\n        pass\n\n    @property\n    def client(self):\n        pass\n\n    @property\n    def image_name(self):\n        pass\n\n    @property\n    def container_name(self):\n        pass\n\n    def __get_image(self):\n        pass\n\n    def __get_container(self) -> Union[Container, None]:\n        pass\n\n    def __run_container(self):\n        pass\n\n    def __get_all_networks(self) -> list:\n        pass\n\n    def create_network(self, network_name, driver):\n        \"\"\"TODO\"\"\"\n\n    def start(self):\n        pass\n```\n\n---\nFunction Complement\n---\ndef create_network(self, network_name, driver):\n",
        "input": "",
        "output": "Here is a complete function body.\n\n```python\ndef create_network(self, network_name, driver):\n    networks = self.__get_all_networks()\n    for network in networks:\n        if network.name == network_name:\n            log(f\"Network: [{network_name}] is found locally...\")\n            self._config[\"network\"] = network_name\n            return\n    log(f\"Network: [{network_name}] is not found locally, it will be created\")\n    self._client.networks.create(network_name, driver)\n    log(f\"Network: [{network_name}] is created\")\n    self._config[\"network\"] = network_name\n```"
    },
    {
        "readme": "# easier-docker",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.py\n\u251c\u2500\u2500 easierdocker\n|   \u251c\u2500\u2500 __init__.py\n|   \u251c\u2500\u2500 __main__.py\n|   \u251c\u2500\u2500 config.py\n|   \u251c\u2500\u2500 constants.py\n|   \u251c\u2500\u2500 docker_utils.py\n|   \u251c\u2500\u2500 easier_docker.py # import docker;\n|   \u2514\u2500\u2500 exceptions.py\n\u2514\u2500\u2500 example\n    \u251c\u2500\u2500 docker_example.py\n    \u2514\u2500\u2500 example.py # from easierdocker import EasierDocker;",
        "relevant_file_paths": [],
        "relevant_file_sketches": "---\nCurrent File Sketch/1\n---\nHere is the file sketch of `easierdocker/easier_docker.py`.\n\n```python\nimport json\nfrom typing import Union\nimport docker\nfrom docker.errors import APIError, DockerException, ImageNotFound\nfrom docker.models.containers import Container\nfrom .constants import ContainerStatus\nfrom .docker_utils import check_container\nfrom .exceptions import DockerConnectionError\nfrom .log_re import log\n\n\nclass EasierDocker:\n    def __init__(self, config: dict):\n        pass\n\n    @property\n    def config(self):\n        pass\n\n    @property\n    def client(self):\n        pass\n\n    @property\n    def image_name(self):\n        pass\n\n    @property\n    def container_name(self):\n        pass\n\n    def __get_image(self):\n        pass\n\n    def __get_container(self) -> Union[Container, None]:\n        pass\n\n    def __run_container(self):\n        pass\n\n    def __get_all_networks(self) -> list:\n        pass\n\n    def create_network(self, network_name, driver):\n        pass\n\n    def start(self):\n        \"\"\"TODO\"\"\"\n```",
        "current_file_path": "easierdocker/easier_docker.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as some relevant file sketches. Please fill the function body for the given function header.\n\n---\nREADME.md\n---\n# easier-docker\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.py\n\u251c\u2500\u2500 easierdocker\n|   \u251c\u2500\u2500 __init__.py\n|   \u251c\u2500\u2500 __main__.py\n|   \u251c\u2500\u2500 config.py\n|   \u251c\u2500\u2500 constants.py\n|   \u251c\u2500\u2500 docker_utils.py\n|   \u251c\u2500\u2500 easier_docker.py # import docker;\n|   \u2514\u2500\u2500 exceptions.py\n\u2514\u2500\u2500 example\n    \u251c\u2500\u2500 docker_example.py\n    \u2514\u2500\u2500 example.py # from easierdocker import EasierDocker;\n```\n\n---\nCurrent File Sketch/1\n---\nHere is the file sketch of `easierdocker/easier_docker.py`.\n\n```python\nimport json\nfrom typing import Union\nimport docker\nfrom docker.errors import APIError, DockerException, ImageNotFound\nfrom docker.models.containers import Container\nfrom .constants import ContainerStatus\nfrom .docker_utils import check_container\nfrom .exceptions import DockerConnectionError\nfrom .log_re import log\n\n\nclass EasierDocker:\n    def __init__(self, config: dict):\n        pass\n\n    @property\n    def config(self):\n        pass\n\n    @property\n    def client(self):\n        pass\n\n    @property\n    def image_name(self):\n        pass\n\n    @property\n    def container_name(self):\n        pass\n\n    def __get_image(self):\n        pass\n\n    def __get_container(self) -> Union[Container, None]:\n        pass\n\n    def __run_container(self):\n        pass\n\n    def __get_all_networks(self) -> list:\n        pass\n\n    def create_network(self, network_name, driver):\n        pass\n\n    def start(self):\n        \"\"\"TODO\"\"\"\n```\n\n---\nFunction Complement\n---\ndef start(self):\n",
        "input": "",
        "output": "Here is a complete function body.\n\n```python\ndef start(self):\n    self.__get_image()\n    container = self.__get_container()\n    if container is None:\n        self.__run_container()\n```"
    },
    {
        "readme": "# easier-docker",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.py\n\u251c\u2500\u2500 easierdocker\n|   \u251c\u2500\u2500 __init__.py\n|   \u251c\u2500\u2500 __main__.py\n|   \u251c\u2500\u2500 config.py\n|   \u251c\u2500\u2500 constants.py\n|   \u251c\u2500\u2500 docker_utils.py\n|   \u251c\u2500\u2500 easier_docker.py # import docker;\n|   \u2514\u2500\u2500 exceptions.py\n\u2514\u2500\u2500 example\n    \u251c\u2500\u2500 docker_example.py\n    \u2514\u2500\u2500 example.py # from easierdocker import EasierDocker;",
        "relevant_file_paths": [],
        "relevant_file_sketches": "---\nCurrent File Sketch/1\n---\nHere is the file sketch of `easierdocker/exceptions.py`.\n\n```python\nclass DockerConnectionError(Exception):\n    def __init__(\n        self,\n        message=\"Unable to connect to Docker server, please make sure dockers is running.\",\n    ):\n        \"\"\"TODO\"\"\"\n```",
        "current_file_path": "easierdocker/exceptions.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as some relevant file sketches. Please fill the function body for the given function header.\n\n---\nREADME.md\n---\n# easier-docker\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.py\n\u251c\u2500\u2500 easierdocker\n|   \u251c\u2500\u2500 __init__.py\n|   \u251c\u2500\u2500 __main__.py\n|   \u251c\u2500\u2500 config.py\n|   \u251c\u2500\u2500 constants.py\n|   \u251c\u2500\u2500 docker_utils.py\n|   \u251c\u2500\u2500 easier_docker.py # import docker;\n|   \u2514\u2500\u2500 exceptions.py\n\u2514\u2500\u2500 example\n    \u251c\u2500\u2500 docker_example.py\n    \u2514\u2500\u2500 example.py # from easierdocker import EasierDocker;\n```\n\n---\nCurrent File Sketch/1\n---\nHere is the file sketch of `easierdocker/exceptions.py`.\n\n```python\nclass DockerConnectionError(Exception):\n    def __init__(\n        self,\n        message=\"Unable to connect to Docker server, please make sure dockers is running.\",\n    ):\n        \"\"\"TODO\"\"\"\n```\n\n---\nFunction Complement\n---\ndef __init__(\n    self,\n    message=\"Unable to connect to Docker server, please make sure dockers is running.\",\n):\n",
        "input": "",
        "output": "Here is a complete function body.\n\n```python\ndef __init__(\n    self,\n    message=\"Unable to connect to Docker server, please make sure dockers is running.\",\n):\n    self.message = message\n    super().__init__(self.message)\n```"
    },
    {
        "readme": "# easier-docker",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.py\n\u251c\u2500\u2500 easierdocker\n|   \u251c\u2500\u2500 __init__.py\n|   \u251c\u2500\u2500 __main__.py\n|   \u251c\u2500\u2500 config.py\n|   \u251c\u2500\u2500 constants.py\n|   \u251c\u2500\u2500 docker_utils.py\n|   \u251c\u2500\u2500 easier_docker.py # import docker;\n|   \u2514\u2500\u2500 exceptions.py\n\u2514\u2500\u2500 example\n    \u251c\u2500\u2500 docker_example.py\n    \u2514\u2500\u2500 example.py # from easierdocker import EasierDocker;",
        "relevant_file_paths": [],
        "relevant_file_sketches": "---\nCurrent File Sketch/1\n---\nHere is the file sketch of `example/docker_example.py`.\n\n```python\ndef main():\n    \"\"\"TODO\"\"\"\n\n\nif __name__ == \"__main__\":\n    main()\n```",
        "current_file_path": "example/docker_example.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as some relevant file sketches. Please fill the function body for the given function header.\n\n---\nREADME.md\n---\n# easier-docker\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.py\n\u251c\u2500\u2500 easierdocker\n|   \u251c\u2500\u2500 __init__.py\n|   \u251c\u2500\u2500 __main__.py\n|   \u251c\u2500\u2500 config.py\n|   \u251c\u2500\u2500 constants.py\n|   \u251c\u2500\u2500 docker_utils.py\n|   \u251c\u2500\u2500 easier_docker.py # import docker;\n|   \u2514\u2500\u2500 exceptions.py\n\u2514\u2500\u2500 example\n    \u251c\u2500\u2500 docker_example.py\n    \u2514\u2500\u2500 example.py # from easierdocker import EasierDocker;\n```\n\n---\nCurrent File Sketch/1\n---\nHere is the file sketch of `example/docker_example.py`.\n\n```python\ndef main():\n    \"\"\"TODO\"\"\"\n\n\nif __name__ == \"__main__\":\n    main()\n```\n\n---\nFunction Complement\n---\ndef main():\n",
        "input": "",
        "output": "Here is a complete function body.\n\n```python\ndef main():\n    import logging\n    import time\n\n    for i in range(1, 101):\n        logger = logging.getLogger(\"easier-docker\")\n        logging.basicConfig(\n            level=logging.INFO,\n            format=\"%(asctime)s - %(levelname)s - %(name)s ==> %(message)s\",\n        )\n        logger.info(f\"sleep 30s, times:{i}\")\n        time.sleep(30)\n```"
    }
]