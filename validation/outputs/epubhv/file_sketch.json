[
    {
        "readme": "# epubhv\n\nepubhv is a tool to make your epub books vertical or horizontal or make them readable for language learners.\n\n## Features\n\n- Make your epub books vertical or horizontal\n- Translate your epub books between `\u7b80\u4f53` and `\u7e41\u4f53`\n- Add `ruby` for Japanese(furigana) and Chinese(pinyin)\n- Add `ruby` for `cantonese`\n\n## Using pipx\n\nIf you are using [pipx](https://pypi.org/project/pipx/), you can directly run `epubhv` with:\n\n```console\npipx run epubhv a.epub\n```\n\n## Use the web\n\n```console\npip install epubhv[web]\nstreamlit run web.py\n```\n\n## Use CLI\n\n```console\nepubhv a.epub # will generate a file a-v.epub that is vertical\n# or\nepubhv b.epub --h # will generate a file b-h.epub that is horizontal\n\n# if you also want to translate from `\u7b80\u4f53 -> \u7e41\u4f53`\nepubhv c.epub --convert s2t\n\n# if you also want to translate from `\u7e41\u4f53 -> \u7b80\u4f53`\nepubhv d.epub --h --convert t2s\n\n# or a folder contains butch of epubs\nepubhv tests/test_epub # will generate all epub files to epub-v\n\n# you can specify the punctuation style\nepubhv e.epub --convert s2t --punctuation auto\n# you can add `ruby` for Japanese(furigana) and Chinese(pinyin)\nepubhv e.epub --h --ruby\n# if you want to learn `cantonese` \u7ca4\u8bed\nepubhv f.epub --h --ruby --cantonese\n```",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.sh\n\u251c\u2500\u2500 web.py # from epubhv import EPUBHV;\n\u2514\u2500\u2500 epubhv\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __main__.py\n    \u251c\u2500\u2500 cli.py\n    \u251c\u2500\u2500 epubhv.py\n    \u251c\u2500\u2500 punctuation.py\n    \u2514\u2500\u2500 yomituki.py",
        "file_path": "setup.sh",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as a file path. Please write a corresponding file sketch.\n\n---\nREADME.md\n---\n# epubhv\n\nepubhv is a tool to make your epub books vertical or horizontal or make them readable for language learners.\n\n## Features\n\n- Make your epub books vertical or horizontal\n- Translate your epub books between `\u7b80\u4f53` and `\u7e41\u4f53`\n- Add `ruby` for Japanese(furigana) and Chinese(pinyin)\n- Add `ruby` for `cantonese`\n\n## Using pipx\n\nIf you are using [pipx](https://pypi.org/project/pipx/), you can directly run `epubhv` with:\n\n```console\npipx run epubhv a.epub\n```\n\n## Use the web\n\n```console\npip install epubhv[web]\nstreamlit run web.py\n```\n\n## Use CLI\n\n```console\nepubhv a.epub # will generate a file a-v.epub that is vertical\n# or\nepubhv b.epub --h # will generate a file b-h.epub that is horizontal\n\n# if you also want to translate from `\u7b80\u4f53 -> \u7e41\u4f53`\nepubhv c.epub --convert s2t\n\n# if you also want to translate from `\u7e41\u4f53 -> \u7b80\u4f53`\nepubhv d.epub --h --convert t2s\n\n# or a folder contains butch of epubs\nepubhv tests/test_epub # will generate all epub files to epub-v\n\n# you can specify the punctuation style\nepubhv e.epub --convert s2t --punctuation auto\n# you can add `ruby` for Japanese(furigana) and Chinese(pinyin)\nepubhv e.epub --h --ruby\n# if you want to learn `cantonese` \u7ca4\u8bed\nepubhv f.epub --h --ruby --cantonese\n```\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.sh\n\u251c\u2500\u2500 web.py # from epubhv import EPUBHV;\n\u2514\u2500\u2500 epubhv\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __main__.py\n    \u251c\u2500\u2500 cli.py\n    \u251c\u2500\u2500 epubhv.py\n    \u251c\u2500\u2500 punctuation.py\n    \u2514\u2500\u2500 yomituki.py\n```\n\n---\nFile Path\n---\nsetup.sh\n\n---\nFile Sketch\n---\n",
        "input": "",
        "output": "Here is a practicable file content.\n\n```bash\n#!/bin/sh\n\n# Check if the poetry is installed\nif\n    ! command -v pdm &> /dev/null\nthen\n    echo \"PDM could not be found\"\n    echo \"Attempting to Install PDM\"\n\n    # Install poetry for python dependency management\n    curl -sSL https://pdm.fming.dev/install-pdm.py | python3 -\nfi\n# Install python dependencies (including development-only ones)\npdm install -d\npdm venv activate\n```"
    },
    {
        "readme": "# epubhv\n\nepubhv is a tool to make your epub books vertical or horizontal or make them readable for language learners.\n\n## Features\n\n- Make your epub books vertical or horizontal\n- Translate your epub books between `\u7b80\u4f53` and `\u7e41\u4f53`\n- Add `ruby` for Japanese(furigana) and Chinese(pinyin)\n- Add `ruby` for `cantonese`\n\n## Using pipx\n\nIf you are using [pipx](https://pypi.org/project/pipx/), you can directly run `epubhv` with:\n\n```console\npipx run epubhv a.epub\n```\n\n## Use the web\n\n```console\npip install epubhv[web]\nstreamlit run web.py\n```\n\n## Use CLI\n\n```console\nepubhv a.epub # will generate a file a-v.epub that is vertical\n# or\nepubhv b.epub --h # will generate a file b-h.epub that is horizontal\n\n# if you also want to translate from `\u7b80\u4f53 -> \u7e41\u4f53`\nepubhv c.epub --convert s2t\n\n# if you also want to translate from `\u7e41\u4f53 -> \u7b80\u4f53`\nepubhv d.epub --h --convert t2s\n\n# or a folder contains butch of epubs\nepubhv tests/test_epub # will generate all epub files to epub-v\n\n# you can specify the punctuation style\nepubhv e.epub --convert s2t --punctuation auto\n# you can add `ruby` for Japanese(furigana) and Chinese(pinyin)\nepubhv e.epub --h --ruby\n# if you want to learn `cantonese` \u7ca4\u8bed\nepubhv f.epub --h --ruby --cantonese\n```",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.sh\n\u251c\u2500\u2500 web.py # from epubhv import EPUBHV;\n\u2514\u2500\u2500 epubhv\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __main__.py\n    \u251c\u2500\u2500 cli.py\n    \u251c\u2500\u2500 epubhv.py\n    \u251c\u2500\u2500 punctuation.py\n    \u2514\u2500\u2500 yomituki.py",
        "file_path": "web.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as a file path. Please write a corresponding file sketch.\n\n---\nREADME.md\n---\n# epubhv\n\nepubhv is a tool to make your epub books vertical or horizontal or make them readable for language learners.\n\n## Features\n\n- Make your epub books vertical or horizontal\n- Translate your epub books between `\u7b80\u4f53` and `\u7e41\u4f53`\n- Add `ruby` for Japanese(furigana) and Chinese(pinyin)\n- Add `ruby` for `cantonese`\n\n## Using pipx\n\nIf you are using [pipx](https://pypi.org/project/pipx/), you can directly run `epubhv` with:\n\n```console\npipx run epubhv a.epub\n```\n\n## Use the web\n\n```console\npip install epubhv[web]\nstreamlit run web.py\n```\n\n## Use CLI\n\n```console\nepubhv a.epub # will generate a file a-v.epub that is vertical\n# or\nepubhv b.epub --h # will generate a file b-h.epub that is horizontal\n\n# if you also want to translate from `\u7b80\u4f53 -> \u7e41\u4f53`\nepubhv c.epub --convert s2t\n\n# if you also want to translate from `\u7e41\u4f53 -> \u7b80\u4f53`\nepubhv d.epub --h --convert t2s\n\n# or a folder contains butch of epubs\nepubhv tests/test_epub # will generate all epub files to epub-v\n\n# you can specify the punctuation style\nepubhv e.epub --convert s2t --punctuation auto\n# you can add `ruby` for Japanese(furigana) and Chinese(pinyin)\nepubhv e.epub --h --ruby\n# if you want to learn `cantonese` \u7ca4\u8bed\nepubhv f.epub --h --ruby --cantonese\n```\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.sh\n\u251c\u2500\u2500 web.py # from epubhv import EPUBHV;\n\u2514\u2500\u2500 epubhv\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __main__.py\n    \u251c\u2500\u2500 cli.py\n    \u251c\u2500\u2500 epubhv.py\n    \u251c\u2500\u2500 punctuation.py\n    \u2514\u2500\u2500 yomituki.py\n```\n\n---\nFile Path\n---\nweb.py\n\n---\nFile Sketch\n---\n",
        "input": "",
        "output": "Here is a practicable file sketch.\n\n```python\nimport base64\nimport tempfile\nfrom pathlib import Path\nimport streamlit as st\nimport streamlit.components.v1 as components\nfrom epubhv import EPUBHV\n\nLABELS = {\n    \"none\": \"None\",\n    \"auto\": \"Auto\",\n    \"s2t\": \"Simplified Chinese to Traditional Chinese\",\n    \"t2s\": \"Traditional Chinese to Simplified Chinese\",\n    \"s2tw\": \"Simplified Chinese to Traditional Chinese (Taiwan Standard)\",\n    \"tw2s\": \"Traditional Chinese (Taiwan Standard) to Simplified Chinese\",\n    \"s2hk\": \"Simplified Chinese to Traditional Chinese (Hong Kong variant)\",\n    \"hk2s\": \"Traditional Chinese (Hong Kong variant) to Simplified Chinese\",\n    \"s2twp\": \"Simplified Chinese to Traditional Chinese (Taiwan variant)\",\n    \"tw2sp\": \"Traditional Chinese (Taiwan variant) to Simplified Chinese\",\n    \"t2tw\": \"Traditional Chinese (OpenCC Standard) to Taiwan Standard\",\n    \"hk2t\": \"Traditional Chinese (Hong Kong variant) to Traditional Chinese\",\n    \"t2hk\": \"Traditional Chinese (OpenCC Standard) to Hong Kong variant\",\n    \"t2jp\": \"Traditional Chinese Characters (Ky\u016bjitai) to New Japanese Kanji\",\n    \"jp2t\": \"New Japanese Kanji to Traditional Chinese Characters (Ky\u016bjitai)\",\n    \"tw2t\": \"Traditional Chinese (OpenCC Standard) to Traditional Chinese (Taiwan standard)\",\n}\n\n\ndef download_button(data: bytes, download_filename: str) -> None:\n    pass\n\n\nst.set_page_config(\n    page_title=\"EPUBHV, a toolset to convert your EPUB\",\n    page_icon=\"\ud83d\udcd6\",\n    layout=\"centered\",\n    initial_sidebar_state=\"auto\",\n    menu_items=None,\n)\nst.header(\"\ud83d\udcd6 EPUBHV, a toolset to convert your EPUB\", divider=\"rainbow\")\nst.caption(\n    \"Author: [@yihong0618](https://github.com/yihong0618) | [GitHub](https://github.com/yihong0618/epubhv) | [PyPI](https://pypi.org/project/epubhv/)\"\n)\n\n\ndef run():\n    pass\n\n\nwith st.form(key=\"my_form\"):\n    epubfile = st.file_uploader(\"Upload an epub file\", type=\"epub\", key=\"epubfile\")\n    method = st.radio(\n        \"Choose a method\",\n        (\"to_vertical\", \"to_horizontal\"),\n        format_func=lambda x: x.replace(\"_\", \" \").title(),\n        horizontal=True,\n        key=\"method\",\n    )\n    need_ruby = st.checkbox(\"Need ruby\", key=\"need_ruby\")\n    need_cantonese = st.checkbox(\"Need cantonese\", key=\"need_cantonese\")\n    convert = st.selectbox(\n        \"Transform text\",\n        options=[\n            \"none\",\n            \"s2t\",\n            \"t2s\",\n            \"s2tw\",\n            \"tw2s\",\n            \"s2hk\",\n            \"hk2s\",\n            \"s2twp\",\n            \"tw2sp\",\n            \"t2tw\",\n            \"hk2t\",\n            \"t2hk\",\n            \"t2jp\",\n            \"jp2t\",\n            \"tw2t\",\n        ],\n        format_func=LABELS.__getitem__,\n        key=\"convert\",\n    )\n    punctuation = st.selectbox(\n        \"Transform punctuation\",\n        options=[\"auto\", \"t2s\", \"s2t\", \"none\"],\n        format_func=LABELS.__getitem__,\n        key=\"punctuation\",\n    )\n    st.form_submit_button(label=\"Transform\", on_click=run)\n```"
    },
    {
        "readme": "# epubhv\n\nepubhv is a tool to make your epub books vertical or horizontal or make them readable for language learners.\n\n## Features\n\n- Make your epub books vertical or horizontal\n- Translate your epub books between `\u7b80\u4f53` and `\u7e41\u4f53`\n- Add `ruby` for Japanese(furigana) and Chinese(pinyin)\n- Add `ruby` for `cantonese`\n\n## Using pipx\n\nIf you are using [pipx](https://pypi.org/project/pipx/), you can directly run `epubhv` with:\n\n```console\npipx run epubhv a.epub\n```\n\n## Use the web\n\n```console\npip install epubhv[web]\nstreamlit run web.py\n```\n\n## Use CLI\n\n```console\nepubhv a.epub # will generate a file a-v.epub that is vertical\n# or\nepubhv b.epub --h # will generate a file b-h.epub that is horizontal\n\n# if you also want to translate from `\u7b80\u4f53 -> \u7e41\u4f53`\nepubhv c.epub --convert s2t\n\n# if you also want to translate from `\u7e41\u4f53 -> \u7b80\u4f53`\nepubhv d.epub --h --convert t2s\n\n# or a folder contains butch of epubs\nepubhv tests/test_epub # will generate all epub files to epub-v\n\n# you can specify the punctuation style\nepubhv e.epub --convert s2t --punctuation auto\n# you can add `ruby` for Japanese(furigana) and Chinese(pinyin)\nepubhv e.epub --h --ruby\n# if you want to learn `cantonese` \u7ca4\u8bed\nepubhv f.epub --h --ruby --cantonese\n```",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.sh\n\u251c\u2500\u2500 web.py # from epubhv import EPUBHV;\n\u2514\u2500\u2500 epubhv\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __main__.py\n    \u251c\u2500\u2500 cli.py\n    \u251c\u2500\u2500 epubhv.py\n    \u251c\u2500\u2500 punctuation.py\n    \u2514\u2500\u2500 yomituki.py",
        "file_path": "epubhv/__main__.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as a file path. Please write a corresponding file sketch.\n\n---\nREADME.md\n---\n# epubhv\n\nepubhv is a tool to make your epub books vertical or horizontal or make them readable for language learners.\n\n## Features\n\n- Make your epub books vertical or horizontal\n- Translate your epub books between `\u7b80\u4f53` and `\u7e41\u4f53`\n- Add `ruby` for Japanese(furigana) and Chinese(pinyin)\n- Add `ruby` for `cantonese`\n\n## Using pipx\n\nIf you are using [pipx](https://pypi.org/project/pipx/), you can directly run `epubhv` with:\n\n```console\npipx run epubhv a.epub\n```\n\n## Use the web\n\n```console\npip install epubhv[web]\nstreamlit run web.py\n```\n\n## Use CLI\n\n```console\nepubhv a.epub # will generate a file a-v.epub that is vertical\n# or\nepubhv b.epub --h # will generate a file b-h.epub that is horizontal\n\n# if you also want to translate from `\u7b80\u4f53 -> \u7e41\u4f53`\nepubhv c.epub --convert s2t\n\n# if you also want to translate from `\u7e41\u4f53 -> \u7b80\u4f53`\nepubhv d.epub --h --convert t2s\n\n# or a folder contains butch of epubs\nepubhv tests/test_epub # will generate all epub files to epub-v\n\n# you can specify the punctuation style\nepubhv e.epub --convert s2t --punctuation auto\n# you can add `ruby` for Japanese(furigana) and Chinese(pinyin)\nepubhv e.epub --h --ruby\n# if you want to learn `cantonese` \u7ca4\u8bed\nepubhv f.epub --h --ruby --cantonese\n```\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.sh\n\u251c\u2500\u2500 web.py # from epubhv import EPUBHV;\n\u2514\u2500\u2500 epubhv\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __main__.py\n    \u251c\u2500\u2500 cli.py\n    \u251c\u2500\u2500 epubhv.py\n    \u251c\u2500\u2500 punctuation.py\n    \u2514\u2500\u2500 yomituki.py\n```\n\n---\nFile Path\n---\nepubhv/__main__.py\n\n---\nFile Sketch\n---\n",
        "input": "",
        "output": "Here is a practicable file sketch.\n\n```python\nfrom .cli import main\n\nif __name__ == \"__main__\":\n    main()\n```"
    },
    {
        "readme": "# epubhv\n\nepubhv is a tool to make your epub books vertical or horizontal or make them readable for language learners.\n\n## Features\n\n- Make your epub books vertical or horizontal\n- Translate your epub books between `\u7b80\u4f53` and `\u7e41\u4f53`\n- Add `ruby` for Japanese(furigana) and Chinese(pinyin)\n- Add `ruby` for `cantonese`\n\n## Using pipx\n\nIf you are using [pipx](https://pypi.org/project/pipx/), you can directly run `epubhv` with:\n\n```console\npipx run epubhv a.epub\n```\n\n## Use the web\n\n```console\npip install epubhv[web]\nstreamlit run web.py\n```\n\n## Use CLI\n\n```console\nepubhv a.epub # will generate a file a-v.epub that is vertical\n# or\nepubhv b.epub --h # will generate a file b-h.epub that is horizontal\n\n# if you also want to translate from `\u7b80\u4f53 -> \u7e41\u4f53`\nepubhv c.epub --convert s2t\n\n# if you also want to translate from `\u7e41\u4f53 -> \u7b80\u4f53`\nepubhv d.epub --h --convert t2s\n\n# or a folder contains butch of epubs\nepubhv tests/test_epub # will generate all epub files to epub-v\n\n# you can specify the punctuation style\nepubhv e.epub --convert s2t --punctuation auto\n# you can add `ruby` for Japanese(furigana) and Chinese(pinyin)\nepubhv e.epub --h --ruby\n# if you want to learn `cantonese` \u7ca4\u8bed\nepubhv f.epub --h --ruby --cantonese\n```",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.sh\n\u251c\u2500\u2500 web.py # from epubhv import EPUBHV;\n\u2514\u2500\u2500 epubhv\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __main__.py\n    \u251c\u2500\u2500 cli.py\n    \u251c\u2500\u2500 epubhv.py\n    \u251c\u2500\u2500 punctuation.py\n    \u2514\u2500\u2500 yomituki.py",
        "file_path": "epubhv/cli.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as a file path. Please write a corresponding file sketch.\n\n---\nREADME.md\n---\n# epubhv\n\nepubhv is a tool to make your epub books vertical or horizontal or make them readable for language learners.\n\n## Features\n\n- Make your epub books vertical or horizontal\n- Translate your epub books between `\u7b80\u4f53` and `\u7e41\u4f53`\n- Add `ruby` for Japanese(furigana) and Chinese(pinyin)\n- Add `ruby` for `cantonese`\n\n## Using pipx\n\nIf you are using [pipx](https://pypi.org/project/pipx/), you can directly run `epubhv` with:\n\n```console\npipx run epubhv a.epub\n```\n\n## Use the web\n\n```console\npip install epubhv[web]\nstreamlit run web.py\n```\n\n## Use CLI\n\n```console\nepubhv a.epub # will generate a file a-v.epub that is vertical\n# or\nepubhv b.epub --h # will generate a file b-h.epub that is horizontal\n\n# if you also want to translate from `\u7b80\u4f53 -> \u7e41\u4f53`\nepubhv c.epub --convert s2t\n\n# if you also want to translate from `\u7e41\u4f53 -> \u7b80\u4f53`\nepubhv d.epub --h --convert t2s\n\n# or a folder contains butch of epubs\nepubhv tests/test_epub # will generate all epub files to epub-v\n\n# you can specify the punctuation style\nepubhv e.epub --convert s2t --punctuation auto\n# you can add `ruby` for Japanese(furigana) and Chinese(pinyin)\nepubhv e.epub --h --ruby\n# if you want to learn `cantonese` \u7ca4\u8bed\nepubhv f.epub --h --ruby --cantonese\n```\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.sh\n\u251c\u2500\u2500 web.py # from epubhv import EPUBHV;\n\u2514\u2500\u2500 epubhv\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __main__.py\n    \u251c\u2500\u2500 cli.py\n    \u251c\u2500\u2500 epubhv.py\n    \u251c\u2500\u2500 punctuation.py\n    \u2514\u2500\u2500 yomituki.py\n```\n\n---\nFile Path\n---\nepubhv/cli.py\n\n---\nFile Sketch\n---\n",
        "input": "",
        "output": "Here is a practicable file sketch.\n\n```python\nfrom argparse import ArgumentParser, RawTextHelpFormatter\nfrom pathlib import Path\nfrom typing import cast\nfrom epubhv.epubhv import EPUBHV, list_all_epub_in_dir\n\n\nclass Options:\n    epub: str\n    method: str\n    convert: str\n    punctuation: str\n    ruby: bool\n    cantonese: bool\n    dest: Path\n\n\ndef main() -> None:\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n```"
    },
    {
        "readme": "# epubhv\n\nepubhv is a tool to make your epub books vertical or horizontal or make them readable for language learners.\n\n## Features\n\n- Make your epub books vertical or horizontal\n- Translate your epub books between `\u7b80\u4f53` and `\u7e41\u4f53`\n- Add `ruby` for Japanese(furigana) and Chinese(pinyin)\n- Add `ruby` for `cantonese`\n\n## Using pipx\n\nIf you are using [pipx](https://pypi.org/project/pipx/), you can directly run `epubhv` with:\n\n```console\npipx run epubhv a.epub\n```\n\n## Use the web\n\n```console\npip install epubhv[web]\nstreamlit run web.py\n```\n\n## Use CLI\n\n```console\nepubhv a.epub # will generate a file a-v.epub that is vertical\n# or\nepubhv b.epub --h # will generate a file b-h.epub that is horizontal\n\n# if you also want to translate from `\u7b80\u4f53 -> \u7e41\u4f53`\nepubhv c.epub --convert s2t\n\n# if you also want to translate from `\u7e41\u4f53 -> \u7b80\u4f53`\nepubhv d.epub --h --convert t2s\n\n# or a folder contains butch of epubs\nepubhv tests/test_epub # will generate all epub files to epub-v\n\n# you can specify the punctuation style\nepubhv e.epub --convert s2t --punctuation auto\n# you can add `ruby` for Japanese(furigana) and Chinese(pinyin)\nepubhv e.epub --h --ruby\n# if you want to learn `cantonese` \u7ca4\u8bed\nepubhv f.epub --h --ruby --cantonese\n```",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.sh\n\u251c\u2500\u2500 web.py # from epubhv import EPUBHV;\n\u2514\u2500\u2500 epubhv\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __main__.py\n    \u251c\u2500\u2500 cli.py\n    \u251c\u2500\u2500 epubhv.py\n    \u251c\u2500\u2500 punctuation.py\n    \u2514\u2500\u2500 yomituki.py",
        "file_path": "epubhv/epubhv.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as a file path. Please write a corresponding file sketch.\n\n---\nREADME.md\n---\n# epubhv\n\nepubhv is a tool to make your epub books vertical or horizontal or make them readable for language learners.\n\n## Features\n\n- Make your epub books vertical or horizontal\n- Translate your epub books between `\u7b80\u4f53` and `\u7e41\u4f53`\n- Add `ruby` for Japanese(furigana) and Chinese(pinyin)\n- Add `ruby` for `cantonese`\n\n## Using pipx\n\nIf you are using [pipx](https://pypi.org/project/pipx/), you can directly run `epubhv` with:\n\n```console\npipx run epubhv a.epub\n```\n\n## Use the web\n\n```console\npip install epubhv[web]\nstreamlit run web.py\n```\n\n## Use CLI\n\n```console\nepubhv a.epub # will generate a file a-v.epub that is vertical\n# or\nepubhv b.epub --h # will generate a file b-h.epub that is horizontal\n\n# if you also want to translate from `\u7b80\u4f53 -> \u7e41\u4f53`\nepubhv c.epub --convert s2t\n\n# if you also want to translate from `\u7e41\u4f53 -> \u7b80\u4f53`\nepubhv d.epub --h --convert t2s\n\n# or a folder contains butch of epubs\nepubhv tests/test_epub # will generate all epub files to epub-v\n\n# you can specify the punctuation style\nepubhv e.epub --convert s2t --punctuation auto\n# you can add `ruby` for Japanese(furigana) and Chinese(pinyin)\nepubhv e.epub --h --ruby\n# if you want to learn `cantonese` \u7ca4\u8bed\nepubhv f.epub --h --ruby --cantonese\n```\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.sh\n\u251c\u2500\u2500 web.py # from epubhv import EPUBHV;\n\u2514\u2500\u2500 epubhv\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __main__.py\n    \u251c\u2500\u2500 cli.py\n    \u251c\u2500\u2500 epubhv.py\n    \u251c\u2500\u2500 punctuation.py\n    \u2514\u2500\u2500 yomituki.py\n```\n\n---\nFile Path\n---\nepubhv/epubhv.py\n\n---\nFile Sketch\n---\n",
        "input": "",
        "output": "Here is a practicable file sketch.\n\n```python\n\"\"\"\nFollow these steps to change epub books to vertical or horizontal.\n\"\"\"\nimport logging\nimport os\nimport shutil\nimport zipfile\nfrom collections import Counter, defaultdict\nfrom pathlib import Path\nfrom typing import Dict, List, Optional\nimport cssutils\nimport opencc\nfrom bs4 import BeautifulSoup as bs\nfrom bs4 import NavigableString, PageElement, ResultSet, Tag\nfrom cssutils import CSSParser\nfrom cssutils.css import CSSStyleSheet\nfrom epubhv.punctuation import Punctuation\nfrom epubhv.yomituki import RubySoup, string_containers\nfrom langdetect import LangDetectException, detect\n\ncssutils.log.setLevel(logging.CRITICAL)\nWRITING_KEY_LIST: List[str] = [\n    \"writing-mode\",\n    \"-webkit-writing-mode\",\n    \"-epub-writing-mode\",\n]\nV_STYLE_LINE: str = (\n    '<link rel=\"stylesheet\" href=\"../Style/style.css\" type=\"text/css\" />'\n)\nH_STYLE_LINE: str = (\n    '<link rel=\"stylesheet\" href=\"../Style/style.css\" type=\"text/css\" />'\n)\nV_STYLE_LINE_IN_OPF: str = '<meta content=\"vertical-rl\" name=\"primary-writing-mode\"/>'\nH_STYLE_LINE_IN_OPF: str = '<meta content=\"horizontal-lr\" name=\"primary-writing-mode\"/>'\nV_ITEM_TO_ADD_IN_MANIFEST: str = (\n    '<item id=\"stylesheet\" href=\"Style/style.css\" media-type=\"text/css\" />'\n)\nH_ITEM_TO_ADD_IN_MANIFEST: str = (\n    '<item id=\"stylesheet\" href=\"Style/style.css\" media-type=\"text/css\" />'\n)\n\n\ndef list_all_epub_in_dir(path: Path) -> set[Path]:\n    pass\n\n\ndef make_epub_files_dict(dir_path: Path) -> Dict[str, List[Path]]:\n    pass\n\n\ndef load_opf_meta_data(opf_file: Path) -> bs:\n    pass\n\n\nclass EPUBHV:\n    book_path: Path\n    book_name: str\n    opf_file: Path\n\n    def __init__(\n        self,\n        file_path: Path,\n        convert_to: Optional[str] = None,\n        convert_punctuation: str = \"auto\",\n        need_ruby: bool = False,\n        need_cantonese: bool = False,\n    ) -> None:\n        pass\n\n    def extract_one_epub_to_dir(self) -> None:\n        pass\n\n    @staticmethod\n    def _add_stylesheet_to_html(html_file_path: Path, stylesheet_line: str):\n        pass\n\n    def make_epub_values(self) -> None:\n        \"\"\"\n        setups:\n          1. extract the epub files\n          2. make the file dict\n          3. find the key file -> opf file\n          4. find if has css file and make all css files to list\n        \"\"\"\n        pass\n\n    def __detect_language(self):\n        pass\n\n    def _make_ruby_language(self, soup):\n        pass\n\n    def change_epub_to_vertical(self) -> None:\n        \"\"\"\n        steps:\n          1. check if have CSS files\n          2. check the epub spine `page-progression-direction` add to it\n          3. check `primary-writing-mode` in opf file's meta, if have changed it to vertical-rl, if not add it.\n          4. if we have added CSS files we need to check if have `html` attribute\n          5. if have `html` attribute add vertical-rl to it\n          6. if have not `html` we add it\n          7. if we do not have css file, we add one with html `vertical-rl` and change all the html to add the css files\n        \"\"\"\n        pass\n\n    def change_epub_to_horizontal(self) -> None:\n        \"\"\"\n        steps:\n          1. check if have CSS files\n          2. check the epub spine `page-progression-direction` add to it\n          3. check `primary-writing-mode` in opf file's meta, if have change it to horizontal-rl, if not add it.\n          4. check all css files and remove all \"writing-mode\", \"-webkit-writing-mode\", \"-epub-writing-mode\" to make it default that is horizontal\n        \"\"\"\n        pass\n\n    def convert(self, method: str = \"to_vertical\") -> None:\n        pass\n\n    def pack(self, method: str = \"to_vertical\", dest: Path = Path.cwd()) -> Path:\n        pass\n\n    def run(self, method: str = \"to_vertical\", dest: Path = Path.cwd()) -> Path:\n        pass\n```"
    },
    {
        "readme": "# epubhv\n\nepubhv is a tool to make your epub books vertical or horizontal or make them readable for language learners.\n\n## Features\n\n- Make your epub books vertical or horizontal\n- Translate your epub books between `\u7b80\u4f53` and `\u7e41\u4f53`\n- Add `ruby` for Japanese(furigana) and Chinese(pinyin)\n- Add `ruby` for `cantonese`\n\n## Using pipx\n\nIf you are using [pipx](https://pypi.org/project/pipx/), you can directly run `epubhv` with:\n\n```console\npipx run epubhv a.epub\n```\n\n## Use the web\n\n```console\npip install epubhv[web]\nstreamlit run web.py\n```\n\n## Use CLI\n\n```console\nepubhv a.epub # will generate a file a-v.epub that is vertical\n# or\nepubhv b.epub --h # will generate a file b-h.epub that is horizontal\n\n# if you also want to translate from `\u7b80\u4f53 -> \u7e41\u4f53`\nepubhv c.epub --convert s2t\n\n# if you also want to translate from `\u7e41\u4f53 -> \u7b80\u4f53`\nepubhv d.epub --h --convert t2s\n\n# or a folder contains butch of epubs\nepubhv tests/test_epub # will generate all epub files to epub-v\n\n# you can specify the punctuation style\nepubhv e.epub --convert s2t --punctuation auto\n# you can add `ruby` for Japanese(furigana) and Chinese(pinyin)\nepubhv e.epub --h --ruby\n# if you want to learn `cantonese` \u7ca4\u8bed\nepubhv f.epub --h --ruby --cantonese\n```",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.sh\n\u251c\u2500\u2500 web.py # from epubhv import EPUBHV;\n\u2514\u2500\u2500 epubhv\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __main__.py\n    \u251c\u2500\u2500 cli.py\n    \u251c\u2500\u2500 epubhv.py\n    \u251c\u2500\u2500 punctuation.py\n    \u2514\u2500\u2500 yomituki.py",
        "file_path": "epubhv/punctuation.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as a file path. Please write a corresponding file sketch.\n\n---\nREADME.md\n---\n# epubhv\n\nepubhv is a tool to make your epub books vertical or horizontal or make them readable for language learners.\n\n## Features\n\n- Make your epub books vertical or horizontal\n- Translate your epub books between `\u7b80\u4f53` and `\u7e41\u4f53`\n- Add `ruby` for Japanese(furigana) and Chinese(pinyin)\n- Add `ruby` for `cantonese`\n\n## Using pipx\n\nIf you are using [pipx](https://pypi.org/project/pipx/), you can directly run `epubhv` with:\n\n```console\npipx run epubhv a.epub\n```\n\n## Use the web\n\n```console\npip install epubhv[web]\nstreamlit run web.py\n```\n\n## Use CLI\n\n```console\nepubhv a.epub # will generate a file a-v.epub that is vertical\n# or\nepubhv b.epub --h # will generate a file b-h.epub that is horizontal\n\n# if you also want to translate from `\u7b80\u4f53 -> \u7e41\u4f53`\nepubhv c.epub --convert s2t\n\n# if you also want to translate from `\u7e41\u4f53 -> \u7b80\u4f53`\nepubhv d.epub --h --convert t2s\n\n# or a folder contains butch of epubs\nepubhv tests/test_epub # will generate all epub files to epub-v\n\n# you can specify the punctuation style\nepubhv e.epub --convert s2t --punctuation auto\n# you can add `ruby` for Japanese(furigana) and Chinese(pinyin)\nepubhv e.epub --h --ruby\n# if you want to learn `cantonese` \u7ca4\u8bed\nepubhv f.epub --h --ruby --cantonese\n```\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.sh\n\u251c\u2500\u2500 web.py # from epubhv import EPUBHV;\n\u2514\u2500\u2500 epubhv\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __main__.py\n    \u251c\u2500\u2500 cli.py\n    \u251c\u2500\u2500 epubhv.py\n    \u251c\u2500\u2500 punctuation.py\n    \u2514\u2500\u2500 yomituki.py\n```\n\n---\nFile Path\n---\nepubhv/punctuation.py\n\n---\nFile Sketch\n---\n",
        "input": "",
        "output": "Here is a practicable file sketch.\n\n```python\nimport re\nfrom typing import Dict, Literal\n\n\nclass Punctuation:\n    def convert(\n        self, text: str, horizontal: bool, source_locale: str, target_locale: str\n    ) -> str:\n        pass\n\n    def map_locale(self, x: str) -> Literal[\"hans\", \"hant\"]:\n        pass\n\n    def batch_replace(self, text: str, replacement_dict: Dict[str, str]) -> str:\n        pass\n```"
    },
    {
        "readme": "# epubhv\n\nepubhv is a tool to make your epub books vertical or horizontal or make them readable for language learners.\n\n## Features\n\n- Make your epub books vertical or horizontal\n- Translate your epub books between `\u7b80\u4f53` and `\u7e41\u4f53`\n- Add `ruby` for Japanese(furigana) and Chinese(pinyin)\n- Add `ruby` for `cantonese`\n\n## Using pipx\n\nIf you are using [pipx](https://pypi.org/project/pipx/), you can directly run `epubhv` with:\n\n```console\npipx run epubhv a.epub\n```\n\n## Use the web\n\n```console\npip install epubhv[web]\nstreamlit run web.py\n```\n\n## Use CLI\n\n```console\nepubhv a.epub # will generate a file a-v.epub that is vertical\n# or\nepubhv b.epub --h # will generate a file b-h.epub that is horizontal\n\n# if you also want to translate from `\u7b80\u4f53 -> \u7e41\u4f53`\nepubhv c.epub --convert s2t\n\n# if you also want to translate from `\u7e41\u4f53 -> \u7b80\u4f53`\nepubhv d.epub --h --convert t2s\n\n# or a folder contains butch of epubs\nepubhv tests/test_epub # will generate all epub files to epub-v\n\n# you can specify the punctuation style\nepubhv e.epub --convert s2t --punctuation auto\n# you can add `ruby` for Japanese(furigana) and Chinese(pinyin)\nepubhv e.epub --h --ruby\n# if you want to learn `cantonese` \u7ca4\u8bed\nepubhv f.epub --h --ruby --cantonese\n```",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.sh\n\u251c\u2500\u2500 web.py # from epubhv import EPUBHV;\n\u2514\u2500\u2500 epubhv\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __main__.py\n    \u251c\u2500\u2500 cli.py\n    \u251c\u2500\u2500 epubhv.py\n    \u251c\u2500\u2500 punctuation.py\n    \u2514\u2500\u2500 yomituki.py",
        "file_path": "epubhv/yomituki.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as a file path. Please write a corresponding file sketch.\n\n---\nREADME.md\n---\n# epubhv\n\nepubhv is a tool to make your epub books vertical or horizontal or make them readable for language learners.\n\n## Features\n\n- Make your epub books vertical or horizontal\n- Translate your epub books between `\u7b80\u4f53` and `\u7e41\u4f53`\n- Add `ruby` for Japanese(furigana) and Chinese(pinyin)\n- Add `ruby` for `cantonese`\n\n## Using pipx\n\nIf you are using [pipx](https://pypi.org/project/pipx/), you can directly run `epubhv` with:\n\n```console\npipx run epubhv a.epub\n```\n\n## Use the web\n\n```console\npip install epubhv[web]\nstreamlit run web.py\n```\n\n## Use CLI\n\n```console\nepubhv a.epub # will generate a file a-v.epub that is vertical\n# or\nepubhv b.epub --h # will generate a file b-h.epub that is horizontal\n\n# if you also want to translate from `\u7b80\u4f53 -> \u7e41\u4f53`\nepubhv c.epub --convert s2t\n\n# if you also want to translate from `\u7e41\u4f53 -> \u7b80\u4f53`\nepubhv d.epub --h --convert t2s\n\n# or a folder contains butch of epubs\nepubhv tests/test_epub # will generate all epub files to epub-v\n\n# you can specify the punctuation style\nepubhv e.epub --convert s2t --punctuation auto\n# you can add `ruby` for Japanese(furigana) and Chinese(pinyin)\nepubhv e.epub --h --ruby\n# if you want to learn `cantonese` \u7ca4\u8bed\nepubhv f.epub --h --ruby --cantonese\n```\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.sh\n\u251c\u2500\u2500 web.py # from epubhv import EPUBHV;\n\u2514\u2500\u2500 epubhv\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __main__.py\n    \u251c\u2500\u2500 cli.py\n    \u251c\u2500\u2500 epubhv.py\n    \u251c\u2500\u2500 punctuation.py\n    \u2514\u2500\u2500 yomituki.py\n```\n\n---\nFile Path\n---\nepubhv/yomituki.py\n\n---\nFile Sketch\n---\n",
        "input": "",
        "output": "Here is a practicable file sketch.\n\n```python\n\"\"\"\nThis file is copy from https://github.com/Mumumu4/furigana4epub great thanks\nThe pinyin is from https://github.com/shotazc/pinyin2epub/blob/master/pinyin2epub.py \nI made some change\n\n\"\"\"\nimport re\nfrom itertools import groupby\nimport jieba\nfrom bs4 import BeautifulSoup\nfrom bs4.element import NavigableString, Script, Stylesheet, Tag, TemplateString\nfrom fugashi import Tagger\nfrom pypinyin import pinyin\nfrom ToJyutping import get_jyutping_list\n\ntagger = Tagger()\nkatakana_chart = \"\u30a1\u30a2\u30a3\u30a4\u30a5\u30a6\u30a7\u30a8\u30a9\u30aa\u30ab\u30ac\u30ad\u30ae\u30af\u30b0\u30b1\u30b2\u30b3\u30b4\u30b5\u30b6\u30b7\u30b8\u30b9\u30ba\u30bb\u30bc\u30bd\u30be\u30bf\u30c0\u30c1\u30c2\u30c3\u30c4\u30c5\u30c6\u30c7\u30c8\u30c9\u30ca\u30cb\u30cc\u30cd\u30ce\u30cf\u30d0\u30d1\u30d2\u30d3\u30d4\u30d5\u30d6\u30d7\u30d8\u30d9\u30da\u30db\u30dc\u30dd\u30de\u30df\u30e0\u30e1\u30e2\u30e3\u30e4\u30e5\u30e6\u30e7\u30e8\u30e9\u30ea\u30eb\u30ec\u30ed\u30ee\u30ef\u30f0\u30f1\u30f2\u30f3\u30f4\u30f5\u30f6\u30fd\u30fe\"\nhiragana_chart = \"\u3041\u3042\u3043\u3044\u3045\u3046\u3047\u3048\u3049\u304a\u304b\u304c\u304d\u304e\u304f\u3050\u3051\u3052\u3053\u3054\u3055\u3056\u3057\u3058\u3059\u305a\u305b\u305c\u305d\u305e\u305f\u3060\u3061\u3062\u3063\u3064\u3065\u3066\u3067\u3068\u3069\u306a\u306b\u306c\u306d\u306e\u306f\u3070\u3071\u3072\u3073\u3074\u3075\u3076\u3077\u3078\u3079\u307a\u307b\u307c\u307d\u307e\u307f\u3080\u3081\u3082\u3083\u3084\u3085\u3086\u3087\u3088\u3089\u308a\u308b\u308c\u308d\u308e\u308f\u3090\u3091\u3092\u3093\u3094\u3095\u3096\u309d\u309e\"\nh2k = str.maketrans(hiragana_chart, katakana_chart)\nk2h = str.maketrans(katakana_chart, hiragana_chart)\nwhite_space_re = re.compile(\"(\\\\s+)\")\n\n\nclass RBString(NavigableString):\n    \"\"\"class for <ruby> tag\"\"\"\n\n    pass\n\n\nclass RTString(NavigableString):\n    \"\"\"class for <rt> tag\"\"\"\n\n    pass\n\n\nclass RPString(NavigableString):\n    \"\"\"class for <rp> tag\"\"\"\n\n    pass\n\n\nstring_containers = {\n    \"rp\": RPString,\n    \"rt\": RTString,\n    \"style\": Stylesheet,\n    \"script\": Script,\n    \"template\": TemplateString,\n}\nbasesoup = BeautifulSoup(\"<b></b>\", \"lxml\", string_containers=string_containers)\n\n\ndef point_ruby_to_blod(soup):\n    pass\n\n\ndef kata2hira(str):\n    pass\n\n\ndef hantei_japanese(word):\n    pass\n\n\ndef hantei_chinese(word):\n    pass\n\n\ndef hantei_cantonese(word):\n    pass\n\n\ndef cut_end(text, hira):\n    pass\n\n\ndef yomituki(sentence, lang=\"zh\"):\n    pass\n\n\ndef ruby_wrap(text, yomi):\n    pass\n\n\ndef tag_wrap(name, str):\n    pass\n\n\ndef ruby_text(text, lang=\"zh\"):\n    pass\n\n\nclass RubySoup:\n    def __init__(self, ruby_language, is_ruby_rp=True) -> None:\n        pass\n\n    def ruby_soup(self, soup):\n        pass\n\n    def ruby_navigablestring(self, navigablestring):\n        pass\n\n    def ruby_wrap_bs4(self, text, yomi):\n        pass\n\n    def ruby_wraps_bs4(self, yomis):\n        pass\n```"
    }
]