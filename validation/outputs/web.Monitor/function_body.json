[
    {
        "readme": "# web.Monitor\n\nFast & user-friendly web change tracking tool.",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 web.monitor.py",
        "relevant_file_paths": [],
        "relevant_file_sketches": "---\nCurrent File Sketch/1\n---\nHere is the file sketch of `web.monitor.py`.\n\n```python\nimport argparse\nimport configparser\nimport json\nimport sqlite3\nimport subprocess\nimport time\nfrom datetime import datetime\n\nDB_PATH = \"website_monitor.db\"\nconfig = configparser.ConfigParser()\nconfig.read(\"web-monitor.ini\")\n\n\ndef create_database():\n    \"\"\"TODO\"\"\"\n\n\ndef add_url(url):\n    pass\n\n\ndef add_urls_from_file(filename):\n    pass\n\n\ndef get_website_data(url):\n    pass\n\n\ndef update_website_data(url, data):\n    pass\n\n\ndef check_websites(roots=[]):\n    pass\n\n\ndef show_changes_for_domain(domain):\n    pass\n\n\ndef show_changes_for_url(url):\n    pass\n\n\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n```",
        "current_file_path": "web.monitor.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as some relevant file sketches. Please fill the function body for the given function header.\n\n---\nREADME.md\n---\n# web.Monitor\n\nFast & user-friendly web change tracking tool.\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 web.monitor.py\n```\n\n---\nCurrent File Sketch/1\n---\nHere is the file sketch of `web.monitor.py`.\n\n```python\nimport argparse\nimport configparser\nimport json\nimport sqlite3\nimport subprocess\nimport time\nfrom datetime import datetime\n\nDB_PATH = \"website_monitor.db\"\nconfig = configparser.ConfigParser()\nconfig.read(\"web-monitor.ini\")\n\n\ndef create_database():\n    \"\"\"TODO\"\"\"\n\n\ndef add_url(url):\n    pass\n\n\ndef add_urls_from_file(filename):\n    pass\n\n\ndef get_website_data(url):\n    pass\n\n\ndef update_website_data(url, data):\n    pass\n\n\ndef check_websites(roots=[]):\n    pass\n\n\ndef show_changes_for_domain(domain):\n    pass\n\n\ndef show_changes_for_url(url):\n    pass\n\n\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n```\n\n---\nFunction Complement\n---\ndef create_database():\n",
        "input": "",
        "output": "Here is a complete function body.\n\n```python\ndef create_database():\n    with sqlite3.connect(DB_PATH) as conn:\n        cursor = conn.cursor()\n        cursor.execute(\n            \"\"\"\n            CREATE TABLE IF NOT EXISTS websites (\n                url TEXT PRIMARY KEY,\n                data TEXT\n            )\n            \"\"\"\n        )\n        conn.commit()\n```"
    },
    {
        "readme": "# web.Monitor\n\nFast & user-friendly web change tracking tool.",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 web.monitor.py",
        "relevant_file_paths": [],
        "relevant_file_sketches": "---\nCurrent File Sketch/1\n---\nHere is the file sketch of `web.monitor.py`.\n\n```python\nimport argparse\nimport configparser\nimport json\nimport sqlite3\nimport subprocess\nimport time\nfrom datetime import datetime\n\nDB_PATH = \"website_monitor.db\"\nconfig = configparser.ConfigParser()\nconfig.read(\"web-monitor.ini\")\n\n\ndef create_database():\n    pass\n\n\ndef add_url(url):\n    \"\"\"TODO\"\"\"\n\n\ndef add_urls_from_file(filename):\n    pass\n\n\ndef get_website_data(url):\n    pass\n\n\ndef update_website_data(url, data):\n    pass\n\n\ndef check_websites(roots=[]):\n    pass\n\n\ndef show_changes_for_domain(domain):\n    pass\n\n\ndef show_changes_for_url(url):\n    pass\n\n\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n```",
        "current_file_path": "web.monitor.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as some relevant file sketches. Please fill the function body for the given function header.\n\n---\nREADME.md\n---\n# web.Monitor\n\nFast & user-friendly web change tracking tool.\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 web.monitor.py\n```\n\n---\nCurrent File Sketch/1\n---\nHere is the file sketch of `web.monitor.py`.\n\n```python\nimport argparse\nimport configparser\nimport json\nimport sqlite3\nimport subprocess\nimport time\nfrom datetime import datetime\n\nDB_PATH = \"website_monitor.db\"\nconfig = configparser.ConfigParser()\nconfig.read(\"web-monitor.ini\")\n\n\ndef create_database():\n    pass\n\n\ndef add_url(url):\n    \"\"\"TODO\"\"\"\n\n\ndef add_urls_from_file(filename):\n    pass\n\n\ndef get_website_data(url):\n    pass\n\n\ndef update_website_data(url, data):\n    pass\n\n\ndef check_websites(roots=[]):\n    pass\n\n\ndef show_changes_for_domain(domain):\n    pass\n\n\ndef show_changes_for_url(url):\n    pass\n\n\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n```\n\n---\nFunction Complement\n---\ndef add_url(url):\n",
        "input": "",
        "output": "Here is a complete function body.\n\n```python\ndef add_url(url):\n    with sqlite3.connect(DB_PATH) as conn:\n        cursor = conn.cursor()\n        cursor.execute(\n            \"INSERT OR IGNORE INTO websites (url, data) VALUES (?, ?)\", (url, \"[]\")\n        )\n        conn.commit()\n```"
    },
    {
        "readme": "# web.Monitor\n\nFast & user-friendly web change tracking tool.",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 web.monitor.py",
        "relevant_file_paths": [],
        "relevant_file_sketches": "---\nCurrent File Sketch/1\n---\nHere is the file sketch of `web.monitor.py`.\n\n```python\nimport argparse\nimport configparser\nimport json\nimport sqlite3\nimport subprocess\nimport time\nfrom datetime import datetime\n\nDB_PATH = \"website_monitor.db\"\nconfig = configparser.ConfigParser()\nconfig.read(\"web-monitor.ini\")\n\n\ndef create_database():\n    pass\n\n\ndef add_url(url):\n    pass\n\n\ndef add_urls_from_file(filename):\n    \"\"\"TODO\"\"\"\n\n\ndef get_website_data(url):\n    pass\n\n\ndef update_website_data(url, data):\n    pass\n\n\ndef check_websites(roots=[]):\n    pass\n\n\ndef show_changes_for_domain(domain):\n    pass\n\n\ndef show_changes_for_url(url):\n    pass\n\n\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n```",
        "current_file_path": "web.monitor.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as some relevant file sketches. Please fill the function body for the given function header.\n\n---\nREADME.md\n---\n# web.Monitor\n\nFast & user-friendly web change tracking tool.\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 web.monitor.py\n```\n\n---\nCurrent File Sketch/1\n---\nHere is the file sketch of `web.monitor.py`.\n\n```python\nimport argparse\nimport configparser\nimport json\nimport sqlite3\nimport subprocess\nimport time\nfrom datetime import datetime\n\nDB_PATH = \"website_monitor.db\"\nconfig = configparser.ConfigParser()\nconfig.read(\"web-monitor.ini\")\n\n\ndef create_database():\n    pass\n\n\ndef add_url(url):\n    pass\n\n\ndef add_urls_from_file(filename):\n    \"\"\"TODO\"\"\"\n\n\ndef get_website_data(url):\n    pass\n\n\ndef update_website_data(url, data):\n    pass\n\n\ndef check_websites(roots=[]):\n    pass\n\n\ndef show_changes_for_domain(domain):\n    pass\n\n\ndef show_changes_for_url(url):\n    pass\n\n\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n```\n\n---\nFunction Complement\n---\ndef add_urls_from_file(filename):\n",
        "input": "",
        "output": "Here is a complete function body.\n\n```python\ndef add_urls_from_file(filename):\n    with open(filename, \"r\") as f:\n        for url in f:\n            add_url(url.strip())\n```"
    },
    {
        "readme": "# web.Monitor\n\nFast & user-friendly web change tracking tool.",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 web.monitor.py",
        "relevant_file_paths": [],
        "relevant_file_sketches": "---\nCurrent File Sketch/1\n---\nHere is the file sketch of `web.monitor.py`.\n\n```python\nimport argparse\nimport configparser\nimport json\nimport sqlite3\nimport subprocess\nimport time\nfrom datetime import datetime\n\nDB_PATH = \"website_monitor.db\"\nconfig = configparser.ConfigParser()\nconfig.read(\"web-monitor.ini\")\n\n\ndef create_database():\n    pass\n\n\ndef add_url(url):\n    pass\n\n\ndef add_urls_from_file(filename):\n    pass\n\n\ndef get_website_data(url):\n    \"\"\"TODO\"\"\"\n\n\ndef update_website_data(url, data):\n    pass\n\n\ndef check_websites(roots=[]):\n    pass\n\n\ndef show_changes_for_domain(domain):\n    pass\n\n\ndef show_changes_for_url(url):\n    pass\n\n\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n```",
        "current_file_path": "web.monitor.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as some relevant file sketches. Please fill the function body for the given function header.\n\n---\nREADME.md\n---\n# web.Monitor\n\nFast & user-friendly web change tracking tool.\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 web.monitor.py\n```\n\n---\nCurrent File Sketch/1\n---\nHere is the file sketch of `web.monitor.py`.\n\n```python\nimport argparse\nimport configparser\nimport json\nimport sqlite3\nimport subprocess\nimport time\nfrom datetime import datetime\n\nDB_PATH = \"website_monitor.db\"\nconfig = configparser.ConfigParser()\nconfig.read(\"web-monitor.ini\")\n\n\ndef create_database():\n    pass\n\n\ndef add_url(url):\n    pass\n\n\ndef add_urls_from_file(filename):\n    pass\n\n\ndef get_website_data(url):\n    \"\"\"TODO\"\"\"\n\n\ndef update_website_data(url, data):\n    pass\n\n\ndef check_websites(roots=[]):\n    pass\n\n\ndef show_changes_for_domain(domain):\n    pass\n\n\ndef show_changes_for_url(url):\n    pass\n\n\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n```\n\n---\nFunction Complement\n---\ndef get_website_data(url):\n",
        "input": "",
        "output": "Here is a complete function body.\n\n```python\ndef get_website_data(url):\n    with sqlite3.connect(DB_PATH) as conn:\n        cursor = conn.cursor()\n        cursor.execute(\"SELECT data FROM websites WHERE url = ?\", (url,))\n        data = cursor.fetchone()\n        return json.loads(data[0]) if data else None\n```"
    },
    {
        "readme": "# web.Monitor\n\nFast & user-friendly web change tracking tool.",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 web.monitor.py",
        "relevant_file_paths": [],
        "relevant_file_sketches": "---\nCurrent File Sketch/1\n---\nHere is the file sketch of `web.monitor.py`.\n\n```python\nimport argparse\nimport configparser\nimport json\nimport sqlite3\nimport subprocess\nimport time\nfrom datetime import datetime\n\nDB_PATH = \"website_monitor.db\"\nconfig = configparser.ConfigParser()\nconfig.read(\"web-monitor.ini\")\n\n\ndef create_database():\n    pass\n\n\ndef add_url(url):\n    pass\n\n\ndef add_urls_from_file(filename):\n    pass\n\n\ndef get_website_data(url):\n    pass\n\n\ndef update_website_data(url, data):\n    \"\"\"TODO\"\"\"\n\n\ndef check_websites(roots=[]):\n    pass\n\n\ndef show_changes_for_domain(domain):\n    pass\n\n\ndef show_changes_for_url(url):\n    pass\n\n\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n```",
        "current_file_path": "web.monitor.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as some relevant file sketches. Please fill the function body for the given function header.\n\n---\nREADME.md\n---\n# web.Monitor\n\nFast & user-friendly web change tracking tool.\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 web.monitor.py\n```\n\n---\nCurrent File Sketch/1\n---\nHere is the file sketch of `web.monitor.py`.\n\n```python\nimport argparse\nimport configparser\nimport json\nimport sqlite3\nimport subprocess\nimport time\nfrom datetime import datetime\n\nDB_PATH = \"website_monitor.db\"\nconfig = configparser.ConfigParser()\nconfig.read(\"web-monitor.ini\")\n\n\ndef create_database():\n    pass\n\n\ndef add_url(url):\n    pass\n\n\ndef add_urls_from_file(filename):\n    pass\n\n\ndef get_website_data(url):\n    pass\n\n\ndef update_website_data(url, data):\n    \"\"\"TODO\"\"\"\n\n\ndef check_websites(roots=[]):\n    pass\n\n\ndef show_changes_for_domain(domain):\n    pass\n\n\ndef show_changes_for_url(url):\n    pass\n\n\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n```\n\n---\nFunction Complement\n---\ndef update_website_data(url, data):\n",
        "input": "",
        "output": "Here is a complete function body.\n\n```python\ndef update_website_data(url, data):\n    with sqlite3.connect(DB_PATH) as conn:\n        cursor = conn.cursor()\n        cursor.execute(\n            \"UPDATE websites SET data = ? WHERE url = ?\", (json.dumps(data), url)\n        )\n        conn.commit()\n```"
    },
    {
        "readme": "# web.Monitor\n\nFast & user-friendly web change tracking tool.",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 web.monitor.py",
        "relevant_file_paths": [],
        "relevant_file_sketches": "---\nCurrent File Sketch/1\n---\nHere is the file sketch of `web.monitor.py`.\n\n```python\nimport argparse\nimport configparser\nimport json\nimport sqlite3\nimport subprocess\nimport time\nfrom datetime import datetime\n\nDB_PATH = \"website_monitor.db\"\nconfig = configparser.ConfigParser()\nconfig.read(\"web-monitor.ini\")\n\n\ndef create_database():\n    pass\n\n\ndef add_url(url):\n    pass\n\n\ndef add_urls_from_file(filename):\n    pass\n\n\ndef get_website_data(url):\n    pass\n\n\ndef update_website_data(url, data):\n    pass\n\n\ndef check_websites(roots=[]):\n    \"\"\"TODO\"\"\"\n\n\ndef show_changes_for_domain(domain):\n    pass\n\n\ndef show_changes_for_url(url):\n    pass\n\n\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n```",
        "current_file_path": "web.monitor.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as some relevant file sketches. Please fill the function body for the given function header.\n\n---\nREADME.md\n---\n# web.Monitor\n\nFast & user-friendly web change tracking tool.\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 web.monitor.py\n```\n\n---\nCurrent File Sketch/1\n---\nHere is the file sketch of `web.monitor.py`.\n\n```python\nimport argparse\nimport configparser\nimport json\nimport sqlite3\nimport subprocess\nimport time\nfrom datetime import datetime\n\nDB_PATH = \"website_monitor.db\"\nconfig = configparser.ConfigParser()\nconfig.read(\"web-monitor.ini\")\n\n\ndef create_database():\n    pass\n\n\ndef add_url(url):\n    pass\n\n\ndef add_urls_from_file(filename):\n    pass\n\n\ndef get_website_data(url):\n    pass\n\n\ndef update_website_data(url, data):\n    pass\n\n\ndef check_websites(roots=[]):\n    \"\"\"TODO\"\"\"\n\n\ndef show_changes_for_domain(domain):\n    pass\n\n\ndef show_changes_for_url(url):\n    pass\n\n\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n```\n\n---\nFunction Complement\n---\ndef check_websites(roots=[]):\n",
        "input": "",
        "output": "Here is a complete function body.\n\n```python\ndef check_websites(roots=[]):\n    current_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S.%f\")\n    with sqlite3.connect(DB_PATH) as conn:\n        cursor = conn.cursor()\n        cursor.execute(\"SELECT url FROM websites\")\n        urls = [row[0] for row in cursor]\n        for url in urls:\n            if roots and not any(root in url for root in roots):\n                continue\n            httpx_binary = config.get(\"Binary paths\", \"httpx\")\n            cmd = f\"echo {url} | {httpx_binary} -silent -sc -title -cl -nc\"\n            result = subprocess.run(\n                cmd, shell=True, capture_output=True, text=True\n            ).stdout.strip()\n            if not result:\n                continue\n            parts = result.split()\n            http_code = int(parts[1][1:-1])\n            content_length = int(parts[2][1:-1])\n            title = \" \".join(parts[3:])[1:-1]\n            stored_values = get_website_data(url)\n            if not stored_values:\n                stored_values.append(\n                    {\n                        \"http_code\": http_code,\n                        \"content_length\": content_length,\n                        \"title\": title,\n                        \"timestamp\": current_time,\n                    }\n                )\n            else:\n                last_values = stored_values[-1]\n                if (\n                    last_values[\"http_code\"] != http_code\n                    or last_values[\"content_length\"] != content_length\n                    or last_values[\"title\"] != title\n                ):\n                    notify_binary = config.get(\"Binary paths\", \"notify\")\n                    notify_api = config.get(\"Apis\", \"notify_api\")\n                    cmd = f'echo \"Change detected for {url}. New values: {url} [{http_code}] [{content_length}] [{title}]\" | {notify_binary} -silent -pc {notify_api}'\n                    subprocess.run(cmd, shell=True)\n                    stored_values.append(\n                        {\n                            \"http_code\": http_code,\n                            \"content_length\": content_length,\n                            \"title\": title,\n                            \"timestamp\": current_time,\n                        }\n                    )\n            update_website_data(url, stored_values)\n```"
    },
    {
        "readme": "# web.Monitor\n\nFast & user-friendly web change tracking tool.",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 web.monitor.py",
        "relevant_file_paths": [],
        "relevant_file_sketches": "---\nCurrent File Sketch/1\n---\nHere is the file sketch of `web.monitor.py`.\n\n```python\nimport argparse\nimport configparser\nimport json\nimport sqlite3\nimport subprocess\nimport time\nfrom datetime import datetime\n\nDB_PATH = \"website_monitor.db\"\nconfig = configparser.ConfigParser()\nconfig.read(\"web-monitor.ini\")\n\n\ndef create_database():\n    pass\n\n\ndef add_url(url):\n    pass\n\n\ndef add_urls_from_file(filename):\n    pass\n\n\ndef get_website_data(url):\n    pass\n\n\ndef update_website_data(url, data):\n    pass\n\n\ndef check_websites(roots=[]):\n    pass\n\n\ndef show_changes_for_domain(domain):\n    \"\"\"TODO\"\"\"\n\n\ndef show_changes_for_url(url):\n    pass\n\n\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n```",
        "current_file_path": "web.monitor.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as some relevant file sketches. Please fill the function body for the given function header.\n\n---\nREADME.md\n---\n# web.Monitor\n\nFast & user-friendly web change tracking tool.\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 web.monitor.py\n```\n\n---\nCurrent File Sketch/1\n---\nHere is the file sketch of `web.monitor.py`.\n\n```python\nimport argparse\nimport configparser\nimport json\nimport sqlite3\nimport subprocess\nimport time\nfrom datetime import datetime\n\nDB_PATH = \"website_monitor.db\"\nconfig = configparser.ConfigParser()\nconfig.read(\"web-monitor.ini\")\n\n\ndef create_database():\n    pass\n\n\ndef add_url(url):\n    pass\n\n\ndef add_urls_from_file(filename):\n    pass\n\n\ndef get_website_data(url):\n    pass\n\n\ndef update_website_data(url, data):\n    pass\n\n\ndef check_websites(roots=[]):\n    pass\n\n\ndef show_changes_for_domain(domain):\n    \"\"\"TODO\"\"\"\n\n\ndef show_changes_for_url(url):\n    pass\n\n\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n```\n\n---\nFunction Complement\n---\ndef show_changes_for_domain(domain):\n",
        "input": "",
        "output": "Here is a complete function body.\n\n```python\ndef show_changes_for_domain(domain):\n    with sqlite3.connect(DB_PATH) as conn:\n        cursor = conn.cursor()\n        cursor.execute(\n            \"SELECT url, data FROM websites WHERE url LIKE ?\", (\"%\" + domain + \"%\",)\n        )\n        changes = {row[0]: json.loads(row[1]) for row in cursor}\n        if not changes:\n            print(f\"No changes recorded for {domain}.\")\n            return\n        for url, data_list in changes.items():\n            print(url)\n            for data in data_list:\n                print(\n                    f\"[{data['timestamp']}] {url} [{data['http_code']}] [{data['content_length']}] [{data['title']}]\"\n                )\n            print()\n```"
    },
    {
        "readme": "# web.Monitor\n\nFast & user-friendly web change tracking tool.",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 web.monitor.py",
        "relevant_file_paths": [],
        "relevant_file_sketches": "---\nCurrent File Sketch/1\n---\nHere is the file sketch of `web.monitor.py`.\n\n```python\nimport argparse\nimport configparser\nimport json\nimport sqlite3\nimport subprocess\nimport time\nfrom datetime import datetime\n\nDB_PATH = \"website_monitor.db\"\nconfig = configparser.ConfigParser()\nconfig.read(\"web-monitor.ini\")\n\n\ndef create_database():\n    pass\n\n\ndef add_url(url):\n    pass\n\n\ndef add_urls_from_file(filename):\n    pass\n\n\ndef get_website_data(url):\n    pass\n\n\ndef update_website_data(url, data):\n    pass\n\n\ndef check_websites(roots=[]):\n    pass\n\n\ndef show_changes_for_domain(domain):\n    pass\n\n\ndef show_changes_for_url(url):\n    \"\"\"TODO\"\"\"\n\n\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n```",
        "current_file_path": "web.monitor.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as some relevant file sketches. Please fill the function body for the given function header.\n\n---\nREADME.md\n---\n# web.Monitor\n\nFast & user-friendly web change tracking tool.\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 web.monitor.py\n```\n\n---\nCurrent File Sketch/1\n---\nHere is the file sketch of `web.monitor.py`.\n\n```python\nimport argparse\nimport configparser\nimport json\nimport sqlite3\nimport subprocess\nimport time\nfrom datetime import datetime\n\nDB_PATH = \"website_monitor.db\"\nconfig = configparser.ConfigParser()\nconfig.read(\"web-monitor.ini\")\n\n\ndef create_database():\n    pass\n\n\ndef add_url(url):\n    pass\n\n\ndef add_urls_from_file(filename):\n    pass\n\n\ndef get_website_data(url):\n    pass\n\n\ndef update_website_data(url, data):\n    pass\n\n\ndef check_websites(roots=[]):\n    pass\n\n\ndef show_changes_for_domain(domain):\n    pass\n\n\ndef show_changes_for_url(url):\n    \"\"\"TODO\"\"\"\n\n\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n```\n\n---\nFunction Complement\n---\ndef show_changes_for_url(url):\n",
        "input": "",
        "output": "Here is a complete function body.\n\n```python\ndef show_changes_for_url(url):\n    data = get_website_data(url)\n    if not data:\n        print(f\"No changes recorded for {url}.\")\n        return\n    for entry in data:\n        print(\n            f\"[{entry['timestamp']}] {url} [{entry['http_code']}] [{entry['content_length']}] [{entry['title']}]\"\n        )\n    print()\n```"
    },
    {
        "readme": "# web.Monitor\n\nFast & user-friendly web change tracking tool.",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 web.monitor.py",
        "relevant_file_paths": [],
        "relevant_file_sketches": "---\nCurrent File Sketch/1\n---\nHere is the file sketch of `web.monitor.py`.\n\n```python\nimport argparse\nimport configparser\nimport json\nimport sqlite3\nimport subprocess\nimport time\nfrom datetime import datetime\n\nDB_PATH = \"website_monitor.db\"\nconfig = configparser.ConfigParser()\nconfig.read(\"web-monitor.ini\")\n\n\ndef create_database():\n    pass\n\n\ndef add_url(url):\n    pass\n\n\ndef add_urls_from_file(filename):\n    pass\n\n\ndef get_website_data(url):\n    pass\n\n\ndef update_website_data(url, data):\n    pass\n\n\ndef check_websites(roots=[]):\n    pass\n\n\ndef show_changes_for_domain(domain):\n    pass\n\n\ndef show_changes_for_url(url):\n    pass\n\n\ndef main():\n    \"\"\"TODO\"\"\"\n\n\nif __name__ == \"__main__\":\n    main()\n```",
        "current_file_path": "web.monitor.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as some relevant file sketches. Please fill the function body for the given function header.\n\n---\nREADME.md\n---\n# web.Monitor\n\nFast & user-friendly web change tracking tool.\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 web.monitor.py\n```\n\n---\nCurrent File Sketch/1\n---\nHere is the file sketch of `web.monitor.py`.\n\n```python\nimport argparse\nimport configparser\nimport json\nimport sqlite3\nimport subprocess\nimport time\nfrom datetime import datetime\n\nDB_PATH = \"website_monitor.db\"\nconfig = configparser.ConfigParser()\nconfig.read(\"web-monitor.ini\")\n\n\ndef create_database():\n    pass\n\n\ndef add_url(url):\n    pass\n\n\ndef add_urls_from_file(filename):\n    pass\n\n\ndef get_website_data(url):\n    pass\n\n\ndef update_website_data(url, data):\n    pass\n\n\ndef check_websites(roots=[]):\n    pass\n\n\ndef show_changes_for_domain(domain):\n    pass\n\n\ndef show_changes_for_url(url):\n    pass\n\n\ndef main():\n    \"\"\"TODO\"\"\"\n\n\nif __name__ == \"__main__\":\n    main()\n```\n\n---\nFunction Complement\n---\ndef show_changes_for_domain(domain):\n",
        "input": "",
        "output": "Here is a complete function body.\n\n```python\ndef show_changes_for_domain(domain):\n    create_database()\n    print(\n        \"\"\"\n                   _     __  __             _ _\n                  | |   |  \\\\/  |           (_) |\n     __      _____| |__ | \\\\  / | ___  _ __  _| |_ ___  _ __\n     \\\\ \\\\ /\\\\ / / _ \\\\ '_ \\\\| |\\\\/| |/ _ \\\\| '_ \\\\| | __/ _ \\\\| '__|\n      \\\\ V  V /  __/ |_) | |  | | (_) | | | | | || (_) | |\n       \\\\_/\\\\_/ \\\\___|_.__/|_|  |_|\\\\___/|_| |_|_|\\\\__\\\\___/|_|\n    \n                            github.com/e1abrador/web.Monitor\n        \"\"\"\n    )\n    parser = argparse.ArgumentParser(description=\"Monitor websites for changes.\")\n    parser.add_argument(\"--add\", help=\"Add a URL to monitor.\")\n    parser.add_argument(\"--add-urls\", help=\"Add URLs from a file to monitor.\")\n    parser.add_argument(\n        \"--check\", action=\"store_true\", help=\"Check all the websites for changes.\"\n    )\n    parser.add_argument(\n        \"-D\", \"--domain\", help=\"Check websites for a specific root domain.\"\n    )\n    parser.add_argument(\n        \"-df\",\n        \"--domain-file\",\n        help=\"Check websites for root domains specified in a file.\",\n    )\n    parser.add_argument(\n        \"--show-changes\",\n        action=\"store_true\",\n        help=\"Show changes for the specified domain or URL.\",\n    )\n    parser.add_argument(\n        \"-H\", \"--hours\", type=float, help=\"Repeat the website check every X hours.\"\n    )\n    parser.add_argument(\"-url\", \"--url\", help=\"Show changes for a specific URL.\")\n    args = parser.parse_args()\n    if args.add:\n        add_url(args.add)\n    if args.add_urls:\n        add_urls_from_file(args.add_urls)\n    if args.check:\n        if args.hours:\n            while True:\n                if args.domain:\n                    check_websites(roots=[args.domain])\n                elif args.domain_file:\n                    with open(args.domain_file, \"r\") as f:\n                        roots = [line.strip() for line in f]\n                    check_websites(roots=roots)\n                else:\n                    check_websites()\n                print(f\"Waiting for {args.hours} hour(s) before the next check...\")\n                time.sleep(args.hours * 3600)\n        elif args.domain:\n            check_websites(roots=[args.domain])\n        elif args.domain_file:\n            with open(args.domain_file, \"r\") as f:\n                roots = [line.strip() for line in f]\n            check_websites(roots=roots)\n        else:\n            check_websites()\n    if args.domain and args.show_changes:\n        show_changes_for_domain(args.domain)\n    if args.url and args.show_changes:\n        show_changes_for_url(args.url)\n```"
    }
]