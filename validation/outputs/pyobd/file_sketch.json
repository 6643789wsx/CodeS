[
    {
        "readme": "# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py",
        "file_path": "debugEvent.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as a file path. Please write a corresponding file sketch.\n\n---\nREADME.md\n---\n# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py\n```\n\n---\nFile Path\n---\ndebugEvent.py\n\n---\nFile Sketch\n---\n",
        "input": "",
        "output": "Here is a practicable file sketch.\n\n```python\nimport wx\n\nEVT_DEBUG_ID = 1010\n\n\nclass DebugEvent(wx.PyEvent):\n    \"\"\"Simple event to carry arbitrary result data.\"\"\"\n\n    def __init__(self, data):\n        \"\"\"Init Result Event.\"\"\"\n        pass\n```"
    },
    {
        "readme": "# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py",
        "file_path": "obd2_codes.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as a file path. Please write a corresponding file sketch.\n\n---\nREADME.md\n---\n# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py\n```\n\n---\nFile Path\n---\nobd2_codes.py\n\n---\nFile Sketch\n---\n",
        "input": "",
        "output": "Here is a practicable file sketch.\n\n```python\npcodes = {\n    \"P0001\": \"Fuel Volume Regulator Control Circuit/Open\",\n    \"P0002\": \"Fuel Volume Regulator Control Circuit Range/Performance\",\n    \"P0003\": \"Fuel Volume Regulator Control Circuit Low\",\n    \"P0004\": \"Fuel Volume Regulator Control Circuit High\",\n    \"P0005\": \"Fuel Shutoff Valve 'A' Control Circuit/Open\",\n    \"P0006\": \"Fuel Shutoff Valve 'A' Control Circuit Low\",\n    \"P0007\": \"Fuel Shutoff Valve 'A' Control Circuit High\",\n    \"P0008\": \"Engine Position System Performance\",\n    \"P0009\": \"Engine Position System Performance\",\n    \"P0010\": \"'A' Camshaft Position Actuator Circuit\",\n    \"P0011\": \"'A' Camshaft Position - Timing Over-Advanced or System Performance\",\n    \"P0012\": \"'A' Camshaft Position - Timing Over-Retarded\",\n    \"P0013\": \"'B' Camshaft Position - Actuator Circuit\",\n    \"P0014\": \"'B' Camshaft Position - Timing Over-Advanced or System Performance\",\n    \"P0015\": \"'B' Camshaft Position - Timing Over-Retarded\",\n    \"P0016\": \"Crankshaft Position - Camshaft Position Correlation\",\n    \"P0017\": \"Crankshaft Position - Camshaft Position Correlation\",\n    \"P0018\": \"Crankshaft Position - Camshaft Position Correlation\",\n    \"P0019\": \"Crankshaft Position - Camshaft Position Correlation\",\n    \"P0020\": \"'A' Camshaft Position Actuator Circuit\",\n    \"P0021\": \"'A' Camshaft Position - Timing Over-Advanced or System Performance\",\n    \"P0022\": \"'A' Camshaft Position - Timing Over-Retarded\",\n    \"P0023\": \"'B' Camshaft Position - Actuator Circuit\",\n    \"P0024\": \"'B' Camshaft Position - Timing Over-Advanced or System Performance\",\n    \"P0025\": \"'B' Camshaft Position - Timing Over-Retarded\",\n    \"P0026\": \"Intake Valve Control Solenoid Circuit Range/Performance\",\n    \"P0027\": \"Exhaust Valve Control Solenoid Circuit Range/Performance\",\n    \"P0028\": \"Intake Valve Control Solenoid Circuit Range/Performance\",\n    \"P0029\": \"Exhaust Valve Control Solenoid Circuit Range/Performance\",\n    \"P0030\": \"HO2S Heater Control Circuit\",\n    \"P0031\": \"HO2S Heater Control Circuit Low\",\n    \"P0032\": \"HO2S Heater Control Circuit High\",\n    \"P0033\": \"Turbo Charger Bypass Valve Control Circuit\",\n    \"P0034\": \"Turbo Charger Bypass Valve Control Circuit Low\",\n    \"P0035\": \"Turbo Charger Bypass Valve Control Circuit High\",\n    \"P0036\": \"HO2S Heater Control Circuit\",\n    \"P0037\": \"HO2S Heater Control Circuit Low\",\n    \"P0038\": \"HO2S Heater Control Circuit High\",\n    \"P0039\": \"Turbo/Super Charger Bypass Valve Control Circuit Range/Performance\",\n    \"P0040\": \"O2 Sensor Signals Swapped Bank 1 Sensor 1/ Bank 2 Sensor 1\",\n    \"P0041\": \"O2 Sensor Signals Swapped Bank 1 Sensor 2/ Bank 2 Sensor 2\",\n    \"P0042\": \"HO2S Heater Control Circuit\",\n    \"P0043\": \"HO2S Heater Control Circuit Low\",\n    \"P0044\": \"HO2S Heater Control Circuit High\",\n    \"P0045\": \"Turbo/Super Charger Boost Control Solenoid Circuit/Open\",\n    \"P0046\": \"Turbo/Super Charger Boost Control Solenoid Circuit Range/Performance\",\n    \"P0047\": \"Turbo/Super Charger Boost Control Solenoid Circuit Low\",\n    \"P0048\": \"Turbo/Super Charger Boost Control Solenoid Circuit High\",\n    \"P0049\": \"Turbo/Super Charger Turbine Overspeed\",\n    \"P0050\": \"HO2S Heater Control Circuit\",\n    \"P0051\": \"HO2S Heater Control Circuit Low\",\n    \"P0052\": \"HO2S Heater Control Circuit High\",\n    \"P0053\": \"HO2S Heater Resistance\",\n    \"P0054\": \"HO2S Heater Resistance\",\n    \"P0055\": \"HO2S Heater Resistance\",\n    \"P0056\": \"HO2S Heater Control Circuit\",\n    \"P0057\": \"HO2S Heater Control Circuit Low\",\n    \"P0058\": \"HO2S Heater Control Circuit High\",\n    \"P0059\": \"HO2S Heater Resistance\",\n    \"P0060\": \"HO2S Heater Resistance\",\n    \"P0061\": \"HO2S Heater Resistance\",\n    \"P0062\": \"HO2S Heater Control Circuit\",\n    \"P0063\": \"HO2S Heater Control Circuit Low\",\n    \"P0064\": \"HO2S Heater Control Circuit High\",\n    \"P0065\": \"Air Assisted Injector Control Range/Performance\",\n    \"P0066\": \"Air Assisted Injector Control Circuit or Circuit Low\",\n    \"P0067\": \"Air Assisted Injector Control Circuit High\",\n    \"P0068\": \"MAP/MAF - Throttle Position Correlation\",\n    \"P0069\": \"Manifold Absolute Pressure - Barometric Pressure Correlation\",\n    \"P0070\": \"Ambient Air Temperature Sensor Circuit\",\n    \"P0071\": \"Ambient Air Temperature Sensor Range/Performance\",\n    \"P0072\": \"Ambient Air Temperature Sensor Circuit Low\",\n    \"P0073\": \"Ambient Air Temperature Sensor Circuit High\",\n    \"P0074\": \"Ambient Air Temperature Sensor Circuit Intermittent\",\n    \"P0075\": \"Intake Valve Control Solenoid Circuit\",\n    \"P0076\": \"Intake Valve Control Solenoid Circuit Low\",\n    \"P0077\": \"Intake Valve Control Solenoid Circuit High\",\n    \"P0078\": \"Exhaust Valve Control Solenoid Circuit\",\n    \"P0079\": \"Exhaust Valve Control Solenoid Circuit Low\",\n    \"P0080\": \"Exhaust Valve Control Solenoid Circuit High\",\n    \"P0081\": \"Intake Valve Control Solenoid Circuit\",\n    \"P0082\": \"Intake Valve Control Solenoid Circuit Low\",\n    \"P0083\": \"Intake Valve Control Solenoid Circuit High\",\n    \"P0084\": \"Exhaust Valve Control Solenoid Circuit\",\n    \"P0085\": \"Exhaust Valve Control Solenoid Circuit Low\",\n    \"P0086\": \"Exhaust Valve Control Solenoid Circuit High\",\n    \"P0087\": \"Fuel Rail/System Pressure - Too Low\",\n    \"P0088\": \"Fuel Rail/System Pressure - Too High\",\n    \"P0089\": \"Fuel Pressure Regulator 1 Performance\",\n    \"P0090\": \"Fuel Pressure Regulator 1 Control Circuit\",\n    \"P0091\": \"Fuel Pressure Regulator 1 Control Circuit Low\",\n    \"P0092\": \"Fuel Pressure Regulator 1 Control Circuit High\",\n    \"P0093\": \"Fuel System Leak Detected - Large Leak\",\n    \"P0094\": \"Fuel System Leak Detected - Small Leak\",\n    \"P0095\": \"Intake Air Temperature Sensor 2 Circuit\",\n    \"P0096\": \"Intake Air Temperature Sensor 2 Circuit Range/Performance\",\n    \"P0097\": \"Intake Air Temperature Sensor 2 Circuit Low\",\n    \"P0098\": \"Intake Air Temperature Sensor 2 Circuit High\",\n    \"P0099\": \"Intake Air Temperature Sensor 2 Circuit Intermittent/Erratic\",\n    \"P0100\": \"Mass or Volume Air Flow Circuit\",\n    \"P0101\": \"Mass or Volume Air Flow Circuit Range/Performance\",\n    \"P0102\": \"Mass or Volume Air Flow Circuit Low Input\",\n    \"P0103\": \"Mass or Volume Air Flow Circuit High Input\",\n    \"P0104\": \"Mass or Volume Air Flow Circuit Intermittent\",\n    \"P0105\": \"Manifold Absolute Pressure/Barometric Pressure Circuit\",\n    \"P0106\": \"Manifold Absolute Pressure/Barometric Pressure Circuit Range/Performance\",\n    \"P0107\": \"Manifold Absolute Pressure/Barometric Pressure Circuit Low Input\",\n    \"P0108\": \"Manifold Absolute Pressure/Barometric Pressure Circuit High Input\",\n    \"P0109\": \"Manifold Absolute Pressure/Barometric Pressure Circuit Intermittent\",\n    \"P0110\": \"Intake Air Temperature Sensor 1 Circuit\",\n    \"P0111\": \"Intake Air Temperature Sensor 1 Circuit Range/Performance\",\n    \"P0112\": \"Intake Air Temperature Sensor 1 Circuit Low\",\n    \"P0113\": \"Intake Air Temperature Sensor 1 Circuit High\",\n    \"P0114\": \"Intake Air Temperature Sensor 1 Circuit Intermittent\",\n    \"P0115\": \"Engine Coolant Temperature Circuit\",\n    \"P0116\": \"Engine Coolant Temperature Circuit Range/Performance\",\n    \"P0117\": \"Engine Coolant Temperature Circuit Low\",\n    \"P0118\": \"Engine Coolant Temperature Circuit High\",\n    \"P0119\": \"Engine Coolant Temperature Circuit Intermittent\",\n    \"P0120\": \"Throttle/Pedal Position Sensor/Switch 'A' Circuit\",\n    \"P0121\": \"Throttle/Pedal Position Sensor/Switch 'A' Circuit Range/Performance\",\n    \"P0122\": \"Throttle/Pedal Position Sensor/Switch 'A' Circuit Low\",\n    \"P0123\": \"Throttle/Pedal Position Sensor/Switch 'A' Circuit High\",\n    \"P0124\": \"Throttle/Pedal Position Sensor/Switch 'A' Circuit Intermittent\",\n    \"P0125\": \"Insufficient Coolant Temperature for Closed Loop Fuel Control\",\n    \"P0126\": \"Insufficient Coolant Temperature for Stable Operation\",\n    \"P0127\": \"Intake Air Temperature Too High\",\n    \"P0128\": \"Coolant Thermostat (Coolant Temperature Below Thermostat Regulating Temperature)\",\n    \"P0129\": \"Barometric Pressure Too Low\",\n    \"P0130\": \"O2 Sensor Circuit\",\n    \"P0131\": \"O2 Sensor Circuit Low Voltage\",\n    \"P0132\": \"O2 Sensor Circuit High Voltage\",\n    \"P0133\": \"O2 Sensor Circuit Slow Response\",\n    \"P0134\": \"O2 Sensor Circuit No Activity Detected\",\n    \"P0135\": \"O2 Sensor Heater Circuit\",\n    \"P0136\": \"O2 Sensor Circuit\",\n    \"P0137\": \"O2 Sensor Circuit Low Voltage\",\n    \"P0138\": \"O2 Sensor Circuit High Voltage\",\n    \"P0139\": \"O2 Sensor Circuit Slow Response\",\n    \"P0140\": \"O2 Sensor Circuit No Activity Detected\",\n    \"P0141\": \"O2 Sensor Heater Circuit\",\n    \"P0142\": \"O2 Sensor Circuit\",\n    \"P0143\": \"O2 Sensor Circuit Low Voltage\",\n    \"P0144\": \"O2 Sensor Circuit High Voltage\",\n    \"P0145\": \"O2 Sensor Circuit Slow Response\",\n    \"P0146\": \"O2 Sensor Circuit No Activity Detected\",\n    \"P0147\": \"O2 Sensor Heater Circuit\",\n    \"P0148\": \"Fuel Delivery Error\",\n    \"P0149\": \"Fuel Timing Error\",\n    \"P0150\": \"O2 Sensor Circuit\",\n    \"P0151\": \"O2 Sensor Circuit Low Voltage\",\n    \"P0152\": \"O2 Sensor Circuit High Voltage\",\n    \"P0153\": \"O2 Sensor Circuit Slow Response\",\n    \"P0154\": \"O2 Sensor Circuit No Activity Detected\",\n    \"P0155\": \"O2 Sensor Heater Circuit\",\n    \"P0156\": \"O2 Sensor Circuit\",\n    \"P0157\": \"O2 Sensor Circuit Low Voltage\",\n    \"P0158\": \"O2 Sensor Circuit High Voltage\",\n    \"P0159\": \"O2 Sensor Circuit Slow Response\",\n    \"P0160\": \"O2 Sensor Circuit No Activity Detected\",\n    \"P0161\": \"O2 Sensor Heater Circuit\",\n    \"P0162\": \"O2 Sensor Circuit\",\n    \"P0163\": \"O2 Sensor Circuit Low Voltage\",\n    \"P0164\": \"O2 Sensor Circuit High Voltage\",\n    \"P0165\": \"O2 Sensor Circuit Slow Response\",\n    \"P0166\": \"O2 Sensor Circuit No Activity Detected\",\n    \"P0167\": \"O2 Sensor Heater Circuit\",\n    \"P0168\": \"Fuel Temperature Too High\",\n    \"P0169\": \"Incorrect Fuel Composition\",\n    \"P0170\": \"Fuel Trim\",\n    \"P0171\": \"System Too Lean\",\n    \"P0172\": \"System Too Rich\",\n    \"P0173\": \"Fuel Trim\",\n    \"P0174\": \"System Too Lean\",\n    \"P0175\": \"System Too Rich\",\n    \"P0176\": \"Fuel Composition Sensor Circuit\",\n    \"P0177\": \"Fuel Composition Sensor Circuit Range/Performance\",\n    \"P0178\": \"Fuel Composition Sensor Circuit Low\",\n    \"P0179\": \"Fuel Composition Sensor Circuit High\",\n    \"P0180\": \"Fuel Temperature Sensor A Circuit\",\n    \"P0181\": \"Fuel Temperature Sensor A Circuit Range/Performance\",\n    \"P0182\": \"Fuel Temperature Sensor A Circuit Low\",\n    \"P0183\": \"Fuel Temperature Sensor A Circuit High\",\n    \"P0184\": \"Fuel Temperature Sensor A Circuit Intermittent\",\n    \"P0185\": \"Fuel Temperature Sensor B Circuit\",\n    \"P0186\": \"Fuel Temperature Sensor B Circuit Range/Performance\",\n    \"P0187\": \"Fuel Temperature Sensor B Circuit Low\",\n    \"P0188\": \"Fuel Temperature Sensor B Circuit High\",\n    \"P0189\": \"Fuel Temperature Sensor B Circuit Intermittent\",\n    \"P0190\": \"Fuel Rail Pressure Sensor Circuit\",\n    \"P0191\": \"Fuel Rail Pressure Sensor Circuit Range/Performance\",\n    \"P0192\": \"Fuel Rail Pressure Sensor Circuit Low\",\n    \"P0193\": \"Fuel Rail Pressure Sensor Circuit High\",\n    \"P0194\": \"Fuel Rail Pressure Sensor Circuit Intermittent\",\n    \"P0195\": \"Engine Oil Temperature Sensor\",\n    \"P0196\": \"Engine Oil Temperature Sensor Range/Performance\",\n    \"P0197\": \"Engine Oil Temperature Sensor Low\",\n    \"P0198\": \"Engine Oil Temperature Sensor High\",\n    \"P0199\": \"Engine Oil Temperature Sensor Intermittent\",\n    \"P0200\": \"Injector Circuit/Open\",\n    \"P0201\": \"Injector Circuit/Open - Cylinder 1\",\n    \"P0202\": \"Injector Circuit/Open - Cylinder 2\",\n    \"P0203\": \"Injector Circuit/Open - Cylinder 3\",\n    \"P0204\": \"Injector Circuit/Open - Cylinder 4\",\n    \"P0205\": \"Injector Circuit/Open - Cylinder 5\",\n    \"P0206\": \"Injector Circuit/Open - Cylinder 6\",\n    \"P0207\": \"Injector Circuit/Open - Cylinder 7\",\n    \"P0208\": \"Injector Circuit/Open - Cylinder 8\",\n    \"P0209\": \"Injector Circuit/Open - Cylinder 9\",\n    \"P0210\": \"Injector Circuit/Open - Cylinder 10\",\n    \"P0211\": \"Injector Circuit/Open - Cylinder 11\",\n    \"P0212\": \"Injector Circuit/Open - Cylinder 12\",\n    \"P0213\": \"Cold Start Injector 1\",\n    \"P0214\": \"Cold Start Injector 2\",\n    \"P0215\": \"Engine Shutoff Solenoid\",\n    \"P0216\": \"Injector/Injection Timing Control Circuit\",\n    \"P0217\": \"Engine Coolant Over Temperature Condition\",\n    \"P0218\": \"Transmission Fluid Over Temperature Condition\",\n    \"P0219\": \"Engine Overspeed Condition\",\n    \"P0220\": \"Throttle/Pedal Position Sensor/Switch 'B' Circuit\",\n    \"P0221\": \"Throttle/Pedal Position Sensor/Switch 'B' Circuit Range/Performance\",\n    \"P0222\": \"Throttle/Pedal Position Sensor/Switch 'B' Circuit Low\",\n    \"P0223\": \"Throttle/Pedal Position Sensor/Switch 'B' Circuit High\",\n    \"P0224\": \"Throttle/Pedal Position Sensor/Switch 'B' Circuit Intermittent\",\n    \"P0225\": \"Throttle/Pedal Position Sensor/Switch 'C' Circuit\",\n    \"P0226\": \"Throttle/Pedal Position Sensor/Switch 'C' Circuit Range/Performance\",\n    \"P0227\": \"Throttle/Pedal Position Sensor/Switch 'C' Circuit Low\",\n    \"P0228\": \"Throttle/Pedal Position Sensor/Switch 'C' Circuit High\",\n    \"P0229\": \"Throttle/Pedal Position Sensor/Switch 'C' Circuit Intermittent\",\n    \"P0230\": \"Fuel Pump Primary Circuit\",\n    \"P0231\": \"Fuel Pump Secondary Circuit Low\",\n    \"P0232\": \"Fuel Pump Secondary Circuit High\",\n    \"P0233\": \"Fuel Pump Secondary Circuit Intermittent\",\n    \"P0234\": \"Turbo/Super Charger Overboost Condition\",\n    \"P0235\": \"Turbo/Super Charger Boost Sensor 'A' Circuit\",\n    \"P0236\": \"Turbo/Super Charger Boost Sensor 'A' Circuit Range/Performance\",\n    \"P0237\": \"Turbo/Super Charger Boost Sensor 'A' Circuit Low\",\n    \"P0238\": \"Turbo/Super Charger Boost Sensor 'A' Circuit High\",\n    \"P0239\": \"Turbo/Super Charger Boost Sensor 'B' Circuit\",\n    \"P0240\": \"Turbo/Super Charger Boost Sensor 'B' Circuit Range/Performance\",\n    \"P0241\": \"Turbo/Super Charger Boost Sensor 'B' Circuit Low\",\n    \"P0242\": \"Turbo/Super Charger Boost Sensor 'B' Circuit High\",\n    \"P0243\": \"Turbo/Super Charger Wastegate Solenoid 'A'\",\n    \"P0244\": \"Turbo/Super Charger Wastegate Solenoid 'A' Range/Performance\",\n    \"P0245\": \"Turbo/Super Charger Wastegate Solenoid 'A' Low\",\n    \"P0246\": \"Turbo/Super Charger Wastegate Solenoid 'A' High\",\n    \"P0247\": \"Turbo/Super Charger Wastegate Solenoid 'B'\",\n    \"P0248\": \"Turbo/Super Charger Wastegate Solenoid 'B' Range/Performance\",\n    \"P0249\": \"Turbo/Super Charger Wastegate Solenoid 'B' Low\",\n    \"P0250\": \"Turbo/Super Charger Wastegate Solenoid 'B' High\",\n    \"P0251\": \"Injection Pump Fuel Metering Control 'A' (Cam/Rotor/Injector)\",\n    \"P0252\": \"Injection Pump Fuel Metering Control 'A' Range/Performance (Cam/Rotor/Injector)\",\n    \"P0253\": \"Injection Pump Fuel Metering Control 'A' Low (Cam/Rotor/Injector)\",\n    \"P0254\": \"Injection Pump Fuel Metering Control 'A' High (Cam/Rotor/Injector)\",\n    \"P0255\": \"Injection Pump Fuel Metering Control 'A' Intermittent (Cam/Rotor/Injector)\",\n    \"P0256\": \"Injection Pump Fuel Metering Control 'B' (Cam/Rotor/Injector)\",\n    \"P0257\": \"Injection Pump Fuel Metering Control 'B' Range/Performance (Cam/Rotor/Injector)\",\n    \"P0258\": \"Injection Pump Fuel Metering Control 'B' Low (Cam/Rotor/Injector)\",\n    \"P0259\": \"Injection Pump Fuel Metering Control 'B' High (Cam/Rotor/Injector)\",\n    \"P0260\": \"Injection Pump Fuel Metering Control 'B' Intermittent (Cam/Rotor/Injector)\",\n    \"P0261\": \"Cylinder 1 Injector Circuit Low\",\n    \"P0262\": \"Cylinder 1 Injector Circuit High\",\n    \"P0263\": \"Cylinder 1 Contribution/Balance\",\n    \"P0264\": \"Cylinder 2 Injector Circuit Low\",\n    \"P0265\": \"Cylinder 2 Injector Circuit High\",\n    \"P0266\": \"Cylinder 2 Contribution/Balance\",\n    \"P0267\": \"Cylinder 3 Injector Circuit Low\",\n    \"P0268\": \"Cylinder 3 Injector Circuit High\",\n    \"P0269\": \"Cylinder 3 Contribution/Balance\",\n    \"P0270\": \"Cylinder 4 Injector Circuit Low\",\n    \"P0271\": \"Cylinder 4 Injector Circuit High\",\n    \"P0272\": \"Cylinder 4 Contribution/Balance\",\n    \"P0273\": \"Cylinder 5 Injector Circuit Low\",\n    \"P0274\": \"Cylinder 5 Injector Circuit High\",\n    \"P0275\": \"Cylinder 5 Contribution/Balance\",\n    \"P0276\": \"Cylinder 6 Injector Circuit Low\",\n    \"P0277\": \"Cylinder 6 Injector Circuit High\",\n    \"P0278\": \"Cylinder 6 Contribution/Balance\",\n    \"P0279\": \"Cylinder 7 Injector Circuit Low\",\n    \"P0280\": \"Cylinder 7 Injector Circuit High\",\n    \"P0281\": \"Cylinder 7 Contribution/Balance\",\n    \"P0282\": \"Cylinder 8 Injector Circuit Low\",\n    \"P0283\": \"Cylinder 8 Injector Circuit High\",\n    \"P0284\": \"Cylinder 8 Contribution/Balance\",\n    \"P0285\": \"Cylinder 9 Injector Circuit Low\",\n    \"P0286\": \"Cylinder 9 Injector Circuit High\",\n    \"P0287\": \"Cylinder 9 Contribution/Balance\",\n    \"P0288\": \"Cylinder 10 Injector Circuit Low\",\n    \"P0289\": \"Cylinder 10 Injector Circuit High\",\n    \"P0290\": \"Cylinder 10 Contribution/Balance\",\n    \"P0291\": \"Cylinder 11 Injector Circuit Low\",\n    \"P0292\": \"Cylinder 11 Injector Circuit High\",\n    \"P0293\": \"Cylinder 11 Contribution/Balance\",\n    \"P0294\": \"Cylinder 12 Injector Circuit Low\",\n    \"P0295\": \"Cylinder 12 Injector Circuit High\",\n    \"P0296\": \"Cylinder 12 Contribution/Balance\",\n    \"P0297\": \"Vehicle Overspeed Condition\",\n    \"P0298\": \"Engine Oil Over Temperature\",\n    \"P0299\": \"Turbo/Super Charger Underboost\",\n    \"P0300\": \"Random/Multiple Cylinder Misfire Detected\",\n    \"P0301\": \"Cylinder 1 Misfire Detected\",\n    \"P0302\": \"Cylinder 2 Misfire Detected\",\n    \"P0303\": \"Cylinder 3 Misfire Detected\",\n    \"P0304\": \"Cylinder 4 Misfire Detected\",\n    \"P0305\": \"Cylinder 5 Misfire Detected\",\n    \"P0306\": \"Cylinder 6 Misfire Detected\",\n    \"P0307\": \"Cylinder 7 Misfire Detected\",\n    \"P0308\": \"Cylinder 8 Misfire Detected\",\n    \"P0309\": \"Cylinder 9 Misfire Detected\",\n    \"P0310\": \"Cylinder 10 Misfire Detected\",\n    \"P0311\": \"Cylinder 11 Misfire Detected\",\n    \"P0312\": \"Cylinder 12 Misfire Detected\",\n    \"P0313\": \"Misfire Detected with Low Fuel\",\n    \"P0314\": \"Single Cylinder Misfire (Cylinder not Specified)\",\n    \"P0315\": \"Crankshaft Position System Variation Not Learned\",\n    \"P0316\": \"Engine Misfire Detected on Startup (First 1000 Revolutions)\",\n    \"P0317\": \"Rough Road Hardware Not Present\",\n    \"P0318\": \"Rough Road Sensor 'A' Signal Circuit\",\n    \"P0319\": \"Rough Road Sensor 'B'\",\n    \"P0320\": \"Ignition/Distributor Engine Speed Input Circuit\",\n    \"P0321\": \"Ignition/Distributor Engine Speed Input Circuit Range/Performance\",\n    \"P0322\": \"Ignition/Distributor Engine Speed Input Circuit No Signal\",\n    \"P0323\": \"Ignition/Distributor Engine Speed Input Circuit Intermittent\",\n    \"P0324\": \"Knock Control System Error\",\n    \"P0325\": \"Knock Sensor 1 Circuit\",\n    \"P0326\": \"Knock Sensor 1 Circuit Range/Performance\",\n    \"P0327\": \"Knock Sensor 1 Circuit Low\",\n    \"P0328\": \"Knock Sensor 1 Circuit High\",\n    \"P0329\": \"Knock Sensor 1 Circuit Input Intermittent\",\n    \"P0330\": \"Knock Sensor 2 Circuit\",\n    \"P0331\": \"Knock Sensor 2 Circuit Range/Performance\",\n    \"P0332\": \"Knock Sensor 2 Circuit Low\",\n    \"P0333\": \"Knock Sensor 2 Circuit High\",\n    \"P0334\": \"Knock Sensor 2 Circuit Input Intermittent\",\n    \"P0335\": \"Crankshaft Position Sensor 'A' Circuit\",\n    \"P0336\": \"Crankshaft Position Sensor 'A' Circuit Range/Performance\",\n    \"P0337\": \"Crankshaft Position Sensor 'A' Circuit Low\",\n    \"P0338\": \"Crankshaft Position Sensor 'A' Circuit High\",\n    \"P0339\": \"Crankshaft Position Sensor 'A' Circuit Intermittent\",\n    \"P0340\": \"Camshaft Position Sensor 'A' Circuit\",\n    \"P0341\": \"Camshaft Position Sensor 'A' Circuit Range/Performance\",\n    \"P0342\": \"Camshaft Position Sensor 'A' Circuit Low\",\n    \"P0343\": \"Camshaft Position Sensor 'A' Circuit High\",\n    \"P0344\": \"Camshaft Position Sensor 'A' Circuit Intermittent\",\n    \"P0345\": \"Camshaft Position Sensor 'A' Circuit\",\n    \"P0346\": \"Camshaft Position Sensor 'A' Circuit Range/Performance\",\n    \"P0347\": \"Camshaft Position Sensor 'A' Circuit Low\",\n    \"P0348\": \"Camshaft Position Sensor 'A' Circuit High\",\n    \"P0349\": \"Camshaft Position Sensor 'A' Circuit Intermittent\",\n    \"P0350\": \"Ignition Coil Primary/Secondary Circuit\",\n    \"P0351\": \"Ignition Coil 'A' Primary/Secondary Circuit\",\n    \"P0352\": \"Ignition Coil 'B' Primary/Secondary Circuit\",\n    \"P0353\": \"Ignition Coil 'C' Primary/Secondary Circuit\",\n    \"P0354\": \"Ignition Coil 'D' Primary/Secondary Circuit\",\n    \"P0355\": \"Ignition Coil 'E' Primary/Secondary Circuit\",\n    \"P0356\": \"Ignition Coil 'F' Primary/Secondary Circuit\",\n    \"P0357\": \"Ignition Coil 'G' Primary/Secondary Circuit\",\n    \"P0358\": \"Ignition Coil 'H' Primary/Secondary Circuit\",\n    \"P0359\": \"Ignition Coil 'I' Primary/Secondary Circuit\",\n    \"P0360\": \"Ignition Coil 'J' Primary/Secondary Circuit\",\n    \"P0361\": \"Ignition Coil 'K' Primary/Secondary Circuit\",\n    \"P0362\": \"Ignition Coil 'L' Primary/Secondary Circuit\",\n    \"P0363\": \"Misfire Detected - Fueling Disabled\",\n    \"P0364\": \"Reserved\",\n    \"P0365\": \"Camshaft Position Sensor 'B' Circuit\",\n    \"P0366\": \"Camshaft Position Sensor 'B' Circuit Range/Performance\",\n    \"P0367\": \"Camshaft Position Sensor 'B' Circuit Low\",\n    \"P0368\": \"Camshaft Position Sensor 'B' Circuit High\",\n    \"P0369\": \"Camshaft Position Sensor 'B' Circuit Intermittent\",\n    \"P0370\": \"Timing Reference High Resolution Signal 'A'\",\n    \"P0371\": \"Timing Reference High Resolution Signal 'A' Too Many Pulses\",\n    \"P0372\": \"Timing Reference High Resolution Signal 'A' Too Few Pulses\",\n    \"P0373\": \"Timing Reference High Resolution Signal 'A' Intermittent/Erratic Pulses\",\n    \"P0374\": \"Timing Reference High Resolution Signal 'A' No Pulse\",\n    \"P0375\": \"Timing Reference High Resolution Signal 'B'\",\n    \"P0376\": \"Timing Reference High Resolution Signal 'B' Too Many Pulses\",\n    \"P0377\": \"Timing Reference High Resolution Signal 'B' Too Few Pulses\",\n    \"P0378\": \"Timing Reference High Resolution Signal 'B' Intermittent/Erratic Pulses\",\n    \"P0379\": \"Timing Reference High Resolution Signal 'B' No Pulses\",\n    \"P0380\": \"Glow Plug/Heater Circuit 'A'\",\n    \"P0381\": \"Glow Plug/Heater Indicator Circuit\",\n    \"P0382\": \"Glow Plug/Heater Circuit 'B'\",\n    \"P0383\": \"Reserved by SAE J2012\",\n    \"P0384\": \"Reserved by SAE J2012\",\n    \"P0385\": \"Crankshaft Position Sensor 'B' Circuit\",\n    \"P0386\": \"Crankshaft Position Sensor 'B' Circuit Range/Performance\",\n    \"P0387\": \"Crankshaft Position Sensor 'B' Circuit Low\",\n    \"P0388\": \"Crankshaft Position Sensor 'B' Circuit High\",\n    \"P0389\": \"Crankshaft Position Sensor 'B' Circuit Intermittent\",\n    \"P0390\": \"Camshaft Position Sensor 'B' Circuit\",\n    \"P0391\": \"Camshaft Position Sensor 'B' Circuit Range/Performance\",\n    \"P0392\": \"Camshaft Position Sensor 'B' Circuit Low\",\n    \"P0393\": \"Camshaft Position Sensor 'B' Circuit High\",\n    \"P0394\": \"Camshaft Position Sensor 'B' Circuit Intermittent\",\n    \"P0400\": \"Exhaust Gas Recirculation Flow\",\n    \"P0401\": \"Exhaust Gas Recirculation Flow Insufficient Detected\",\n    \"P0402\": \"Exhaust Gas Recirculation Flow Excessive Detected\",\n    \"P0403\": \"Exhaust Gas Recirculation Control Circuit\",\n    \"P0404\": \"Exhaust Gas Recirculation Control Circuit Range/Performance\",\n    \"P0405\": \"Exhaust Gas Recirculation Sensor 'A' Circuit Low\",\n    \"P0406\": \"Exhaust Gas Recirculation Sensor 'A' Circuit High\",\n    \"P0407\": \"Exhaust Gas Recirculation Sensor 'B' Circuit Low\",\n    \"P0408\": \"Exhaust Gas Recirculation Sensor 'B' Circuit High\",\n    \"P0409\": \"Exhaust Gas Recirculation Sensor 'A' Circuit\",\n    \"P0410\": \"Secondary Air Injection System\",\n    \"P0411\": \"Secondary Air Injection System Incorrect Flow Detected\",\n    \"P0412\": \"Secondary Air Injection System Switching Valve 'A' Circuit\",\n    \"P0413\": \"Secondary Air Injection System Switching Valve 'A' Circuit Open\",\n    \"P0414\": \"Secondary Air Injection System Switching Valve 'A' Circuit Shorted\",\n    \"P0415\": \"Secondary Air Injection System Switching Valve 'B' Circuit\",\n    \"P0416\": \"Secondary Air Injection System Switching Valve 'B' Circuit Open\",\n    \"P0417\": \"Secondary Air Injection System Switching Valve 'B' Circuit Shorted\",\n    \"P0418\": \"Secondary Air Injection System Control 'A' Circuit\",\n    \"P0419\": \"Secondary Air Injection System Control 'B' Circuit\",\n    \"P0420\": \"Catalyst System Efficiency Below Threshold\",\n    \"P0421\": \"Warm Up Catalyst Efficiency Below Threshold\",\n    \"P0422\": \"Main Catalyst Efficiency Below Threshold\",\n    \"P0423\": \"Heated Catalyst Efficiency Below Threshold\",\n    \"P0424\": \"Heated Catalyst Temperature Below Threshold\",\n    \"P0425\": \"Catalyst Temperature Sensor\",\n    \"P0426\": \"Catalyst Temperature Sensor Range/Performance\",\n    \"P0427\": \"Catalyst Temperature Sensor Low\",\n    \"P0428\": \"Catalyst Temperature Sensor High\",\n    \"P0429\": \"Catalyst Heater Control Circuit\",\n    \"P0430\": \"Catalyst System Efficiency Below Threshold\",\n    \"P0431\": \"Warm Up Catalyst Efficiency Below Threshold\",\n    \"P0432\": \"Main Catalyst Efficiency Below Threshold\",\n    \"P0433\": \"Heated Catalyst Efficiency Below Threshold\",\n    \"P0434\": \"Heated Catalyst Temperature Below Threshold\",\n    \"P0435\": \"Catalyst Temperature Sensor\",\n    \"P0436\": \"Catalyst Temperature Sensor Range/Performance\",\n    \"P0437\": \"Catalyst Temperature Sensor Low\",\n    \"P0438\": \"Catalyst Temperature Sensor High\",\n    \"P0439\": \"Catalyst Heater Control Circuit\",\n    \"P0440\": \"Evaporative Emission System\",\n    \"P0441\": \"Evaporative Emission System Incorrect Purge Flow\",\n    \"P0442\": \"Evaporative Emission System Leak Detected (small leak)\",\n    \"P0443\": \"Evaporative Emission System Purge Control Valve Circuit\",\n    \"P0444\": \"Evaporative Emission System Purge Control Valve Circuit Open\",\n    \"P0445\": \"Evaporative Emission System Purge Control Valve Circuit Shorted\",\n    \"P0446\": \"Evaporative Emission System Vent Control Circuit\",\n    \"P0447\": \"Evaporative Emission System Vent Control Circuit Open\",\n    \"P0448\": \"Evaporative Emission System Vent Control Circuit Shorted\",\n    \"P0449\": \"Evaporative Emission System Vent Valve/Solenoid Circuit\",\n    \"P0450\": \"Evaporative Emission System Pressure Sensor/Switch\",\n    \"P0451\": \"Evaporative Emission System Pressure Sensor/Switch Range/Performance\",\n    \"P0452\": \"Evaporative Emission System Pressure Sensor/Switch Low\",\n    \"P0453\": \"Evaporative Emission System Pressure Sensor/Switch High\",\n    \"P0454\": \"Evaporative Emission System Pressure Sensor/Switch Intermittent\",\n    \"P0455\": \"Evaporative Emission System Leak Detected (large leak)\",\n    \"P0456\": \"Evaporative Emission System Leak Detected (very small leak)\",\n    \"P0457\": \"Evaporative Emission System Leak Detected (fuel cap loose/off)\",\n    \"P0458\": \"Evaporative Emission System Purge Control Valve Circuit Low\",\n    \"P0459\": \"Evaporative Emission System Purge Control Valve Circuit High\",\n    \"P0460\": \"Fuel Level Sensor 'A' Circuit\",\n    \"P0461\": \"Fuel Level Sensor 'A' Circuit Range/Performance\",\n    \"P0462\": \"Fuel Level Sensor 'A' Circuit Low\",\n    \"P0463\": \"Fuel Level Sensor 'A' Circuit High\",\n    \"P0464\": \"Fuel Level Sensor 'A' Circuit Intermittent\",\n    \"P0465\": \"EVAP Purge Flow Sensor Circuit\",\n    \"P0466\": \"EVAP Purge Flow Sensor Circuit Range/Performance\",\n    \"P0467\": \"EVAP Purge Flow Sensor Circuit Low\",\n    \"P0468\": \"EVAP Purge Flow Sensor Circuit High\",\n    \"P0469\": \"EVAP Purge Flow Sensor Circuit Intermittent\",\n    \"P0470\": \"Exhaust Pressure Sensor\",\n    \"P0471\": \"Exhaust Pressure Sensor Range/Performance\",\n    \"P0472\": \"Exhaust Pressure Sensor Low\",\n    \"P0473\": \"Exhaust Pressure Sensor High\",\n    \"P0474\": \"Exhaust Pressure Sensor Intermittent\",\n    \"P0475\": \"Exhaust Pressure Control Valve\",\n    \"P0476\": \"Exhaust Pressure Control Valve Range/Performance\",\n    \"P0477\": \"Exhaust Pressure Control Valve Low\",\n    \"P0478\": \"Exhaust Pressure Control Valve High\",\n    \"P0479\": \"Exhaust Pressure Control Valve Intermittent\",\n    \"P0480\": \"Fan 1 Control Circuit\",\n    \"P0481\": \"Fan 2 Control Circuit\",\n    \"P0482\": \"Fan 3 Control Circuit\",\n    \"P0483\": \"Fan Rationality Check\",\n    \"P0484\": \"Fan Circuit Over Current\",\n    \"P0485\": \"Fan Power/Ground Circuit\",\n    \"P0486\": \"Exhaust Gas Recirculation Sensor 'B' Circuit\",\n    \"P0487\": \"Exhaust Gas Recirculation Throttle Position Control Circuit\",\n    \"P0488\": \"Exhaust Gas Recirculation Throttle Position Control Range/Performance\",\n    \"P0489\": \"Exhaust Gas Recirculation Control Circuit Low\",\n    \"P0490\": \"Exhaust Gas Recirculation Control Circuit High\",\n    \"P0491\": \"Secondary Air Injection System Insufficient Flow\",\n    \"P0492\": \"Secondary Air Injection System Insufficient Flow\",\n    \"P0493\": \"Fan Overspeed\",\n    \"P0494\": \"Fan Speed Low\",\n    \"P0495\": \"Fan Speed High\",\n    \"P0496\": \"Evaporative Emission System High Purge Flow\",\n    \"P0497\": \"Evaporative Emission System Low Purge Flow\",\n    \"P0498\": \"Evaporative Emission System Vent Valve Control Circuit Low\",\n    \"P0499\": \"Evaporative Emission System Vent Valve Control Circuit High\",\n    \"P0500\": \"Vehicle Speed Sensor 'A'\",\n    \"P0501\": \"Vehicle Speed Sensor 'A' Range/Performance\",\n    \"P0502\": \"Vehicle Speed Sensor 'A' Circuit Low Input\",\n    \"P0503\": \"Vehicle Speed Sensor 'A' Intermittent/Erratic/High\",\n    \"P0504\": \"Brake Switch 'A'/'B' Correlation\",\n    \"P0505\": \"Idle Air Control System\",\n    \"P0506\": \"Idle Air Control System RPM Lower Than Expected\",\n    \"P0507\": \"Idle Air Control System RPM Higher Than Expected\",\n    \"P0508\": \"Idle Air Control System Circuit Low\",\n    \"P0509\": \"Idle Air Control System Circuit High\",\n    \"P0510\": \"Closed Throttle Position Switch\",\n    \"P0511\": \"Idle Air Control Circuit\",\n    \"P0512\": \"Starter Request Circuit\",\n    \"P0513\": \"Incorrect Immobilizer Key\",\n    \"P0514\": \"Battery Temperature Sensor Circuit Range/Performance\",\n    \"P0515\": \"Battery Temperature Sensor Circuit\",\n    \"P0516\": \"Battery Temperature Sensor Circuit Low\",\n    \"P0517\": \"Battery Temperature Sensor Circuit High\",\n    \"P0518\": \"Idle Air Control Circuit Intermittent\",\n    \"P0519\": \"Idle Air Control System Performance\",\n    \"P0520\": \"Engine Oil Pressure Sensor/Switch Circuit\",\n    \"P0521\": \"Engine Oil Pressure Sensor/Switch Range/Performance\",\n    \"P0522\": \"Engine Oil Pressure Sensor/Switch Low Voltage\",\n    \"P0523\": \"Engine Oil Pressure Sensor/Switch High Voltage\",\n    \"P0524\": \"Engine Oil Pressure Too Low\",\n    \"P0525\": \"Cruise Control Servo Control Circuit Range/Performance\",\n    \"P0526\": \"Fan Speed Sensor Circuit\",\n    \"P0527\": \"Fan Speed Sensor Circuit Range/Performance\",\n    \"P0528\": \"Fan Speed Sensor Circuit No Signal\",\n    \"P0529\": \"Fan Speed Sensor Circuit Intermittent\",\n    \"P0530\": \"A/C Refrigerant Pressure Sensor 'A' Circuit\",\n    \"P0531\": \"A/C Refrigerant Pressure Sensor 'A' Circuit Range/Performance\",\n    \"P0532\": \"A/C Refrigerant Pressure Sensor 'A' Circuit Low\",\n    \"P0533\": \"A/C Refrigerant Pressure Sensor 'A' Circuit High\",\n    \"P0534\": \"Air Conditioner Refrigerant Charge Loss\",\n    \"P0535\": \"A/C Evaporator Temperature Sensor Circuit\",\n    \"P0536\": \"A/C Evaporator Temperature Sensor Circuit Range/Performance\",\n    \"P0537\": \"A/C Evaporator Temperature Sensor Circuit Low\",\n    \"P0538\": \"A/C Evaporator Temperature Sensor Circuit High\",\n    \"P0539\": \"A/C Evaporator Temperature Sensor Circuit Intermittent\",\n    \"P0540\": \"Intake Air Heater 'A' Circuit\",\n    \"P0541\": \"Intake Air Heater 'A' Circuit Low\",\n    \"P0542\": \"Intake Air Heater 'A' Circuit High\",\n    \"P0543\": \"Intake Air Heater 'A' Circuit Open\",\n    \"P0544\": \"Exhaust Gas Temperature Sensor Circuit\",\n    \"P0545\": \"Exhaust Gas Temperature Sensor Circuit Low\",\n    \"P0546\": \"Exhaust Gas Temperature Sensor Circuit High\",\n    \"P0547\": \"Exhaust Gas Temperature Sensor Circuit\",\n    \"P0548\": \"Exhaust Gas Temperature Sensor Circuit Low\",\n    \"P0549\": \"Exhaust Gas Temperature Sensor Circuit High\",\n    \"P0550\": \"Power Steering Pressure Sensor/Switch Circuit\",\n    \"P0551\": \"Power Steering Pressure Sensor/Switch Circuit Range/Performance\",\n    \"P0552\": \"Power Steering Pressure Sensor/Switch Circuit Low Input\",\n    \"P0553\": \"Power Steering Pressure Sensor/Switch Circuit High Input\",\n    \"P0554\": \"Power Steering Pressure Sensor/Switch Circuit Intermittent\",\n    \"P0555\": \"Brake Booster Pressure Sensor Circuit\",\n    \"P0556\": \"Brake Booster Pressure Sensor Circuit Range/Performance\",\n    \"P0557\": \"Brake Booster Pressure Sensor Circuit Low Input\",\n    \"P0558\": \"Brake Booster Pressure Sensor Circuit High Input\",\n    \"P0559\": \"Brake Booster Pressure Sensor Circuit Intermittent\",\n    \"P0560\": \"System Voltage\",\n    \"P0561\": \"System Voltage Unstable\",\n    \"P0562\": \"System Voltage Low\",\n    \"P0563\": \"System Voltage High\",\n    \"P0564\": \"Cruise Control Multi-Function Input 'A' Circuit\",\n    \"P0565\": \"Cruise Control On Signal\",\n    \"P0566\": \"Cruise Control Off Signal\",\n    \"P0567\": \"Cruise Control Resume Signal\",\n    \"P0568\": \"Cruise Control Set Signal\",\n    \"P0569\": \"Cruise Control Coast Signal\",\n    \"P0570\": \"Cruise Control Accelerate Signal\",\n    \"P0571\": \"Brake Switch 'A' Circuit\",\n    \"P0572\": \"Brake Switch 'A' Circuit Low\",\n    \"P0573\": \"Brake Switch 'A' Circuit High\",\n    \"P0574\": \"Cruise Control System - Vehicle Speed Too High\",\n    \"P0575\": \"Cruise Control Input Circuit\",\n    \"P0576\": \"Cruise Control Input Circuit Low\",\n    \"P0577\": \"Cruise Control Input Circuit High\",\n    \"P0578\": \"Cruise Control Multi-Function Input 'A' Circuit Stuck\",\n    \"P0579\": \"Cruise Control Multi-Function Input 'A' Circuit Range/Performance\",\n    \"P0580\": \"Cruise Control Multi-Function Input 'A' Circuit Low\",\n    \"P0581\": \"Cruise Control Multi-Function Input 'A' Circuit High\",\n    \"P0582\": \"Cruise Control Vacuum Control Circuit/Open\",\n    \"P0583\": \"Cruise Control Vacuum Control Circuit Low\",\n    \"P0584\": \"Cruise Control Vacuum Control Circuit High\",\n    \"P0585\": \"Cruise Control Multi-Function Input 'A'/'B' Correlation\",\n    \"P0586\": \"Cruise Control Vent Control Circuit/Open\",\n    \"P0587\": \"Cruise Control Vent Control Circuit Low\",\n    \"P0588\": \"Cruise Control Vent Control Circuit High\",\n    \"P0589\": \"Cruise Control Multi-Function Input 'B' Circuit\",\n    \"P0590\": \"Cruise Control Multi-Function Input 'B' Circuit Stuck\",\n    \"P0591\": \"Cruise Control Multi-Function Input 'B' Circuit Range/Performance\",\n    \"P0592\": \"Cruise Control Multi-Function Input 'B' Circuit Low\",\n    \"P0593\": \"Cruise Control Multi-Function Input 'B' Circuit High\",\n    \"P0594\": \"Cruise Control Servo Control Circuit/Open\",\n    \"P0595\": \"Cruise Control Servo Control Circuit Low\",\n    \"P0596\": \"Cruise Control Servo Control Circuit High\",\n    \"P0597\": \"Thermostat Heater Control Circuit/Open\",\n    \"P0598\": \"Thermostat Heater Control Circuit Low\",\n    \"P0599\": \"Thermostat Heater Control Circuit High\",\n    \"P0600\": \"Serial Communication Link\",\n    \"P0601\": \"Internal Control Module Memory Check Sum Error\",\n    \"P0602\": \"Control Module Programming Error\",\n    \"P0603\": \"Internal Control Module Keep Alive Memory (KAM) Error\",\n    \"P0604\": \"Internal Control Module Random Access Memory (RAM) Error\",\n    \"P0605\": \"Internal Control Module Read Only Memory (ROM) Error\",\n    \"P0606\": \"ECM/PCM Processor\",\n    \"P0607\": \"Control Module Performance\",\n    \"P0608\": \"Control Module VSS Output 'A'\",\n    \"P0609\": \"Control Module VSS Output 'B'\",\n    \"P0610\": \"Control Module Vehicle Options Error\",\n    \"P0611\": \"Fuel Injector Control Module Performance\",\n    \"P0612\": \"Fuel Injector Control Module Relay Control\",\n    \"P0613\": \"TCM Processor\",\n    \"P0614\": \"ECM / TCM Incompatible\",\n    \"P0615\": \"Starter Relay Circuit\",\n    \"P0616\": \"Starter Relay Circuit Low\",\n    \"P0617\": \"Starter Relay Circuit High\",\n    \"P0618\": \"Alternative Fuel Control Module KAM Error\",\n    \"P0619\": \"Alternative Fuel Control Module RAM/ROM Error\",\n    \"P0620\": \"Generator Control Circuit\",\n    \"P0621\": \"Generator Lamp/L Terminal Circuit\",\n    \"P0622\": \"Generator Field/F Terminal Circuit\",\n    \"P0623\": \"Generator Lamp Control Circuit\",\n    \"P0624\": \"Fuel Cap Lamp Control Circuit\",\n    \"P0625\": \"Generator Field/F Terminal Circuit Low\",\n    \"P0626\": \"Generator Field/F Terminal Circuit High\",\n    \"P0627\": \"Fuel Pump 'A' Control Circuit /Open\",\n    \"P0628\": \"Fuel Pump 'A' Control Circuit Low\",\n    \"P0629\": \"Fuel Pump 'A' Control Circuit High\",\n    \"P0630\": \"VIN Not Programmed or Incompatible - ECM/PCM\",\n    \"P0631\": \"VIN Not Programmed or Incompatible - TCM\",\n    \"P0632\": \"Odometer Not Programmed - ECM/PCM\",\n    \"P0633\": \"Immobilizer Key Not Programmed - ECM/PCM\",\n    \"P0634\": \"PCM/ECM/TCM Internal Temperature Too High\",\n    \"P0635\": \"Power Steering Control Circuit\",\n    \"P0636\": \"Power Steering Control Circuit Low\",\n    \"P0637\": \"Power Steering Control Circuit High\",\n    \"P0638\": \"Throttle Actuator Control Range/Performance\",\n    \"P0639\": \"Throttle Actuator Control Range/Performance\",\n    \"P0640\": \"Intake Air Heater Control Circuit\",\n    \"P0641\": \"Sensor Reference Voltage 'A' Circuit/Open\",\n    \"P0642\": \"Sensor Reference Voltage 'A' Circuit Low\",\n    \"P0643\": \"Sensor Reference Voltage 'A' Circuit High\",\n    \"P0644\": \"Driver Display Serial Communication Circuit\",\n    \"P0645\": \"A/C Clutch Relay Control Circuit\",\n    \"P0646\": \"A/C Clutch Relay Control Circuit Low\",\n    \"P0647\": \"A/C Clutch Relay Control Circuit High\",\n    \"P0648\": \"Immobilizer Lamp Control Circuit\",\n    \"P0649\": \"Speed Control Lamp Control Circuit\",\n    \"P0650\": \"Malfunction Indicator Lamp (MIL) Control Circuit\",\n    \"P0651\": \"Sensor Reference Voltage 'B' Circuit/Open\",\n    \"P0652\": \"Sensor Reference Voltage 'B' Circuit Low\",\n    \"P0653\": \"Sensor Reference Voltage 'B' Circuit High\",\n    \"P0654\": \"Engine RPM Output Circuit\",\n    \"P0655\": \"Engine Hot Lamp Output Control Circuit\",\n    \"P0656\": \"Fuel Level Output Circuit\",\n    \"P0657\": \"Actuator Supply Voltage 'A' Circuit/Open\",\n    \"P0658\": \"Actuator Supply Voltage 'A' Circuit Low\",\n    \"P0659\": \"Actuator Supply Voltage 'A' Circuit High\",\n    \"P0660\": \"Intake Manifold Tuning Valve Control Circuit/Open\",\n    \"P0661\": \"Intake Manifold Tuning Valve Control Circuit Low\",\n    \"P0662\": \"Intake Manifold Tuning Valve Control Circuit High\",\n    \"P0663\": \"Intake Manifold Tuning Valve Control Circuit/Open\",\n    \"P0664\": \"Intake Manifold Tuning Valve Control Circuit Low\",\n    \"P0665\": \"Intake Manifold Tuning Valve Control Circuit High\",\n    \"P0666\": \"PCM/ECM/TCM Internal Temperature Sensor Circuit\",\n    \"P0667\": \"PCM/ECM/TCM Internal Temperature Sensor Range/Performance\",\n    \"P0668\": \"PCM/ECM/TCM Internal Temperature Sensor Circuit Low\",\n    \"P0669\": \"PCM/ECM/TCM Internal Temperature Sensor Circuit High\",\n    \"P0670\": \"Glow Plug Module Control Circuit\",\n    \"P0671\": \"Cylinder 1 Glow Plug Circuit\",\n    \"P0672\": \"Cylinder 2 Glow Plug Circuit\",\n    \"P0673\": \"Cylinder 3 Glow Plug Circuit\",\n    \"P0674\": \"Cylinder 4 Glow Plug Circuit\",\n    \"P0675\": \"Cylinder 5 Glow Plug Circuit\",\n    \"P0676\": \"Cylinder 6 Glow Plug Circuit\",\n    \"P0677\": \"Cylinder 7 Glow Plug Circuit\",\n    \"P0678\": \"Cylinder 8 Glow Plug Circuit\",\n    \"P0679\": \"Cylinder 9 Glow Plug Circuit\",\n    \"P0680\": \"Cylinder 10 Glow Plug Circuit\",\n    \"P0681\": \"Cylinder 11 Glow Plug Circuit\",\n    \"P0682\": \"Cylinder 12 Glow Plug Circuit\",\n    \"P0683\": \"Glow Plug Control Module to PCM Communication Circuit\",\n    \"P0684\": \"Glow Plug Control Module to PCM Communication Circuit Range/Performance\",\n    \"P0685\": \"ECM/PCM Power Relay Control Circuit /Open\",\n    \"P0686\": \"ECM/PCM Power Relay Control Circuit Low\",\n    \"P0687\": \"ECM/PCM Power Relay Control Circuit High\",\n    \"P0688\": \"ECM/PCM Power Relay Sense Circuit /Open\",\n    \"P0689\": \"ECM/PCM Power Relay Sense Circuit Low\",\n    \"P0690\": \"ECM/PCM Power Relay Sense Circuit High\",\n    \"P0691\": \"Fan 1 Control Circuit Low\",\n    \"P0692\": \"Fan 1 Control Circuit High\",\n    \"P0693\": \"Fan 2 Control Circuit Low\",\n    \"P0694\": \"Fan 2 Control Circuit High\",\n    \"P0695\": \"Fan 3 Control Circuit Low\",\n    \"P0696\": \"Fan 3 Control Circuit High\",\n    \"P0697\": \"Sensor Reference Voltage 'C' Circuit/Open\",\n    \"P0698\": \"Sensor Reference Voltage 'C' Circuit Low\",\n    \"P0699\": \"Sensor Reference Voltage 'C' Circuit High\",\n    \"P0700\": \"Transmission Control System (MIL Request)\",\n    \"P0701\": \"Transmission Control System Range/Performance\",\n    \"P0702\": \"Transmission Control System Electrical\",\n    \"P0703\": \"Brake Switch 'B' Circuit\",\n    \"P0704\": \"Clutch Switch Input Circuit Malfunction\",\n    \"P0705\": \"Transmission Range Sensor Circuit Malfunction (PRNDL Input)\",\n    \"P0706\": \"Transmission Range Sensor Circuit Range/Performance\",\n    \"P0707\": \"Transmission Range Sensor Circuit Low\",\n    \"P0708\": \"Transmission Range Sensor Circuit High\",\n    \"P0709\": \"Transmission Range Sensor Circuit Intermittent\",\n    \"P0710\": \"Transmission Fluid Temperature Sensor 'A' Circuit\",\n    \"P0711\": \"Transmission Fluid Temperature Sensor 'A' Circuit Range/Performance\",\n    \"P0712\": \"Transmission Fluid Temperature Sensor 'A' Circuit Low\",\n    \"P0713\": \"Transmission Fluid Temperature Sensor 'A' Circuit High\",\n    \"P0714\": \"Transmission Fluid Temperature Sensor 'A' Circuit Intermittent\",\n    \"P0715\": \"Input/Turbine Speed Sensor 'A' Circuit\",\n    \"P0716\": \"Input/Turbine Speed Sensor 'A' Circuit Range/Performance\",\n    \"P0717\": \"Input/Turbine Speed Sensor 'A' Circuit No Signal\",\n    \"P0718\": \"Input/Turbine Speed Sensor 'A' Circuit Intermittent\",\n    \"P0719\": \"Brake Switch 'B' Circuit Low\",\n    \"P0720\": \"Output Speed Sensor Circuit\",\n    \"P0721\": \"Output Speed Sensor Circuit Range/Performance\",\n    \"P0722\": \"Output Speed Sensor Circuit No Signal\",\n    \"P0723\": \"Output Speed Sensor Circuit Intermittent\",\n    \"P0724\": \"Brake Switch 'B' Circuit High\",\n    \"P0725\": \"Engine Speed Input Circuit\",\n    \"P0726\": \"Engine Speed Input Circuit Range/Performance\",\n    \"P0727\": \"Engine Speed Input Circuit No Signal\",\n    \"P0728\": \"Engine Speed Input Circuit Intermittent\",\n    \"P0729\": \"Gear 6 Incorrect Ratio\",\n    \"P0730\": \"Incorrect Gear Ratio\",\n    \"P0731\": \"Gear 1 Incorrect Ratio\",\n    \"P0732\": \"Gear 2 Incorrect Ratio\",\n    \"P0733\": \"Gear 3 Incorrect Ratio\",\n    \"P0734\": \"Gear 4 Incorrect Ratio\",\n    \"P0735\": \"Gear 5 Incorrect Ratio\",\n    \"P0736\": \"Reverse Incorrect Ratio\",\n    \"P0737\": \"TCM Engine Speed Output Circuit\",\n    \"P0738\": \"TCM Engine Speed Output Circuit Low\",\n    \"P0739\": \"TCM Engine Speed Output Circuit High\",\n    \"P0740\": \"Torque Converter Clutch Circuit/Open\",\n    \"P0741\": \"Torque Converter Clutch Circuit Performance or Stuck Off\",\n    \"P0742\": \"Torque Converter Clutch Circuit Stuck On\",\n    \"P0743\": \"Torque Converter Clutch Circuit Electrical\",\n    \"P0744\": \"Torque Converter Clutch Circuit Intermittent\",\n    \"P0745\": \"Pressure Control Solenoid 'A'\",\n    \"P0746\": \"Pressure Control Solenoid 'A' Performance or Stuck Off\",\n    \"P0747\": \"Pressure Control Solenoid 'A' Stuck On\",\n    \"P0748\": \"Pressure Control Solenoid 'A' Electrical\",\n    \"P0749\": \"Pressure Control Solenoid 'A' Intermittent\",\n    \"P0750\": \"Shift Solenoid 'A'\",\n    \"P0751\": \"Shift Solenoid 'A' Performance or Stuck Off\",\n    \"P0752\": \"Shift Solenoid 'A' Stuck On\",\n    \"P0753\": \"Shift Solenoid 'A' Electrical\",\n    \"P0754\": \"Shift Solenoid 'A' Intermittent\",\n    \"P0755\": \"Shift Solenoid 'B'\",\n    \"P0756\": \"Shift Solenoid 'B' Performance or Stuck Off\",\n    \"P0757\": \"Shift Solenoid 'B' Stuck On\",\n    \"P0758\": \"Shift Solenoid 'B' Electrical\",\n    \"P0759\": \"Shift Solenoid 'B' Intermittent\",\n    \"P0760\": \"Shift Solenoid 'C'\",\n    \"P0761\": \"Shift Solenoid 'C' Performance or Stuck Off\",\n    \"P0762\": \"Shift Solenoid 'C' Stuck On\",\n    \"P0763\": \"Shift Solenoid 'C' Electrical\",\n    \"P0764\": \"Shift Solenoid 'C' Intermittent\",\n    \"P0765\": \"Shift Solenoid 'D'\",\n    \"P0766\": \"Shift Solenoid 'D' Performance or Stuck Off\",\n    \"P0767\": \"Shift Solenoid 'D' Stuck On\",\n    \"P0768\": \"Shift Solenoid 'D' Electrical\",\n    \"P0769\": \"Shift Solenoid 'D' Intermittent\",\n    \"P0770\": \"Shift Solenoid 'E'\",\n    \"P0771\": \"Shift Solenoid 'E' Performance or Stuck Off\",\n    \"P0772\": \"Shift Solenoid 'E' Stuck On\",\n    \"P0773\": \"Shift Solenoid 'E' Electrical\",\n    \"P0774\": \"Shift Solenoid 'E' Intermittent\",\n    \"P0775\": \"Pressure Control Solenoid 'B'\",\n    \"P0776\": \"Pressure Control Solenoid 'B' Performance or Stuck off\",\n    \"P0777\": \"Pressure Control Solenoid 'B' Stuck On\",\n    \"P0778\": \"Pressure Control Solenoid 'B' Electrical\",\n    \"P0779\": \"Pressure Control Solenoid 'B' Intermittent\",\n    \"P0780\": \"Shift Error\",\n    \"P0781\": \"1-2 Shift\",\n    \"P0782\": \"2-3 Shift\",\n    \"P0783\": \"3-4 Shift\",\n    \"P0784\": \"4-5 Shift\",\n    \"P0785\": \"Shift/Timing Solenoid\",\n    \"P0786\": \"Shift/Timing Solenoid Range/Performance\",\n    \"P0787\": \"Shift/Timing Solenoid Low\",\n    \"P0788\": \"Shift/Timing Solenoid High\",\n    \"P0789\": \"Shift/Timing Solenoid Intermittent\",\n    \"P0790\": \"Normal/Performance Switch Circuit\",\n    \"P0791\": \"Intermediate Shaft Speed Sensor 'A' Circuit\",\n    \"P0792\": \"Intermediate Shaft Speed Sensor 'A' Circuit Range/Performance\",\n    \"P0793\": \"Intermediate Shaft Speed Sensor 'A' Circuit No Signal\",\n    \"P0794\": \"Intermediate Shaft Speed Sensor 'A' Circuit Intermittent\",\n    \"P0795\": \"Pressure Control Solenoid 'C'\",\n    \"P0796\": \"Pressure Control Solenoid 'C' Performance or Stuck off\",\n    \"P0797\": \"Pressure Control Solenoid 'C' Stuck On\",\n    \"P0798\": \"Pressure Control Solenoid 'C' Electrical\",\n    \"P0799\": \"Pressure Control Solenoid 'C' Intermittent\",\n    \"P0800\": \"Transfer Case Control System (MIL Request)\",\n    \"P0801\": \"Reverse Inhibit Control Circuit\",\n    \"P0802\": \"Transmission Control System MIL Request Circuit/Open\",\n    \"P0803\": \"1-4 Upshift (Skip Shift) Solenoid Control Circuit\",\n    \"P0804\": \"1-4 Upshift (Skip Shift) Lamp Control Circuit\",\n    \"P0805\": \"Clutch Position Sensor Circuit\",\n    \"P0806\": \"Clutch Position Sensor Circuit Range/Performance\",\n    \"P0807\": \"Clutch Position Sensor Circuit Low\",\n    \"P0808\": \"Clutch Position Sensor Circuit High\",\n    \"P0809\": \"Clutch Position Sensor Circuit Intermittent\",\n    \"P0810\": \"Clutch Position Control Error\",\n    \"P0811\": \"Excessive Clutch Slippage\",\n    \"P0812\": \"Reverse Input Circuit\",\n    \"P0813\": \"Reverse Output Circuit\",\n    \"P0814\": \"Transmission Range Display Circuit\",\n    \"P0815\": \"Upshift Switch Circuit\",\n    \"P0816\": \"Downshift Switch Circuit\",\n    \"P0817\": \"Starter Disable Circuit\",\n    \"P0818\": \"Driveline Disconnect Switch Input Circuit\",\n    \"P0819\": \"Up and Down Shift Switch to Transmission Range Correlation\",\n    \"P0820\": \"Gear Lever X-Y Position Sensor Circuit\",\n    \"P0821\": \"Gear Lever X Position Circuit\",\n    \"P0822\": \"Gear Lever Y Position Circuit\",\n    \"P0823\": \"Gear Lever X Position Circuit Intermittent\",\n    \"P0824\": \"Gear Lever Y Position Circuit Intermittent\",\n    \"P0825\": \"Gear Lever Push-Pull Switch (Shift Anticipate)\",\n    \"P0826\": \"Up and Down Shift Switch Circuit\",\n    \"P0827\": \"Up and Down Shift Switch Circuit Low\",\n    \"P0828\": \"Up and Down Shift Switch Circuit High\",\n    \"P0829\": \"5-6 Shift\",\n    \"P0830\": \"Clutch Pedal Switch 'A' Circuit\",\n    \"P0831\": \"Clutch Pedal Switch 'A' Circuit Low\",\n    \"P0832\": \"Clutch Pedal Switch 'A' Circuit High\",\n    \"P0833\": \"Clutch Pedal Switch 'B' Circuit\",\n    \"P0834\": \"Clutch Pedal Switch 'B' Circuit Low\",\n    \"P0835\": \"Clutch Pedal Switch 'B' Circuit High\",\n    \"P0836\": \"Four Wheel Drive (4WD) Switch Circuit\",\n    \"P0837\": \"Four Wheel Drive (4WD) Switch Circuit Range/Performance\",\n    \"P0838\": \"Four Wheel Drive (4WD) Switch Circuit Low\",\n    \"P0839\": \"Four Wheel Drive (4WD) Switch Circuit High\",\n    \"P0840\": \"Transmission Fluid Pressure Sensor/Switch 'A' Circuit\",\n    \"P0841\": \"Transmission Fluid Pressure Sensor/Switch 'A' Circuit Range/Performance\",\n    \"P0842\": \"Transmission Fluid Pressure Sensor/Switch 'A' Circuit Low\",\n    \"P0843\": \"Transmission Fluid Pressure Sensor/Switch 'A' Circuit High\",\n    \"P0844\": \"Transmission Fluid Pressure Sensor/Switch 'A' Circuit Intermittent\",\n    \"P0845\": \"Transmission Fluid Pressure Sensor/Switch 'B' Circuit\",\n    \"P0846\": \"Transmission Fluid Pressure Sensor/Switch 'B' Circuit Range/Performance\",\n    \"P0847\": \"Transmission Fluid Pressure Sensor/Switch 'B' Circuit Low\",\n    \"P0848\": \"Transmission Fluid Pressure Sensor/Switch 'B' Circuit High\",\n    \"P0849\": \"Transmission Fluid Pressure Sensor/Switch 'B' Circuit Intermittent\",\n    \"P0850\": \"Park/Neutral Switch Input Circuit\",\n    \"P0851\": \"Park/Neutral Switch Input Circuit Low\",\n    \"P0852\": \"Park/Neutral Switch Input Circuit High\",\n    \"P0853\": \"Drive Switch Input Circuit\",\n    \"P0854\": \"Drive Switch Input Circuit Low\",\n    \"P0855\": \"Drive Switch Input Circuit High\",\n    \"P0856\": \"Traction Control Input Signal\",\n    \"P0857\": \"Traction Control Input Signal Range/Performance\",\n    \"P0858\": \"Traction Control Input Signal Low\",\n    \"P0859\": \"Traction Control Input Signal High\",\n    \"P0860\": \"Gear Shift Module Communication Circuit\",\n    \"P0861\": \"Gear Shift Module Communication Circuit Low\",\n    \"P0862\": \"Gear Shift Module Communication Circuit High\",\n    \"P0863\": \"TCM Communication Circuit\",\n    \"P0864\": \"TCM Communication Circuit Range/Performance\",\n    \"P0865\": \"TCM Communication Circuit Low\",\n    \"P0866\": \"TCM Communication Circuit High\",\n    \"P0867\": \"Transmission Fluid Pressure\",\n    \"P0868\": \"Transmission Fluid Pressure Low\",\n    \"P0869\": \"Transmission Fluid Pressure High\",\n    \"P0870\": \"Transmission Fluid Pressure Sensor/Switch 'C' Circuit\",\n    \"P0871\": \"Transmission Fluid Pressure Sensor/Switch 'C' Circuit Range/Performance\",\n    \"P0872\": \"Transmission Fluid Pressure Sensor/Switch 'C' Circuit Low\",\n    \"P0873\": \"Transmission Fluid Pressure Sensor/Switch 'C' Circuit High\",\n    \"P0874\": \"Transmission Fluid Pressure Sensor/Switch 'C' Circuit Intermittent\",\n    \"P0875\": \"Transmission Fluid Pressure Sensor/Switch 'D' Circuit\",\n    \"P0876\": \"Transmission Fluid Pressure Sensor/Switch 'D' Circuit Range/Performance\",\n    \"P0877\": \"Transmission Fluid Pressure Sensor/Switch 'D' Circuit Low\",\n    \"P0878\": \"Transmission Fluid Pressure Sensor/Switch 'D' Circuit High\",\n    \"P0879\": \"Transmission Fluid Pressure Sensor/Switch 'D' Circuit Intermittent\",\n    \"P0880\": \"TCM Power Input Signal\",\n    \"P0881\": \"TCM Power Input Signal Range/Performance\",\n    \"P0882\": \"TCM Power Input Signal Low\",\n    \"P0883\": \"TCM Power Input Signal High\",\n    \"P0884\": \"TCM Power Input Signal Intermittent\",\n    \"P0885\": \"TCM Power Relay Control Circuit/Open\",\n    \"P0886\": \"TCM Power Relay Control Circuit Low\",\n    \"P0887\": \"TCM Power Relay Control Circuit High\",\n    \"P0888\": \"TCM Power Relay Sense Circuit\",\n    \"P0889\": \"TCM Power Relay Sense Circuit Range/Performance\",\n    \"P0890\": \"TCM Power Relay Sense Circuit Low\",\n    \"P0891\": \"TCM Power Relay Sense Circuit High\",\n    \"P0892\": \"TCM Power Relay Sense Circuit Intermittent\",\n    \"P0893\": \"Multiple Gears Engaged\",\n    \"P0894\": \"Transmission Component Slipping\",\n    \"P0895\": \"Shift Time Too Short\",\n    \"P0896\": \"Shift Time Too Long\",\n    \"P0897\": \"Transmission Fluid Deteriorated\",\n    \"P0898\": \"Transmission Control System MIL Request Circuit Low\",\n    \"P0899\": \"Transmission Control System MIL Request Circuit High\",\n    \"P0900\": \"Clutch Actuator Circuit/Open\",\n    \"P0901\": \"Clutch Actuator Circuit Range/Performance\",\n    \"P0902\": \"Clutch Actuator Circuit Low\",\n    \"P0903\": \"Clutch Actuator Circuit High\",\n    \"P0904\": \"Gate Select Position Circuit\",\n    \"P0905\": \"Gate Select Position Circuit Range/Performance\",\n    \"P0906\": \"Gate Select Position Circuit Low\",\n    \"P0907\": \"Gate Select Position Circuit High\",\n    \"P0908\": \"Gate Select Position Circuit Intermittent\",\n    \"P0909\": \"Gate Select Control Error\",\n    \"P0910\": \"Gate Select Actuator Circuit/Open\",\n    \"P0911\": \"Gate Select Actuator Circuit Range/Performance\",\n    \"P0912\": \"Gate Select Actuator Circuit Low\",\n    \"P0913\": \"Gate Select Actuator Circuit High\",\n    \"P0914\": \"Gear Shift Position Circuit\",\n    \"P0915\": \"Gear Shift Position Circuit Range/Performance\",\n    \"P0916\": \"Gear Shift Position Circuit Low\",\n    \"P0917\": \"Gear Shift Position Circuit High\",\n    \"P0918\": \"Gear Shift Position Circuit Intermittent\",\n    \"P0919\": \"Gear Shift Position Control Error\",\n    \"P0920\": \"Gear Shift Forward Actuator Circuit/Open\",\n    \"P0921\": \"Gear Shift Forward Actuator Circuit Range/Performance\",\n    \"P0922\": \"Gear Shift Forward Actuator Circuit Low\",\n    \"P0923\": \"Gear Shift Forward Actuator Circuit High\",\n    \"P0924\": \"Gear Shift Reverse Actuator Circuit/Open\",\n    \"P0925\": \"Gear Shift Reverse Actuator Circuit Range/Performance\",\n    \"P0926\": \"Gear Shift Reverse Actuator Circuit Low\",\n    \"P0927\": \"Gear Shift Reverse Actuator Circuit High\",\n    \"P0928\": \"Gear Shift Lock Solenoid Control Circuit/Open\",\n    \"P0929\": \"Gear Shift Lock Solenoid Control Circuit Range/Performance\",\n    \"P0930\": \"Gear Shift Lock Solenoid Control Circuit Low\",\n    \"P0931\": \"Gear Shift Lock Solenoid Control Circuit High\",\n    \"P0932\": \"Hydraulic Pressure Sensor Circuit\",\n    \"P0933\": \"Hydraulic Pressure Sensor Range/Performance\",\n    \"P0934\": \"Hydraulic Pressure Sensor Circuit Low\",\n    \"P0935\": \"Hydraulic Pressure Sensor Circuit High\",\n    \"P0936\": \"Hydraulic Pressure Sensor Circuit Intermittent\",\n    \"P0937\": \"Hydraulic Oil Temperature Sensor Circuit\",\n    \"P0938\": \"Hydraulic Oil Temperature Sensor Range/Performance\",\n    \"P0939\": \"Hydraulic Oil Temperature Sensor Circuit Low\",\n    \"P0940\": \"Hydraulic Oil Temperature Sensor Circuit High\",\n    \"P0941\": \"Hydraulic Oil Temperature Sensor Circuit Intermittent\",\n    \"P0942\": \"Hydraulic Pressure Unit\",\n    \"P0943\": \"Hydraulic Pressure Unit Cycling Period Too Short\",\n    \"P0944\": \"Hydraulic Pressure Unit Loss of Pressure\",\n    \"P0945\": \"Hydraulic Pump Relay Circuit/Open\",\n    \"P0946\": \"Hydraulic Pump Relay Circuit Range/Performance\",\n    \"P0947\": \"Hydraulic Pump Relay Circuit Low\",\n    \"P0948\": \"Hydraulic Pump Relay Circuit High\",\n    \"P0949\": \"Auto Shift Manual Adaptive Learning Not Complete\",\n    \"P0950\": \"Auto Shift Manual Control Circuit\",\n    \"P0951\": \"Auto Shift Manual Control Circuit Range/Performance\",\n    \"P0952\": \"Auto Shift Manual Control Circuit Low\",\n    \"P0953\": \"Auto Shift Manual Control Circuit High\",\n    \"P0954\": \"Auto Shift Manual Control Circuit Intermittent\",\n    \"P0955\": \"Auto Shift Manual Mode Circuit\",\n    \"P0956\": \"Auto Shift Manual Mode Circuit Range/Performance\",\n    \"P0957\": \"Auto Shift Manual Mode Circuit Low\",\n    \"P0958\": \"Auto Shift Manual Mode Circuit High\",\n    \"P0959\": \"Auto Shift Manual Mode Circuit Intermittent\",\n    \"P0960\": \"Pressure Control Solenoid 'A' Control Circuit/Open\",\n    \"P0961\": \"Pressure Control Solenoid 'A' Control Circuit Range/Performance\",\n    \"P0962\": \"Pressure Control Solenoid 'A' Control Circuit Low\",\n    \"P0963\": \"Pressure Control Solenoid 'A' Control Circuit High\",\n    \"P0964\": \"Pressure Control Solenoid 'B' Control Circuit/Open\",\n    \"P0965\": \"Pressure Control Solenoid 'B' Control Circuit Range/Performance\",\n    \"P0966\": \"Pressure Control Solenoid 'B' Control Circuit Low\",\n    \"P0967\": \"Pressure Control Solenoid 'B' Control Circuit High\",\n    \"P0968\": \"Pressure Control Solenoid 'C' Control Circuit/Open\",\n    \"P0969\": \"Pressure Control Solenoid 'C' Control Circuit Range/Performance\",\n    \"P0970\": \"Pressure Control Solenoid 'C' Control Circuit Low\",\n    \"P0971\": \"Pressure Control Solenoid 'C' Control Circuit High\",\n    \"P0972\": \"Shift Solenoid 'A' Control Circuit Range/Performance\",\n    \"P0973\": \"Shift Solenoid 'A' Control Circuit Low\",\n    \"P0974\": \"Shift Solenoid 'A' Control Circuit High\",\n    \"P0975\": \"Shift Solenoid 'B' Control Circuit Range/Performance\",\n    \"P0976\": \"Shift Solenoid 'B' Control Circuit Low\",\n    \"P0977\": \"Shift Solenoid 'B' Control Circuit High\",\n    \"P0978\": \"Shift Solenoid 'C' Control Circuit Range/Performance\",\n    \"P0979\": \"Shift Solenoid 'C' Control Circuit Low\",\n    \"P0980\": \"Shift Solenoid 'C' Control Circuit High\",\n    \"P0981\": \"Shift Solenoid 'D' Control Circuit Range/Performance\",\n    \"P0982\": \"Shift Solenoid 'D' Control Circuit Low\",\n    \"P0983\": \"Shift Solenoid 'D' Control Circuit High\",\n    \"P0984\": \"Shift Solenoid 'E' Control Circuit Range/Performance\",\n    \"P0985\": \"Shift Solenoid 'E' Control Circuit Low\",\n    \"P0986\": \"Shift Solenoid 'E' Control Circuit High\",\n    \"P0987\": \"Transmission Fluid Pressure Sensor/Switch 'E' Circuit\",\n    \"P0988\": \"Transmission Fluid Pressure Sensor/Switch 'E' Circuit Range/Performance\",\n    \"P0989\": \"Transmission Fluid Pressure Sensor/Switch 'E' Circuit Low\",\n    \"P0990\": \"Transmission Fluid Pressure Sensor/Switch 'E' Circuit High\",\n    \"P0991\": \"Transmission Fluid Pressure Sensor/Switch 'E' Circuit Intermittent\",\n    \"P0992\": \"Transmission Fluid Pressure Sensor/Switch 'F' Circuit\",\n    \"P0993\": \"Transmission Fluid Pressure Sensor/Switch 'F' Circuit Range/Performance\",\n    \"P0994\": \"Transmission Fluid Pressure Sensor/Switch 'F' Circuit Low\",\n    \"P0995\": \"Transmission Fluid Pressure Sensor/Switch 'F' Circuit High\",\n    \"P0996\": \"Transmission Fluid Pressure Sensor/Switch 'F' Circuit Intermittent\",\n    \"P0997\": \"Shift Solenoid 'F' Control Circuit Range/Performance\",\n    \"P0998\": \"Shift Solenoid 'F' Control Circuit Low\",\n    \"P0999\": \"Shift Solenoid 'F' Control Circuit High\",\n    \"P0A00\": \"Motor Electronics Coolant Temperature Sensor Circuit\",\n    \"P0A01\": \"Motor Electronics Coolant Temperature Sensor Circuit Range/Performance\",\n    \"P0A02\": \"Motor Electronics Coolant Temperature Sensor Circuit Low\",\n    \"P0A03\": \"Motor Electronics Coolant Temperature Sensor Circuit High\",\n    \"P0A04\": \"Motor Electronics Coolant Temperature Sensor Circuit Intermittent\",\n    \"P0A05\": \"Motor Electronics Coolant Pump Control Circuit/Open\",\n    \"P0A06\": \"Motor Electronics Coolant Pump Control Circuit Low\",\n    \"P0A07\": \"Motor Electronics Coolant Pump Control Circuit High\",\n    \"P0A08\": \"DC/DC Converter Status Circuit\",\n    \"P0A09\": \"DC/DC Converter Status Circuit Low Input\",\n    \"P0A10\": \"DC/DC Converter Status Circuit High Input\",\n    \"P0A11\": \"DC/DC Converter Enable Circuit/Open\",\n    \"P0A12\": \"DC/DC Converter Enable Circuit Low\",\n    \"P0A13\": \"DC/DC Converter Enable Circuit High\",\n    \"P0A14\": \"Engine Mount Control Circuit/Open\",\n    \"P0A15\": \"Engine Mount Control Circuit Low\",\n    \"P0A16\": \"Engine Mount Control Circuit High\",\n    \"P0A17\": \"Motor Torque Sensor Circuit\",\n    \"P0A18\": \"Motor Torque Sensor Circuit Range/Performance\",\n    \"P0A19\": \"Motor Torque Sensor Circuit Low\",\n    \"P0A20\": \"Motor Torque Sensor Circuit High\",\n    \"P0A21\": \"Motor Torque Sensor Circuit Intermittent\",\n    \"P0A22\": \"Generator Torque Sensor Circuit\",\n    \"P0A23\": \"Generator Torque Sensor Circuit Range/Performance\",\n    \"P0A24\": \"Generator Torque Sensor Circuit Low\",\n    \"P0A25\": \"Generator Torque Sensor Circuit High\",\n    \"P0A26\": \"Generator Torque Sensor Circuit Intermittent\",\n    \"P0A27\": \"Battery Power Off Circuit\",\n    \"P0A28\": \"Battery Power Off Circuit Low\",\n    \"P0A29\": \"Battery Power Off Circuit High\",\n    \"P2000\": \"NOx Trap Efficiency Below Threshold\",\n    \"P2001\": \"NOx Trap Efficiency Below Threshold\",\n    \"P2002\": \"Particulate Trap Efficiency Below Threshold\",\n    \"P2003\": \"Particulate Trap Efficiency Below Threshold\",\n    \"P2004\": \"Intake Manifold Runner Control Stuck Open\",\n    \"P2005\": \"Intake Manifold Runner Control Stuck Open\",\n    \"P2006\": \"Intake Manifold Runner Control Stuck Closed\",\n    \"P2007\": \"Intake Manifold Runner Control Stuck Closed\",\n    \"P2008\": \"Intake Manifold Runner Control Circuit/Open\",\n    \"P2009\": \"Intake Manifold Runner Control Circuit Low\",\n    \"P2010\": \"Intake Manifold Runner Control Circuit High\",\n    \"P2011\": \"Intake Manifold Runner Control Circuit/Open\",\n    \"P2012\": \"Intake Manifold Runner Control Circuit Low\",\n    \"P2013\": \"Intake Manifold Runner Control Circuit High\",\n    \"P2014\": \"Intake Manifold Runner Position Sensor/Switch Circuit\",\n    \"P2015\": \"Intake Manifold Runner Position Sensor/Switch Circuit Range/Performance\",\n    \"P2016\": \"Intake Manifold Runner Position Sensor/Switch Circuit Low\",\n    \"P2017\": \"Intake Manifold Runner Position Sensor/Switch Circuit High\",\n    \"P2018\": \"Intake Manifold Runner Position Sensor/Switch Circuit Intermittent\",\n    \"P2019\": \"Intake Manifold Runner Position Sensor/Switch Circuit\",\n    \"P2020\": \"Intake Manifold Runner Position Sensor/Switch Circuit Range/Performance\",\n    \"P2021\": \"Intake Manifold Runner Position Sensor/Switch Circuit Low\",\n    \"P2022\": \"Intake Manifold Runner Position Sensor/Switch Circuit High\",\n    \"P2023\": \"Intake Manifold Runner Position Sensor/Switch Circuit Intermittent\",\n    \"P2024\": \"Evaporative Emissions (EVAP) Fuel Vapor Temperature Sensor Circuit\",\n    \"P2025\": \"Evaporative Emissions (EVAP) Fuel Vapor Temperature Sensor Performance\",\n    \"P2026\": \"Evaporative Emissions (EVAP) Fuel Vapor Temperature Sensor Circuit Low Voltage\",\n    \"P2027\": \"Evaporative Emissions (EVAP) Fuel Vapor Temperature Sensor Circuit High Voltage\",\n    \"P2028\": \"Evaporative Emissions (EVAP) Fuel Vapor Temperature Sensor Circuit Intermittent\",\n    \"P2029\": \"Fuel Fired Heater Disabled\",\n    \"P2030\": \"Fuel Fired Heater Performance\",\n    \"P2031\": \"Exhaust Gas Temperature Sensor Circuit\",\n    \"P2032\": \"Exhaust Gas Temperature Sensor Circuit Low\",\n    \"P2033\": \"Exhaust Gas Temperature Sensor Circuit High\",\n    \"P2034\": \"Exhaust Gas Temperature Sensor Circuit\",\n    \"P2035\": \"Exhaust Gas Temperature Sensor Circuit Low\",\n    \"P2036\": \"Exhaust Gas Temperature Sensor Circuit High\",\n    \"P2037\": \"Reductant Injection Air Pressure Sensor Circuit\",\n    \"P2038\": \"Reductant Injection Air Pressure Sensor Circuit Range/Performance\",\n    \"P2039\": \"Reductant Injection Air Pressure Sensor Circuit Low Input\",\n    \"P2040\": \"Reductant Injection Air Pressure Sensor Circuit High Input\",\n    \"P2041\": \"Reductant Injection Air Pressure Sensor Circuit Intermittent\",\n    \"P2042\": \"Reductant Temperature Sensor Circuit\",\n    \"P2043\": \"Reductant Temperature Sensor Circuit Range/Performance\",\n    \"P2044\": \"Reductant Temperature Sensor Circuit Low Input\",\n    \"P2045\": \"Reductant Temperature Sensor Circuit High Input\",\n    \"P2046\": \"Reductant Temperature Sensor Circuit Intermittent\",\n    \"P2047\": \"Reductant Injector Circuit/Open\",\n    \"P2048\": \"Reductant Injector Circuit Low\",\n    \"P2049\": \"Reductant Injector Circuit High\",\n    \"P2050\": \"Reductant Injector Circuit/Open\",\n    \"P2051\": \"Reductant Injector Circuit Low\",\n    \"P2052\": \"Reductant Injector Circuit High\",\n    \"P2053\": \"Reductant Injector Circuit/Open\",\n    \"P2054\": \"Reductant Injector Circuit Low\",\n    \"P2055\": \"Reductant Injector Circuit High\",\n    \"P2056\": \"Reductant Injector Circuit/Open\",\n    \"P2057\": \"Reductant Injector Circuit Low\",\n    \"P2058\": \"Reductant Injector Circuit High\",\n    \"P2059\": \"Reductant Injection Air Pump Control Circuit/Open\",\n    \"P2060\": \"Reductant Injection Air Pump Control Circuit Low\",\n    \"P2061\": \"Reductant Injection Air Pump Control Circuit High\",\n    \"P2062\": \"Reductant Supply Control Circuit/Open\",\n    \"P2063\": \"Reductant Supply Control Circuit Low\",\n    \"P2064\": \"Reductant Supply Control Circuit High\",\n    \"P2065\": \"Fuel Level Sensor 'B' Circuit\",\n    \"P2066\": \"Fuel Level Sensor 'B' Performance\",\n    \"P2067\": \"Fuel Level Sensor 'B' Circuit Low\",\n    \"P2068\": \"Fuel Level Sensor 'B' Circuit High\",\n    \"P2069\": \"Fuel Level Sensor 'B' Circuit Intermittent\",\n    \"P2070\": \"Intake Manifold Tuning (IMT) Valve Stuck Open\",\n    \"P2071\": \"Intake Manifold Tuning (IMT) Valve Stuck Closed\",\n    \"P2075\": \"Intake Manifold Tuning (IMT) Valve Position Sensor/Switch Circuit\",\n    \"P2076\": \"Intake Manifold Tuning (IMT) Valve Position Sensor/Switch Circuit Range/Performance\",\n    \"P2077\": \"Intake Manifold Tuning (IMT) Valve Position Sensor/Switch Circuit Low\",\n    \"P2078\": \"Intake Manifold Tuning (IMT) Valve Position Sensor/Switch Circuit High\",\n    \"P2079\": \"Intake Manifold Tuning (IMT) Valve Position Sensor/Switch Circuit Intermittent\",\n    \"P2080\": \"Exhaust Gas Temperature Sensor Circuit Range/Performance\",\n    \"P2081\": \"Exhaust Gas Temperature Sensor Circuit Intermittent\",\n    \"P2082\": \"Exhaust Gas Temperature Sensor Circuit Range/Performance\",\n    \"P2083\": \"Exhaust Gas Temperature Sensor Circuit Intermittent\",\n    \"P2084\": \"Exhaust Gas Temperature Sensor Circuit Range/Performance\",\n    \"P2085\": \"Exhaust Gas Temperature Sensor Circuit Intermittent\",\n    \"P2086\": \"Exhaust Gas Temperature Sensor Circuit Range/Performance\",\n    \"P2087\": \"Exhaust Gas Temperature Sensor Circuit Intermittent\",\n    \"P2088\": \"'A' Camshaft Position Actuator Control Circuit Low\",\n    \"P2089\": \"'A' Camshaft Position Actuator Control Circuit High\",\n    \"P2090\": \"'B' Camshaft Position Actuator Control Circuit Low\",\n    \"P2091\": \"'B' Camshaft Position Actuator Control Circuit High\",\n    \"P2092\": \"'A' Camshaft Position Actuator Control Circuit Low\",\n    \"P2093\": \"'A' Camshaft Position Actuator Control Circuit High\",\n    \"P2094\": \"'B' Camshaft Position Actuator Control Circuit Low\",\n    \"P2095\": \"'B' Camshaft Position Actuator Control Circuit High\",\n    \"P2096\": \"Post Catalyst Fuel Trim System Too Lean\",\n    \"P2097\": \"Post Catalyst Fuel Trim System Too Rich\",\n    \"P2098\": \"Post Catalyst Fuel Trim System Too Lean\",\n    \"P2099\": \"Post Catalyst Fuel Trim System Too Rich\",\n    \"P2100\": \"Throttle Actuator Control Motor Circuit/Open\",\n    \"P2101\": \"Throttle Actuator Control Motor Circuit Range/Performance\",\n    \"P2102\": \"Throttle Actuator Control Motor Circuit Low\",\n    \"P2103\": \"Throttle Actuator Control Motor Circuit High\",\n    \"P2104\": \"Throttle Actuator Control System - Forced Idle\",\n    \"P2105\": \"Throttle Actuator Control System - Forced Engine Shutdown\",\n    \"P2106\": \"Throttle Actuator Control System - Forced Limited Power\",\n    \"P2107\": \"Throttle Actuator Control Module Processor\",\n    \"P2108\": \"Throttle Actuator Control Module Performance\",\n    \"P2109\": \"Throttle/Pedal Position Sensor 'A' Minimum Stop Performance\",\n    \"P2110\": \"Throttle Actuator Control System - Forced Limited RPM\",\n    \"P2111\": \"Throttle Actuator Control System - Stuck Open\",\n    \"P2112\": \"Throttle Actuator Control System - Stuck Closed\",\n    \"P2113\": \"Throttle/Pedal Position Sensor 'B' Minimum Stop Performance\",\n    \"P2114\": \"Throttle/Pedal Position Sensor 'C' Minimum Stop Performance\",\n    \"P2115\": \"Throttle/Pedal Position Sensor 'D' Minimum Stop Performance\",\n    \"P2116\": \"Throttle/Pedal Position Sensor 'E' Minimum Stop Performance\",\n    \"P2117\": \"Throttle/Pedal Position Sensor 'F' Minimum Stop Performance\",\n    \"P2118\": \"Throttle Actuator Control Motor Current Range/Performance\",\n    \"P2119\": \"Throttle Actuator Control Throttle Body Range/Performance\",\n    \"P2120\": \"Throttle/Pedal Position Sensor/Switch 'D' Circuit\",\n    \"P2121\": \"Throttle/Pedal Position Sensor/Switch 'D' Circuit Range/Performance\",\n    \"P2122\": \"Throttle/Pedal Position Sensor/Switch 'D' Circuit Low Input\",\n    \"P2123\": \"Throttle/Pedal Position Sensor/Switch 'D' Circuit High Input\",\n    \"P2124\": \"Throttle/Pedal Position Sensor/Switch 'D' Circuit Intermittent\",\n    \"P2125\": \"Throttle/Pedal Position Sensor/Switch 'E' Circuit\",\n    \"P2126\": \"Throttle/Pedal Position Sensor/Switch 'E' Circuit Range/Performance\",\n    \"P2127\": \"Throttle/Pedal Position Sensor/Switch 'E' Circuit Low Input\",\n    \"P2128\": \"Throttle/Pedal Position Sensor/Switch 'E' Circuit High Input\",\n    \"P2129\": \"Throttle/Pedal Position Sensor/Switch 'E' Circuit Intermittent\",\n    \"P2130\": \"Throttle/Pedal Position Sensor/Switch 'F' Circuit\",\n    \"P2131\": \"Throttle/Pedal Position Sensor/Switch 'F' Circuit Range Performance\",\n    \"P2132\": \"Throttle/Pedal Position Sensor/Switch 'F' Circuit Low Input\",\n    \"P2133\": \"Throttle/Pedal Position Sensor/Switch 'F' Circuit High Input\",\n    \"P2134\": \"Throttle/Pedal Position Sensor/Switch 'F' Circuit Intermittent\",\n    \"P2135\": \"Throttle/Pedal Position Sensor/Switch 'A' / 'B' Voltage Correlation\",\n    \"P2136\": \"Throttle/Pedal Position Sensor/Switch 'A' / 'C' Voltage Correlation\",\n    \"P2137\": \"Throttle/Pedal Position Sensor/Switch 'B' / 'C' Voltage Correlation\",\n    \"P2138\": \"Throttle/Pedal Position Sensor/Switch 'D' / 'E' Voltage Correlation\",\n    \"P2139\": \"Throttle/Pedal Position Sensor/Switch 'D' / 'F' Voltage Correlation\",\n    \"P2140\": \"Throttle/Pedal Position Sensor/Switch 'E' / 'F' Voltage Correlation\",\n    \"P2141\": \"Exhaust Gas Recirculation Throttle Control Circuit Low\",\n    \"P2142\": \"Exhaust Gas Recirculation Throttle Control Circuit High\",\n    \"P2143\": \"Exhaust Gas Recirculation Vent Control Circuit/Open\",\n    \"P2144\": \"Exhaust Gas Recirculation Vent Control Circuit Low\",\n    \"P2145\": \"Exhaust Gas Recirculation Vent Control Circuit High\",\n    \"P2146\": \"Fuel Injector Group 'A' Supply Voltage Circuit/Open\",\n    \"P2147\": \"Fuel Injector Group 'A' Supply Voltage Circuit Low\",\n    \"P2148\": \"Fuel Injector Group 'A' Supply Voltage Circuit High\",\n    \"P2149\": \"Fuel Injector Group 'B' Supply Voltage Circuit/Open\",\n    \"P2150\": \"Fuel Injector Group 'B' Supply Voltage Circuit Low\",\n    \"P2151\": \"Fuel Injector Group 'B' Supply Voltage Circuit High\",\n    \"P2152\": \"Fuel Injector Group 'C' Supply Voltage Circuit/Open\",\n    \"P2153\": \"Fuel Injector Group 'C' Supply Voltage Circuit Low\",\n    \"P2154\": \"Fuel Injector Group 'C' Supply Voltage Circuit High\",\n    \"P2155\": \"Fuel Injector Group 'D' Supply Voltage Circuit/Open\",\n    \"P2156\": \"Fuel Injector Group 'D' Supply Voltage Circuit Low\",\n    \"P2157\": \"Fuel Injector Group 'D' Supply Voltage Circuit High\",\n    \"P2158\": \"Vehicle Speed Sensor 'B'\",\n    \"P2159\": \"Vehicle Speed Sensor 'B' Range/Performance\",\n    \"P2160\": \"Vehicle Speed Sensor 'B' Circuit Low\",\n    \"P2161\": \"Vehicle Speed Sensor 'B' Intermittent/Erratic\",\n    \"P2162\": \"Vehicle Speed Sensor 'A' / 'B' Correlation\",\n    \"P2163\": \"Throttle/Pedal Position Sensor 'A' Maximum Stop Performance\",\n    \"P2164\": \"Throttle/Pedal Position Sensor 'B' Maximum Stop Performance\",\n    \"P2165\": \"Throttle/Pedal Position Sensor 'C' Maximum Stop Performance\",\n    \"P2166\": \"Throttle/Pedal Position Sensor 'D' Maximum Stop Performance\",\n    \"P2167\": \"Throttle/Pedal Position Sensor 'E' Maximum Stop Performance\",\n    \"P2168\": \"Throttle/Pedal Position Sensor 'F' Maximum Stop Performance\",\n    \"P2169\": \"Exhaust Pressure Regulator Vent Solenoid Control Circuit/Open\",\n    \"P2170\": \"Exhaust Pressure Regulator Vent Solenoid Control Circuit Low\",\n    \"P2171\": \"Exhaust Pressure Regulator Vent Solenoid Control Circuit High\",\n    \"P2172\": \"Throttle Actuator Control System - Sudden High Airflow Detected\",\n    \"P2173\": \"Throttle Actuator Control System - High Airflow Detected\",\n    \"P2174\": \"Throttle Actuator Control System - Sudden Low Airflow Detected\",\n    \"P2175\": \"Throttle Actuator Control System - Low Airflow Detected\",\n    \"P2176\": \"Throttle Actuator Control System - Idle Position Not Learned\",\n    \"P2177\": \"System Too Lean Off Idle\",\n    \"P2178\": \"System Too Rich Off Idle\",\n    \"P2179\": \"System Too Lean Off Idle\",\n    \"P2180\": \"System Too Rich Off Idle\",\n    \"P2181\": \"Cooling System Performance\",\n    \"P2182\": \"Engine Coolant Temperature Sensor 2 Circuit\",\n    \"P2183\": \"Engine Coolant Temperature Sensor 2 Circuit Range/Performance\",\n    \"P2184\": \"Engine Coolant Temperature Sensor 2 Circuit Low\",\n    \"P2185\": \"Engine Coolant Temperature Sensor 2 Circuit High\",\n    \"P2186\": \"Engine Coolant Temperature Sensor 2 Circuit Intermittent/Erratic\",\n    \"P2187\": \"System Too Lean at Idle\",\n    \"P2188\": \"System Too Rich at Idle\",\n    \"P2189\": \"System Too Lean at Idle\",\n    \"P2190\": \"System Too Rich at Idle\",\n    \"P2191\": \"System Too Lean at Higher Load\",\n    \"P2192\": \"System Too Rich at Higher Load\",\n    \"P2193\": \"System Too Lean at Higher Load\",\n    \"P2194\": \"System Too Rich at Higher Load\",\n    \"P2195\": \"O2 Sensor Signal Stuck Lean\",\n    \"P2196\": \"O2 Sensor Signal Stuck Rich\",\n    \"P2197\": \"O2 Sensor Signal Stuck Lean\",\n    \"P2198\": \"O2 Sensor Signal Stuck Rich\",\n    \"P2199\": \"Intake Air Temperature Sensor 1 / 2 Correlation\",\n    \"P2200\": \"NOx Sensor Circuit\",\n    \"P2201\": \"NOx Sensor Circuit Range/Performance\",\n    \"P2202\": \"NOx Sensor Circuit Low Input\",\n    \"P2203\": \"NOx Sensor Circuit High Input\",\n    \"P2204\": \"NOx Sensor Circuit Intermittent Input\",\n    \"P2205\": \"NOx Sensor Heater Control Circuit/Open\",\n    \"P2206\": \"NOx Sensor Heater Control Circuit Low\",\n    \"P2207\": \"NOx Sensor Heater Control Circuit High\",\n    \"P2208\": \"NOx Sensor Heater Sense Circuit\",\n    \"P2209\": \"NOx Sensor Heater Sense Circuit Range/Performance\",\n    \"P2210\": \"NOx Sensor Heater Sense Circuit Low Input\",\n    \"P2211\": \"NOx Sensor Heater Sense Circuit High Input\",\n    \"P2212\": \"NOx Sensor Heater Sense Circuit Intermittent\",\n    \"P2213\": \"NOx Sensor Circuit\",\n    \"P2214\": \"NOx Sensor Circuit Range/Performance\",\n    \"P2215\": \"NOx Sensor Circuit Low Input\",\n    \"P2216\": \"NOx Sensor Circuit High Input\",\n    \"P2217\": \"NOx Sensor Circuit Intermittent Input\",\n    \"P2218\": \"NOx Sensor Heater Control Circuit/Open\",\n    \"P2219\": \"NOx Sensor Heater Control Circuit Low\",\n    \"P2220\": \"NOx Sensor Heater Control Circuit High\",\n    \"P2221\": \"NOx Sensor Heater Sense Circuit\",\n    \"P2222\": \"NOx Sensor Heater Sense Circuit Range/Performance\",\n    \"P2223\": \"NOx Sensor Heater Sense Circuit Low\",\n    \"P2224\": \"NOx Sensor Heater Sense Circuit High\",\n    \"P2225\": \"NOx Sensor Heater Sense Circuit Intermittent\",\n    \"P2226\": \"Barometric Pressure Circuit\",\n    \"P2227\": \"Barometric Pressure Circuit Range/Performance\",\n    \"P2228\": \"Barometric Pressure Circuit Low\",\n    \"P2229\": \"Barometric Pressure Circuit High\",\n    \"P2230\": \"Barometric Pressure Circuit Intermittent\",\n    \"P2231\": \"O2 Sensor Signal Circuit Shorted to Heater Circuit\",\n    \"P2232\": \"O2 Sensor Signal Circuit Shorted to Heater Circuit\",\n    \"P2233\": \"O2 Sensor Signal Circuit Shorted to Heater Circuit\",\n    \"P2234\": \"O2 Sensor Signal Circuit Shorted to Heater Circuit\",\n    \"P2235\": \"O2 Sensor Signal Circuit Shorted to Heater Circuit\",\n    \"P2236\": \"O2 Sensor Signal Circuit Shorted to Heater Circuit\",\n    \"P2237\": \"O2 Sensor Positive Current Control Circuit/Open\",\n    \"P2238\": \"O2 Sensor Positive Current Control Circuit Low\",\n    \"P2239\": \"O2 Sensor Positive Current Control Circuit High\",\n    \"P2240\": \"O2 Sensor Positive Current Control Circuit/Open\",\n    \"P2241\": \"O2 Sensor Positive Current Control Circuit Low\",\n    \"P2242\": \"O2 Sensor Positive Current Control Circuit High\",\n    \"P2243\": \"O2 Sensor Reference Voltage Circuit/Open\",\n    \"P2244\": \"O2 Sensor Reference Voltage Performance\",\n    \"P2245\": \"O2 Sensor Reference Voltage Circuit Low\",\n    \"P2246\": \"O2 Sensor Reference Voltage Circuit High\",\n    \"P2247\": \"O2 Sensor Reference Voltage Circuit/Open\",\n    \"P2248\": \"O2 Sensor Reference Voltage Performance\",\n    \"P2249\": \"O2 Sensor Reference Voltage Circuit Low\",\n    \"P2250\": \"O2 Sensor Reference Voltage Circuit High\",\n    \"P2251\": \"O2 Sensor Negative Current Control Circuit/Open\",\n    \"P2252\": \"O2 Sensor Negative Current Control Circuit Low\",\n    \"P2253\": \"O2 Sensor Negative Current Control Circuit High\",\n    \"P2254\": \"O2 Sensor Negative Current Control Circuit/Open\",\n    \"P2255\": \"O2 Sensor Negative Current Control Circuit Low\",\n    \"P2256\": \"O2 Sensor Negative Current Control Circuit High\",\n    \"P2257\": \"Secondary Air Injection System Control 'A' Circuit Low\",\n    \"P2258\": \"Secondary Air Injection System Control 'A' Circuit High\",\n    \"P2259\": \"Secondary Air Injection System Control 'B' Circuit Low\",\n    \"P2260\": \"Secondary Air Injection System Control 'B' Circuit High\",\n    \"P2261\": \"Turbo/Super Charger Bypass Valve - Mechanical\",\n    \"P2262\": \"Turbo Boost Pressure Not Detected - Mechanical\",\n    \"P2263\": \"Turbo/Super Charger Boost System Performance\",\n    \"P2264\": \"Water in Fuel Sensor Circuit\",\n    \"P2265\": \"Water in Fuel Sensor Circuit Range/Performance\",\n    \"P2266\": \"Water in Fuel Sensor Circuit Low\",\n    \"P2267\": \"Water in Fuel Sensor Circuit High\",\n    \"P2268\": \"Water in Fuel Sensor Circuit Intermittent\",\n    \"P2269\": \"Water in Fuel Condition\",\n    \"P2270\": \"O2 Sensor Signal Stuck Lean\",\n    \"P2271\": \"O2 Sensor Signal Stuck Rich\",\n    \"P2272\": \"O2 Sensor Signal Stuck Lean\",\n    \"P2273\": \"O2 Sensor Signal Stuck Rich\",\n    \"P2274\": \"O2 Sensor Signal Stuck Lean\",\n    \"P2275\": \"O2 Sensor Signal Stuck Rich\",\n    \"P2276\": \"O2 Sensor Signal Stuck Lean\",\n    \"P2277\": \"O2 Sensor Signal Stuck Rich\",\n    \"P2278\": \"O2 Sensor Signals Swapped Bank 1 Sensor 3 / Bank 2 Sensor 3\",\n    \"P2279\": \"Intake Air System Leak\",\n    \"P2280\": \"Air Flow Restriction / Air Leak Between Air Filter and MAF\",\n    \"P2281\": \"Air Leak Between MAF and Throttle Body\",\n    \"P2282\": \"Air Leak Between Throttle Body and Intake Valves\",\n    \"P2283\": \"Injector Control Pressure Sensor Circuit\",\n    \"P2284\": \"Injector Control Pressure Sensor Circuit Range/Performance\",\n    \"P2285\": \"Injector Control Pressure Sensor Circuit Low\",\n    \"P2286\": \"Injector Control Pressure Sensor Circuit High\",\n    \"P2287\": \"Injector Control Pressure Sensor Circuit Intermittent\",\n    \"P2288\": \"Injector Control Pressure Too High\",\n    \"P2289\": \"Injector Control Pressure Too High - Engine Off\",\n    \"P2290\": \"Injector Control Pressure Too Low\",\n    \"P2291\": \"Injector Control Pressure Too Low - Engine Cranking\",\n    \"P2292\": \"Injector Control Pressure Erratic\",\n    \"P2293\": \"Fuel Pressure Regulator 2 Performance\",\n    \"P2294\": \"Fuel Pressure Regulator 2 Control Circuit\",\n    \"P2295\": \"Fuel Pressure Regulator 2 Control Circuit Low\",\n    \"P2296\": \"Fuel Pressure Regulator 2 Control Circuit High\",\n    \"P2297\": \"O2 Sensor Out of Range During Deceleration\",\n    \"P2298\": \"O2 Sensor Out of Range During Deceleration\",\n    \"P2299\": \"Brake Pedal Position / Accelerator Pedal Position Incompatible\",\n    \"P2300\": \"Ignition Coil 'A' Primary Control Circuit Low\",\n    \"P2301\": \"Ignition Coil 'A' Primary Control Circuit High\",\n    \"P2302\": \"Ignition Coil 'A' Secondary Circuit\",\n    \"P2303\": \"Ignition Coil 'B' Primary Control Circuit Low\",\n    \"P2304\": \"Ignition Coil 'B' Primary Control Circuit High\",\n    \"P2305\": \"Ignition Coil 'B' Secondary Circuit\",\n    \"P2306\": \"Ignition Coil 'C' Primary Control Circuit Low\",\n    \"P2307\": \"Ignition Coil 'C' Primary Control Circuit High\",\n    \"P2308\": \"Ignition Coil 'C' Secondary Circuit\",\n    \"P2309\": \"Ignition Coil 'D' Primary Control Circuit Low\",\n    \"P2310\": \"Ignition Coil 'D' Primary Control Circuit High\",\n    \"P2311\": \"Ignition Coil 'D' Secondary Circuit\",\n    \"P2312\": \"Ignition Coil 'E' Primary Control Circuit Low\",\n    \"P2313\": \"Ignition Coil 'E' Primary Control Circuit High\",\n    \"P2314\": \"Ignition Coil 'E' Secondary Circuit\",\n    \"P2315\": \"Ignition Coil 'F' Primary Control Circuit Low\",\n    \"P2316\": \"Ignition Coil 'F' Primary Control Circuit High\",\n    \"P2317\": \"Ignition Coil 'F' Secondary Circuit\",\n    \"P2318\": \"Ignition Coil 'G' Primary Control Circuit Low\",\n    \"P2319\": \"Ignition Coil 'G' Primary Control Circuit High\",\n    \"P2320\": \"Ignition Coil 'G' Secondary Circuit\",\n    \"P2321\": \"Ignition Coil 'H' Primary Control Circuit Low\",\n    \"P2322\": \"Ignition Coil 'H' Primary Control Circuit High\",\n    \"P2323\": \"Ignition Coil 'H' Secondary Circuit\",\n    \"P2324\": \"Ignition Coil 'I' Primary Control Circuit Low\",\n    \"P2325\": \"Ignition Coil 'I' Primary Control Circuit High\",\n    \"P2326\": \"Ignition Coil 'I' Secondary Circuit\",\n    \"P2327\": \"Ignition Coil 'J' Primary Control Circuit Low\",\n    \"P2328\": \"Ignition Coil 'J' Primary Control Circuit High\",\n    \"P2329\": \"Ignition Coil 'J' Secondary Circuit\",\n    \"P2330\": \"Ignition Coil 'K' Primary Control Circuit Low\",\n    \"P2331\": \"Ignition Coil 'K' Primary Control Circuit High\",\n    \"P2332\": \"Ignition Coil 'K' Secondary Circuit\",\n    \"P2333\": \"Ignition Coil 'L' Primary Control Circuit Low\",\n    \"P2334\": \"Ignition Coil 'L' Primary Control Circuit High\",\n    \"P2335\": \"Ignition Coil 'L' Secondary Circuit\",\n    \"P2336\": \"Cylinder #1 Above Knock Threshold\",\n    \"P2337\": \"Cylinder #2 Above Knock Threshold\",\n    \"P2338\": \"Cylinder #3 Above Knock Threshold\",\n    \"P2339\": \"Cylinder #4 Above Knock Threshold\",\n    \"P2340\": \"Cylinder #5 Above Knock Threshold\",\n    \"P2341\": \"Cylinder #6 Above Knock Threshold\",\n    \"P2342\": \"Cylinder #7 Above Knock Threshold\",\n    \"P2343\": \"Cylinder #8 Above Knock Threshold\",\n    \"P2344\": \"Cylinder #9 Above Knock Threshold\",\n    \"P2345\": \"Cylinder #10 Above Knock Threshold\",\n    \"P2346\": \"Cylinder #11 Above Knock Threshold\",\n    \"P2347\": \"Cylinder #12 Above Knock Threshold\",\n    \"P2400\": \"Evaporative Emission System Leak Detection Pump Control Circuit/Open\",\n    \"P2401\": \"Evaporative Emission System Leak Detection Pump Control Circuit Low\",\n    \"P2402\": \"Evaporative Emission System Leak Detection Pump Control Circuit High\",\n    \"P2403\": \"Evaporative Emission System Leak Detection Pump Sense Circuit/Open\",\n    \"P2404\": \"Evaporative Emission System Leak Detection Pump Sense Circuit Range/Performance\",\n    \"P2405\": \"Evaporative Emission System Leak Detection Pump Sense Circuit Low\",\n    \"P2406\": \"Evaporative Emission System Leak Detection Pump Sense Circuit High\",\n    \"P2407\": \"Evaporative Emission System Leak Detection Pump Sense Circuit Intermittent/Erratic\",\n    \"P2408\": \"Fuel Cap Sensor/Switch Circuit\",\n    \"P2409\": \"Fuel Cap Sensor/Switch Circuit Range/Performance\",\n    \"P2410\": \"Fuel Cap Sensor/Switch Circuit Low\",\n    \"P2411\": \"Fuel Cap Sensor/Switch Circuit High\",\n    \"P2412\": \"Fuel Cap Sensor/Switch Circuit Intermittent/Erratic\",\n    \"P2413\": \"Exhaust Gas Recirculation System Performance\",\n    \"P2414\": \"O2 Sensor Exhaust Sample Error\",\n    \"P2415\": \"O2 Sensor Exhaust Sample Error\",\n    \"P2416\": \"O2 Sensor Signals Swapped Bank 1 Sensor 2 / Bank 1 Sensor 3\",\n    \"P2417\": \"O2 Sensor Signals Swapped Bank 2 Sensor 2 / Bank 2 Sensor 3\",\n    \"P2418\": \"Evaporative Emission System Switching Valve Control Circuit / Open\",\n    \"P2419\": \"Evaporative Emission System Switching Valve Control Circuit Low\",\n    \"P2420\": \"Evaporative Emission System Switching Valve Control Circuit High\",\n    \"P2421\": \"Evaporative Emission System Vent Valve Stuck Open\",\n    \"P2422\": \"Evaporative Emission System Vent Valve Stuck Closed\",\n    \"P2423\": \"HC Adsorption Catalyst Efficiency Below Threshold\",\n    \"P2424\": \"HC Adsorption Catalyst Efficiency Below Threshold\",\n    \"P2425\": \"Exhaust Gas Recirculation Cooling Valve Control Circuit/Open\",\n    \"P2426\": \"Exhaust Gas Recirculation Cooling Valve Control Circuit Low\",\n    \"P2427\": \"Exhaust Gas Recirculation Cooling Valve Control Circuit High\",\n    \"P2428\": \"Exhaust Gas Temperature Too High\",\n    \"P2429\": \"Exhaust Gas Temperature Too High\",\n    \"P2430\": \"Secondary Air Injection System Air Flow/Pressure Sensor Circuit\",\n    \"P2431\": \"Secondary Air Injection System Air Flow/Pressure Sensor Circuit Range/Performance\",\n    \"P2432\": \"Secondary Air Injection System Air Flow/Pressure Sensor Circuit Low\",\n    \"P2433\": \"Secondary Air Injection System Air Flow/Pressure Sensor Circuit High\",\n    \"P2434\": \"Secondary Air Injection System Air Flow/Pressure Sensor Circuit Intermittent/Erratic\",\n    \"P2435\": \"Secondary Air Injection System Air Flow/Pressure Sensor Circuit\",\n    \"P2436\": \"Secondary Air Injection System Air Flow/Pressure Sensor Circuit Range/Performance\",\n    \"P2437\": \"Secondary Air Injection System Air Flow/Pressure Sensor Circuit Low\",\n    \"P2438\": \"Secondary Air Injection System Air Flow/Pressure Sensor Circuit High\",\n    \"P2439\": \"Secondary Air Injection System Air Flow/Pressure Sensor Circuit Intermittent/Erratic\",\n    \"P2440\": \"Secondary Air Injection System Switching Valve Stuck Open\",\n    \"P2441\": \"Secondary Air Injection System Switching Valve Stuck Closed\",\n    \"P2442\": \"Secondary Air Injection System Switching Valve Stuck Open\",\n    \"P2443\": \"Secondary Air Injection System Switching Valve Stuck Closed\",\n    \"P2444\": \"Secondary Air Injection System Pump Stuck On\",\n    \"P2445\": \"Secondary Air Injection System Pump Stuck Off\",\n    \"P2446\": \"Secondary Air Injection System Pump Stuck On\",\n    \"P2447\": \"Secondary Air Injection System Pump Stuck Off\",\n    \"P2500\": \"Generator Lamp/L-Terminal Circuit Low\",\n    \"P2501\": \"Generator Lamp/L-Terminal Circuit High\",\n    \"P2502\": \"Charging System Voltage\",\n    \"P2503\": \"Charging System Voltage Low\",\n    \"P2504\": \"Charging System Voltage High\",\n    \"P2505\": \"ECM/PCM Power Input Signal\",\n    \"P2506\": \"ECM/PCM Power Input Signal Range/Performance\",\n    \"P2507\": \"ECM/PCM Power Input Signal Low\",\n    \"P2508\": \"ECM/PCM Power Input Signal High\",\n    \"P2509\": \"ECM/PCM Power Input Signal Intermittent\",\n    \"P2510\": \"ECM/PCM Power Relay Sense Circuit Range/Performance\",\n    \"P2511\": \"ECM/PCM Power Relay Sense Circuit Intermittent\",\n    \"P2512\": \"Event Data Recorder Request Circuit/ Open\",\n    \"P2513\": \"Event Data Recorder Request Circuit Low\",\n    \"P2514\": \"Event Data Recorder Request Circuit High\",\n    \"P2515\": \"A/C Refrigerant Pressure Sensor 'B' Circuit\",\n    \"P2516\": \"A/C Refrigerant Pressure Sensor 'B' Circuit Range/Performance\",\n    \"P2517\": \"A/C Refrigerant Pressure Sensor 'B' Circuit Low\",\n    \"P2518\": \"A/C Refrigerant Pressure Sensor 'B' Circuit High\",\n    \"P2519\": \"A/C Request 'A' Circuit\",\n    \"P2520\": \"A/C Request 'A' Circuit Low\",\n    \"P2521\": \"A/C Request 'A' Circuit High\",\n    \"P2522\": \"A/C Request 'B' Circuit\",\n    \"P2523\": \"A/C Request 'B' Circuit Low\",\n    \"P2524\": \"A/C Request 'B' Circuit High\",\n    \"P2525\": \"Vacuum Reservoir Pressure Sensor Circuit\",\n    \"P2526\": \"Vacuum Reservoir Pressure Sensor Circuit Range/Performance\",\n    \"P2527\": \"Vacuum Reservoir Pressure Sensor Circuit Low\",\n    \"P2528\": \"Vacuum Reservoir Pressure Sensor Circuit High\",\n    \"P2529\": \"Vacuum Reservoir Pressure Sensor Circuit Intermittent\",\n    \"P2530\": \"Ignition Switch Run Position Circuit\",\n    \"P2531\": \"Ignition Switch Run Position Circuit Low\",\n    \"P2532\": \"Ignition Switch Run Position Circuit High\",\n    \"P2533\": \"Ignition Switch Run/Start Position Circuit\",\n    \"P2534\": \"Ignition Switch Run/Start Position Circuit Low\",\n    \"P2535\": \"Ignition Switch Run/Start Position Circuit High\",\n    \"P2536\": \"Ignition Switch Accessory Position Circuit\",\n    \"P2537\": \"Ignition Switch Accessory Position Circuit Low\",\n    \"P2538\": \"Ignition Switch Accessory Position Circuit High\",\n    \"P2539\": \"Low Pressure Fuel System Sensor Circuit\",\n    \"P2540\": \"Low Pressure Fuel System Sensor Circuit Range/Performance\",\n    \"P2541\": \"Low Pressure Fuel System Sensor Circuit Low\",\n    \"P2542\": \"Low Pressure Fuel System Sensor Circuit High\",\n    \"P2543\": \"Low Pressure Fuel System Sensor Circuit Intermittent\",\n    \"P2544\": \"Torque Management Request Input Signal 'A'\",\n    \"P2545\": \"Torque Management Request Input Signal 'A' Range/Performance\",\n    \"P2546\": \"Torque Management Request Input Signal 'A' Low\",\n    \"P2547\": \"Torque Management Request Input Signal 'A' High\",\n    \"P2548\": \"Torque Management Request Input Signal 'B'\",\n    \"P2549\": \"Torque Management Request Input Signal 'B' Range/Performance\",\n    \"P2550\": \"Torque Management Request Input Signal 'B' Low\",\n    \"P2551\": \"Torque Management Request Input Signal 'B' High\",\n    \"P2552\": \"Throttle/Fuel Inhibit Circuit\",\n    \"P2553\": \"Throttle/Fuel Inhibit Circuit Range/Performance\",\n    \"P2554\": \"Throttle/Fuel Inhibit Circuit Low\",\n    \"P2555\": \"Throttle/Fuel Inhibit Circuit High\",\n    \"P2556\": \"Engine Coolant Level Sensor/Switch Circuit\",\n    \"P2557\": \"Engine Coolant Level Sensor/Switch Circuit Range/Performance\",\n    \"P2558\": \"Engine Coolant Level Sensor/Switch Circuit Low\",\n    \"P2559\": \"Engine Coolant Level Sensor/Switch Circuit High\",\n    \"P2560\": \"Engine Coolant Level Low\",\n    \"P2561\": \"A/C Control Module Requested MIL Illumination\",\n    \"P2562\": \"Turbocharger Boost Control Position Sensor Circuit\",\n    \"P2563\": \"Turbocharger Boost Control Position Sensor Circuit Range/Performance\",\n    \"P2564\": \"Turbocharger Boost Control Position Sensor Circuit Low\",\n    \"P2565\": \"Turbocharger Boost Control Position Sensor Circuit High\",\n    \"P2566\": \"Turbocharger Boost Control Position Sensor Circuit Intermittent\",\n    \"P2567\": \"Direct Ozone Reduction Catalyst Temperature Sensor Circuit\",\n    \"P2568\": \"Direct Ozone Reduction Catalyst Temperature Sensor Circuit Range/Performance\",\n    \"P2569\": \"Direct Ozone Reduction Catalyst Temperature Sensor Circuit Low\",\n    \"P2570\": \"Direct Ozone Reduction Catalyst Temperature Sensor Circuit High\",\n    \"P2571\": \"Direct Ozone Reduction Catalyst Temperature Sensor Circuit Intermittent/Erratic\",\n    \"P2572\": \"Direct Ozone Reduction Catalyst Deterioration Sensor Circuit\",\n    \"P2573\": \"Direct Ozone Reduction Catalyst Deterioration Sensor Circuit Range/Performance\",\n    \"P2574\": \"Direct Ozone Reduction Catalyst Deterioration Sensor Circuit Low\",\n    \"P2575\": \"Direct Ozone Reduction Catalyst Deterioration Sensor Circuit High\",\n    \"P2576\": \"Direct Ozone Reduction Catalyst Deterioration Sensor Circuit Intermittent/Erratic\",\n    \"P2577\": \"Direct Ozone Reduction Catalyst Efficiency Below Threshold\",\n    \"P2600\": \"Coolant Pump Control Circuit/Open\",\n    \"P2601\": \"Coolant Pump Control Circuit Range/Performance\",\n    \"P2602\": \"Coolant Pump Control Circuit Low\",\n    \"P2603\": \"Coolant Pump Control Circuit High\",\n    \"P2604\": \"Intake Air Heater 'A' Circuit Range/Performance\",\n    \"P2605\": \"Intake Air Heater 'A' Circuit/Open\",\n    \"P2606\": \"Intake Air Heater 'B' Circuit Range/Performance\",\n    \"P2607\": \"Intake Air Heater 'B' Circuit Low\",\n    \"P2608\": \"Intake Air Heater 'B' Circuit High\",\n    \"P2609\": \"Intake Air Heater System Performance\",\n    \"P2610\": \"ECM/PCM Internal Engine Off Timer Performance\",\n    \"P2611\": \"A/C Refrigerant Distribution Valve Control Circuit/Open\",\n    \"P2612\": \"A/C Refrigerant Distribution Valve Control Circuit Low\",\n    \"P2613\": \"A/C Refrigerant Distribution Valve Control Circuit High\",\n    \"P2614\": \"Camshaft Position Signal Output Circuit/Open\",\n    \"P2615\": \"Camshaft Position Signal Output Circuit Low\",\n    \"P2616\": \"Camshaft Position Signal Output Circuit High\",\n    \"P2617\": \"Crankshaft Position Signal Output Circuit/Open\",\n    \"P2618\": \"Crankshaft Position Signal Output Circuit Low\",\n    \"P2619\": \"Crankshaft Position Signal Output Circuit High\",\n    \"P2620\": \"Throttle Position Output Circuit/Open\",\n    \"P2621\": \"Throttle Position Output Circuit Low\",\n    \"P2622\": \"Throttle Position Output Circuit High\",\n    \"P2623\": \"Injector Control Pressure Regulator Circuit/Open\",\n    \"P2624\": \"Injector Control Pressure Regulator Circuit Low\",\n    \"P2625\": \"Injector Control Pressure Regulator Circuit High\",\n    \"P2626\": \"O2 Sensor Pumping Current Trim Circuit/Open\",\n    \"P2627\": \"O2 Sensor Pumping Current Trim Circuit Low\",\n    \"P2628\": \"O2 Sensor Pumping Current Trim Circuit High\",\n    \"P2629\": \"O2 Sensor Pumping Current Trim Circuit/Open\",\n    \"P2630\": \"O2 Sensor Pumping Current Trim Circuit Low\",\n    \"P2631\": \"O2 Sensor Pumping Current Trim Circuit High\",\n    \"P2632\": \"Fuel Pump 'B' Control Circuit /Open\",\n    \"P2633\": \"Fuel Pump 'B' Control Circuit Low\",\n    \"P2634\": \"Fuel Pump 'B' Control Circuit High\",\n    \"P2635\": \"Fuel Pump 'A' Low Flow / Performance\",\n    \"P2636\": \"Fuel Pump 'B' Low Flow / Performance\",\n    \"P2637\": \"Torque Management Feedback Signal 'A'\",\n    \"P2638\": \"Torque Management Feedback Signal 'A' Range/Performance\",\n    \"P2639\": \"Torque Management Feedback Signal 'A' Low\",\n    \"P2640\": \"Torque Management Feedback Signal 'A' High\",\n    \"P2641\": \"Torque Management Feedback Signal 'B'\",\n    \"P2642\": \"Torque Management Feedback Signal 'B' Range/Performance\",\n    \"P2643\": \"Torque Management Feedback Signal 'B' Low\",\n    \"P2644\": \"Torque Management Feedback Signal 'B' High\",\n    \"P2645\": \"'A' Rocker Arm Actuator Control Circuit/Open\",\n    \"P2646\": \"'A' Rocker Arm Actuator System Performance or Stuck Off\",\n    \"P2647\": \"'A' Rocker Arm Actuator System Stuck On\",\n    \"P2648\": \"'A' Rocker Arm Actuator Control Circuit Low\",\n    \"P2649\": \"'A' Rocker Arm Actuator Control Circuit High\",\n    \"P2650\": \"'B' Rocker Arm Actuator Control Circuit/Open\",\n    \"P2651\": \"'B' Rocker Arm Actuator System Performance or Stuck Off\",\n    \"P2652\": \"'B' Rocker Arm Actuator System Stuck On\",\n    \"P2653\": \"'B' Rocker Arm Actuator Control Circuit Low\",\n    \"P2654\": \"'B' Rocker Arm Actuator Control Circuit High\",\n    \"P2655\": \"'A' Rocker Arm Actuator Control Circuit/Open\",\n    \"P2656\": \"'A' Rocker Arm Actuator System Performance or Stuck Off\",\n    \"P2657\": \"'A' Rocker Arm Actuator System Stuck On\",\n    \"P2658\": \"'A' Rocker Arm Actuator Control Circuit Low\",\n    \"P2659\": \"'A' Rocker Arm Actuator Control Circuit High\",\n    \"P2660\": \"'B' Rocker Arm Actuator Control Circuit/Open\",\n    \"P2661\": \"'B' Rocker Arm Actuator System Performance or Stuck Off\",\n    \"P2662\": \"'B' Rocker Arm Actuator System Stuck On\",\n    \"P2663\": \"'B' Rocker Arm Actuator Control Circuit Low\",\n    \"P2664\": \"'B' Rocker Arm Actuator Control Circuit High\",\n    \"P2665\": \"Fuel Shutoff Valve 'B' Control Circuit/Open\",\n    \"P2666\": \"Fuel Shutoff Valve 'B' Control Circuit Low\",\n    \"P2667\": \"Fuel Shutoff Valve 'B' Control Circuit High\",\n    \"P2668\": \"Fuel Mode Indicator Lamp Control Circuit\",\n    \"P2669\": \"Actuator Supply Voltage 'B' Circuit /Open\",\n    \"P2670\": \"Actuator Supply Voltage 'B' Circuit Low\",\n    \"P2671\": \"Actuator Supply Voltage 'B' Circuit High\",\n    \"P2700\": \"Transmission Friction Element 'A' Apply Time Range/Performance\",\n    \"P2701\": \"Transmission Friction Element 'B' Apply Time Range/Performance\",\n    \"P2702\": \"Transmission Friction Element 'C' Apply Time Range/Performance\",\n    \"P2703\": \"Transmission Friction Element 'D' Apply Time Range/Performance\",\n    \"P2704\": \"Transmission Friction Element 'E' Apply Time Range/Performance\",\n    \"P2705\": \"Transmission Friction Element 'F' Apply Time Range/Performance\",\n    \"P2706\": \"Shift Solenoid 'F'\",\n    \"P2707\": \"Shift Solenoid 'F' Performance or Stuck Off\",\n    \"P2708\": \"Shift Solenoid 'F' Stuck On\",\n    \"P2709\": \"Shift Solenoid 'F' Electrical\",\n    \"P2710\": \"Shift Solenoid 'F' Intermittent\",\n    \"P2711\": \"Unexpected Mechanical Gear Disengagement\",\n    \"P2712\": \"Hydraulic Power Unit Leakage\",\n    \"P2713\": \"Pressure Control Solenoid 'D'\",\n    \"P2714\": \"Pressure Control Solenoid 'D' Performance or Stuck Off\",\n    \"P2715\": \"Pressure Control Solenoid 'D' Stuck On\",\n    \"P2716\": \"Pressure Control Solenoid 'D' Electrical\",\n    \"P2717\": \"Pressure Control Solenoid 'D' Intermittent\",\n    \"P2718\": \"Pressure Control Solenoid 'D' Control Circuit / Open\",\n    \"P2719\": \"Pressure Control Solenoid 'D' Control Circuit Range/Performance\",\n    \"P2720\": \"Pressure Control Solenoid 'D' Control Circuit Low\",\n    \"P2721\": \"Pressure Control Solenoid 'D' Control Circuit High\",\n    \"P2722\": \"Pressure Control Solenoid 'E'\",\n    \"P2723\": \"Pressure Control Solenoid 'E' Performance or Stuck Off\",\n    \"P2724\": \"Pressure Control Solenoid 'E' Stuck On\",\n    \"P2725\": \"Pressure Control Solenoid 'E' Electrical\",\n    \"P2726\": \"Pressure Control Solenoid 'E' Intermittent\",\n    \"P2727\": \"Pressure Control Solenoid 'E' Control Circuit / Open\",\n    \"P2728\": \"Pressure Control Solenoid 'E' Control Circuit Range/Performance\",\n    \"P2729\": \"Pressure Control Solenoid 'E' Control Circuit Low\",\n    \"P2730\": \"Pressure Control Solenoid 'E' Control Circuit High\",\n    \"P2731\": \"Pressure Control Solenoid 'F'\",\n    \"P2732\": \"Pressure Control Solenoid 'F' Performance or Stuck Off\",\n    \"P2733\": \"Pressure Control Solenoid 'F' Stuck On\",\n    \"P2734\": \"Pressure Control Solenoid 'F' Electrical\",\n    \"P2735\": \"Pressure Control Solenoid 'F' Intermittent\",\n    \"P2736\": \"Pressure Control Solenoid 'F' Control Circuit/Open\",\n    \"P2737\": \"Pressure Control Solenoid 'F' Control Circuit Range/Performance\",\n    \"P2738\": \"Pressure Control Solenoid 'F' Control Circuit Low\",\n    \"P2739\": \"Pressure Control Solenoid 'F' Control Circuit High\",\n    \"P2740\": \"Transmission Fluid Temperature Sensor 'B' Circuit\",\n    \"P2741\": \"Transmission Fluid Temperature Sensor 'B' Circuit Range Performance\",\n    \"P2742\": \"Transmission Fluid Temperature Sensor 'B' Circuit Low\",\n    \"P2743\": \"Transmission Fluid Temperature Sensor 'B' Circuit High\",\n    \"P2744\": \"Transmission Fluid Temperature Sensor 'B' Circuit Intermittent\",\n    \"P2745\": \"Intermediate Shaft Speed Sensor 'B' Circuit\",\n    \"P2746\": \"Intermediate Shaft Speed Sensor 'B' Circuit Range/Performance\",\n    \"P2747\": \"Intermediate Shaft Speed Sensor 'B' Circuit No Signal\",\n    \"P2748\": \"Intermediate Shaft Speed Sensor 'B' Circuit Intermittent\",\n    \"P2749\": \"Intermediate Shaft Speed Sensor 'C' Circuit\",\n    \"P2750\": \"Intermediate Shaft Speed Sensor 'C' Circuit Range/Performance\",\n    \"P2751\": \"Intermediate Shaft Speed Sensor 'C' Circuit No Signal\",\n    \"P2752\": \"Intermediate Shaft Speed Sensor 'C' Circuit Intermittent\",\n    \"P2753\": \"Transmission Fluid Cooler Control Circuit/Open\",\n    \"P2754\": \"Transmission Fluid Cooler Control Circuit Low\",\n    \"P2755\": \"Transmission Fluid Cooler Control Circuit High\",\n    \"P2756\": \"Torque Converter Clutch Pressure Control Solenoid\",\n    \"P2757\": \"Torque Converter Clutch Pressure Control Solenoid Control Circuit Performance or Stuck Off\",\n    \"P2758\": \"Torque Converter Clutch Pressure Control Solenoid Control Circuit Stuck On\",\n    \"P2759\": \"Torque Converter Clutch Pressure Control Solenoid Control Circuit Electrical\",\n    \"P2760\": \"Torque Converter Clutch Pressure Control Solenoid Control Circuit Intermittent\",\n    \"P2761\": \"Torque Converter Clutch Pressure Control Solenoid Control Circuit/Open\",\n    \"P2762\": \"Torque Converter Clutch Pressure Control Solenoid Control Circuit Range/Performance\",\n    \"P2763\": \"Torque Converter Clutch Pressure Control Solenoid Control Circuit High\",\n    \"P2764\": \"Torque Converter Clutch Pressure Control Solenoid Control Circuit Low\",\n    \"P2765\": \"Input/Turbine Speed Sensor 'B' Circuit\",\n    \"P2766\": \"Input/Turbine Speed Sensor 'B' Circuit Range/Performance\",\n    \"P2767\": \"Input/Turbine Speed Sensor 'B' Circuit No Signal\",\n    \"P2768\": \"Input/Turbine Speed Sensor 'B' Circuit Intermittent\",\n    \"P2769\": \"Torque Converter Clutch Circuit Low\",\n    \"P2770\": \"Torque Converter Clutch Circuit High\",\n    \"P2771\": \"Four Wheel Drive (4WD) Low Switch Circuit\",\n    \"P2772\": \"Four Wheel Drive (4WD) Low Switch Circuit Range/Performance\",\n    \"P2773\": \"Four Wheel Drive (4WD) Low Switch Circuit Low\",\n    \"P2774\": \"Four Wheel Drive (4WD) Low Switch Circuit High\",\n    \"P2775\": \"Upshift Switch Circuit Range/Performance\",\n    \"P2776\": \"Upshift Switch Circuit Low\",\n    \"P2777\": \"Upshift Switch Circuit High\",\n    \"P2778\": \"Upshift Switch Circuit Intermittent/Erratic\",\n    \"P2779\": \"Downshift Switch Circuit Range/Performance\",\n    \"P2780\": \"Downshift Switch Circuit Low\",\n    \"P2781\": \"Downshift Switch Circuit High\",\n    \"P2782\": \"Downshift Switch Circuit Intermittent/Erratic\",\n    \"P2783\": \"Torque Converter Temperature Too High\",\n    \"P2784\": \"Input/Turbine Speed Sensor 'A'/'B' Correlation\",\n    \"P2785\": \"Clutch Actuator Temperature Too High\",\n    \"P2786\": \"Gear Shift Actuator Temperature Too High\",\n    \"P2787\": \"Clutch Temperature Too High\",\n    \"P2788\": \"Auto Shift Manual Adaptive Learning at Limit\",\n    \"P2789\": \"Clutch Adaptive Learning at Limit\",\n    \"P2790\": \"Gate Select Direction Circuit\",\n    \"P2791\": \"Gate Select Direction Circuit Low\",\n    \"P2792\": \"Gate Select Direction Circuit High\",\n    \"P2793\": \"Gear Shift Direction Circuit\",\n    \"P2794\": \"Gear Shift Direction Circuit Low\",\n    \"P2795\": \"Gear Shift Direction Circuit High\",\n    \"P2A00\": \"O2 Sensor Circuit Range/Performance\",\n    \"P2A01\": \"O2 Sensor Circuit Range/Performance\",\n    \"P2A02\": \"O2 Sensor Circuit Range/Performance\",\n    \"P2A03\": \"O2 Sensor Circuit Range/Performance\",\n    \"P2A04\": \"O2 Sensor Circuit Range/Performance\",\n    \"P2A05\": \"O2 Sensor Circuit Range/Performance\",\n    \"P3400\": \"Cylinder Deactivation System\",\n    \"P3401\": \"Cylinder 1 Deactivation/lntake Valve Control Circuit/Open\",\n    \"P3402\": \"Cylinder 1 Deactivation/lntake Valve Control Performance\",\n    \"P3403\": \"Cylinder 1 Deactivation/lntake Valve Control Circuit Low\",\n    \"P3404\": \"Cylinder 1 Deactivation/lntake Valve Control Circuit High\",\n    \"P3405\": \"Cylinder 1 Exhaust Valve Control Circuit/Open\",\n    \"P3406\": \"Cylinder 1 Exhaust Valve Control Performance\",\n    \"P3407\": \"Cylinder 1 Exhaust Valve Control Circuit Low\",\n    \"P3408\": \"Cylinder 1 Exhaust Valve Control Circuit High\",\n    \"P3409\": \"Cylinder 2 Deactivation/lntake Valve Control Circuit/Open\",\n    \"P3410\": \"Cylinder 2 Deactivation/lntake Valve Control Performance\",\n    \"P3411\": \"Cylinder 2 Deactivation/lntake Valve Control Circuit Low\",\n    \"P3412\": \"Cylinder 2 Deactivation/lntake Valve Control Circuit High\",\n    \"P3413\": \"Cylinder 2 Exhaust Valve Control Circuit/Open\",\n    \"P3414\": \"Cylinder 2 Exhaust Valve Control Performance\",\n    \"P3415\": \"Cylinder 2 Exhaust Valve Control Circuit Low\",\n    \"P3416\": \"Cylinder 2 Exhaust Valve Control Circuit High\",\n    \"P3417\": \"Cylinder 3 Deactivation/lntake Valve Control Circuit/Open\",\n    \"P3418\": \"Cylinder 3 Deactivation/lntake Valve Control Performance\",\n    \"P3419\": \"Cylinder 3 Deactivation/lntake Valve Control Circuit Low\",\n    \"P3420\": \"Cylinder 3 Deactivation/lntake Valve Control Circuit High\",\n    \"P3421\": \"Cylinder 3 Exhaust Valve Control Circuit/Open\",\n    \"P3422\": \"Cylinder 3 Exhaust Valve Control Performance\",\n    \"P3423\": \"Cylinder 3 Exhaust Valve Control Circuit Low\",\n    \"P3424\": \"Cylinder 3 Exhaust Valve Control Circuit High\",\n    \"P3425\": \"Cylinder 4 Deactivation/lntake Valve Control Circuit/Open\",\n    \"P3426\": \"Cylinder 4 Deactivation/lntake Valve Control Performance\",\n    \"P3427\": \"Cylinder 4 Deactivation/lntake Valve Control Circuit Low\",\n    \"P3428\": \"Cylinder 4 Deactivation/lntake Valve Control Circuit High\",\n    \"P3429\": \"Cylinder 4 Exhaust Valve Control Circuit/Open\",\n    \"P3430\": \"Cylinder 4 Exhaust Valve Control Performance\",\n    \"P3431\": \"Cylinder 4 Exhaust Valve Control Circuit Low\",\n    \"P3432\": \"Cylinder 4 Exhaust Valve Control Circuit High\",\n    \"P3433\": \"Cylinder 5 Deactivation/lntake Valve Control Circuit/Open\",\n    \"P3434\": \"Cylinder 5 Deactivation/lntake Valve Control Performance\",\n    \"P3435\": \"Cylinder 5 Deactivation/lntake Valve Control Circuit Low\",\n    \"P3436\": \"Cylinder 5 Deactivation/lntake Valve Control Circuit High\",\n    \"P3437\": \"Cylinder 5 Exhaust Valve Control Circuit/Open\",\n    \"P3438\": \"Cylinder 5 Exhaust Valve Control Performance\",\n    \"P3439\": \"Cylinder 5 Exhaust Valve Control Circuit Low\",\n    \"P3440\": \"Cylinder 5 Exhaust Valve Control Circuit High\",\n    \"P3441\": \"Cylinder 6 Deactivation/lntake Valve Control Circuit/Open\",\n    \"P3442\": \"Cylinder 6 Deactivation/lntake Valve Control Performance\",\n    \"P3443\": \"Cylinder 6 Deactivation/lntake Valve Control Circuit Low\",\n    \"P3444\": \"Cylinder 6 Deactivation/lntake Valve Control Circuit High\",\n    \"P3445\": \"Cylinder 6 Exhaust Valve Control Circuit/Open\",\n    \"P3446\": \"Cylinder 6 Exhaust Valve Control Performance\",\n    \"P3447\": \"Cylinder 6 Exhaust Valve Control Circuit Low\",\n    \"P3448\": \"Cylinder 6 Exhaust Valve Control Circuit High\",\n    \"P3449\": \"Cylinder 7 Deactivation/lntake Valve Control Circuit/Open\",\n    \"P3450\": \"Cylinder 7 Deactivation/lntake Valve Control Performance\",\n    \"P3451\": \"Cylinder 7 Deactivation/lntake Valve Control Circuit Low\",\n    \"P3452\": \"Cylinder 7 Deactivation/lntake Valve Control Circuit High\",\n    \"P3453\": \"Cylinder 7 Exhaust Valve Control Circuit/Open\",\n    \"P3454\": \"Cylinder 7 Exhaust Valve Control Performance\",\n    \"P3455\": \"Cylinder 7 Exhaust Valve Control Circuit Low\",\n    \"P3456\": \"Cylinder 7 Exhaust Valve Control Circuit High\",\n    \"P3457\": \"Cylinder 8 Deactivation/lntake Valve Control Circuit/Open\",\n    \"P3458\": \"Cylinder 8 Deactivation/lntake Valve Control Performance\",\n    \"P3459\": \"Cylinder 8 Deactivation/lntake Valve Control Circuit Low\",\n    \"P3460\": \"Cylinder 8 Deactivation/lntake Valve Control Circuit High\",\n    \"P3461\": \"Cylinder 8 Exhaust Valve Control Circuit/Open\",\n    \"P3462\": \"Cylinder 8 Exhaust Valve Control Performance\",\n    \"P3463\": \"Cylinder 8 Exhaust Valve Control Circuit Low\",\n    \"P3464\": \"Cylinder 8 Exhaust Valve Control Circuit High\",\n    \"P3465\": \"Cylinder 9 Deactivation/lntake Valve Control Circuit/Open\",\n    \"P3466\": \"Cylinder 9 Deactivation/lntake Valve Control Performance\",\n    \"P3467\": \"Cylinder 9 Deactivation/lntake Valve Control Circuit Low\",\n    \"P3468\": \"Cylinder 9 Deactivation/lntake Valve Control Circuit High\",\n    \"P3469\": \"Cylinder 9 Exhaust Valve Control Circuit/Open\",\n    \"P3470\": \"Cylinder 9 Exhaust Valve Control Performance\",\n    \"P3471\": \"Cylinder 9 Exhaust Valve Control Circuit Low\",\n    \"P3472\": \"Cylinder 9 Exhaust Valve Control Circuit High\",\n    \"P3473\": \"Cylinder 10 Deactivation/lntake Valve Control Circuit/Open\",\n    \"P3474\": \"Cylinder 10 Deactivation/lntake Valve Control Performance\",\n    \"P3475\": \"Cylinder 10 Deactivation/lntake Valve Control Circuit Low\",\n    \"P3476\": \"Cylinder 10 Deactivation/lntake Valve Control Circuit High\",\n    \"P3477\": \"Cylinder 10 Exhaust Valve Control Circuit/Open\",\n    \"P3478\": \"Cylinder 10 Exhaust Valve Control Performance\",\n    \"P3479\": \"Cylinder 10 Exhaust Valve Control Circuit Low\",\n    \"P3480\": \"Cylinder 10 Exhaust Valve Control Circuit High\",\n    \"P3481\": \"Cylinder 11 Deactivation/lntake Valve Control Circuit/Open\",\n    \"P3482\": \"Cylinder 11 Deactivation/lntake Valve Control Performance\",\n    \"P3483\": \"Cylinder 11 Deactivation/lntake Valve Control Circuit Low\",\n    \"P3484\": \"Cylinder 11 Deactivation/lntake Valve Control Circuit High\",\n    \"P3485\": \"Cylinder 11 Exhaust Valve Control Circuit/Open\",\n    \"P3486\": \"Cylinder 11 Exhaust Valve Control Performance\",\n    \"P3487\": \"Cylinder 11 Exhaust Valve Control Circuit Low\",\n    \"P3488\": \"Cylinder 11 Exhaust Valve Control Circuit High\",\n    \"P3489\": \"Cylinder 12 Deactivation/lntake Valve Control Circuit/Open\",\n    \"P3490\": \"Cylinder 12 Deactivation/lntake Valve Control Performance\",\n    \"P3491\": \"Cylinder 12 Deactivation/lntake Valve Control Circuit Low\",\n    \"P3492\": \"Cylinder 12 Deactivation/lntake Valve Control Circuit High\",\n    \"P3493\": \"Cylinder 12 Exhaust Valve Control Circuit/Open\",\n    \"P3494\": \"Cylinder 12 Exhaust Valve Control Performance\",\n    \"P3495\": \"Cylinder 12 Exhaust Valve Control Circuit Low\",\n    \"P3496\": \"Cylinder 12 Exhaust Valve Control Circuit High\",\n    \"P3497\": \"Cylinder Deactivation System\",\n    \"U0001\": \"High Speed CAN Communication Bus\",\n    \"U0002\": \"High Speed CAN Communication Bus (Performance)\",\n    \"U0003\": \"High Speed CAN Communication Bus (Open)\",\n    \"U0004\": \"High Speed CAN Communication Bus (Low)\",\n    \"U0005\": \"High Speed CAN Communication Bus (High)\",\n    \"U0006\": \"High Speed CAN Communication Bus (Open)\",\n    \"U0007\": \"High Speed CAN Communication Bus (Low)\",\n    \"U0008\": \"High Speed CAN Communication Bus (High)\",\n    \"U0009\": \"High Speed CAN Communication Bus (shorted to Bus)\",\n    \"U0010\": \"Medium Speed CAN Communication Bus\",\n    \"U0011\": \"Medium Speed CAN Communication Bus (Performance)\",\n    \"U0012\": \"Medium Speed CAN Communication Bus (Open)\",\n    \"U0013\": \"Medium Speed CAN Communication Bus (Low)\",\n    \"U0014\": \"Medium Speed CAN Communication Bus (High)\",\n    \"U0015\": \"Medium Speed CAN Communication Bus (Open)\",\n    \"U0016\": \"Medium Speed CAN Communication Bus (Low)\",\n    \"U0017\": \"Medium Speed CAN Communication Bus (High)\",\n    \"U0018\": \"Medium Speed CAN Communication Bus (shorted to Bus)\",\n    \"U0019\": \"Low Speed CAN Communication Bus\",\n    \"U0020\": \"Low Speed CAN Communication Bus (Performance)\",\n    \"U0021\": \"Low Speed CAN Communication Bus (Open)\",\n    \"U0022\": \"Low Speed CAN Communication Bus (Low)\",\n    \"U0023\": \"Low Speed CAN Communication Bus (High)\",\n    \"U0024\": \"Low Speed CAN Communication Bus (Open)\",\n    \"U0025\": \"Low Speed CAN Communication Bus (Low)\",\n    \"U0026\": \"Low Speed CAN Communication Bus (High)\",\n    \"U0027\": \"Low Speed CAN Communication Bus (shorted to Bus)\",\n    \"U0028\": \"Vehicle Communication Bus A\",\n    \"U0029\": \"Vehicle Communication Bus A (Performance)\",\n    \"U0030\": \"Vehicle Communication Bus A (Open)\",\n    \"U0031\": \"Vehicle Communication Bus A (Low)\",\n    \"U0032\": \"Vehicle Communication Bus A (High)\",\n    \"U0033\": \"Vehicle Communication Bus A (Open)\",\n    \"U0034\": \"Vehicle Communication Bus A (Low)\",\n    \"U0035\": \"Vehicle Communication Bus A (High)\",\n    \"U0036\": \"Vehicle Communication Bus A (shorted to Bus A)\",\n    \"U0037\": \"Vehicle Communication Bus B\",\n    \"U0038\": \"Vehicle Communication Bus B (Performance)\",\n    \"U0039\": \"Vehicle Communication Bus B (Open)\",\n    \"U0040\": \"Vehicle Communication Bus B (Low)\",\n    \"U0041\": \"Vehicle Communication Bus B (High)\",\n    \"U0042\": \"Vehicle Communication Bus B (Open)\",\n    \"U0043\": \"Vehicle Communication Bus B (Low)\",\n    \"U0044\": \"Vehicle Communication Bus B (High)\",\n    \"U0045\": \"Vehicle Communication Bus B (shorted to Bus B)\",\n    \"U0046\": \"Vehicle Communication Bus C\",\n    \"U0047\": \"Vehicle Communication Bus C (Performance)\",\n    \"U0048\": \"Vehicle Communication Bus C (Open)\",\n    \"U0049\": \"Vehicle Communication Bus C (Low)\",\n    \"U0050\": \"Vehicle Communication Bus C (High)\",\n    \"U0051\": \"Vehicle Communication Bus C (Open)\",\n    \"U0052\": \"Vehicle Communication Bus C (Low)\",\n    \"U0053\": \"Vehicle Communication Bus C (High)\",\n    \"U0054\": \"Vehicle Communication Bus C (shorted to Bus C)\",\n    \"U0055\": \"Vehicle Communication Bus D\",\n    \"U0056\": \"Vehicle Communication Bus D (Performance)\",\n    \"U0057\": \"Vehicle Communication Bus D (Open)\",\n    \"U0058\": \"Vehicle Communication Bus D (Low)\",\n    \"U0059\": \"Vehicle Communication Bus D (High)\",\n    \"U0060\": \"Vehicle Communication Bus D (Open)\",\n    \"U0061\": \"Vehicle Communication Bus D (Low)\",\n    \"U0062\": \"Vehicle Communication Bus D (High)\",\n    \"U0063\": \"Vehicle Communication Bus D (shorted to Bus D)\",\n    \"U0064\": \"Vehicle Communication Bus E\",\n    \"U0065\": \"Vehicle Communication Bus E (Performance)\",\n    \"U0066\": \"Vehicle Communication Bus E (Open)\",\n    \"U0067\": \"Vehicle Communication Bus E (Low)\",\n    \"U0068\": \"Vehicle Communication Bus E (High)\",\n    \"U0069\": \"Vehicle Communication Bus E (Open)\",\n    \"U0070\": \"Vehicle Communication Bus E (Low)\",\n    \"U0071\": \"Vehicle Communication Bus E (High)\",\n    \"U0072\": \"Vehicle Communication Bus E (shorted to Bus E)\",\n    \"U0073\": \"Control Module Communication Bus Off\",\n    \"U0074\": \"Reserved by J2012\",\n    \"U0075\": \"Reserved by J2012\",\n    \"U0076\": \"Reserved by J2012\",\n    \"U0077\": \"Reserved by J2012\",\n    \"U0078\": \"Reserved by J2012\",\n    \"U0079\": \"Reserved by J2012\",\n    \"U0080\": \"Reserved by J2012\",\n    \"U0081\": \"Reserved by J2012\",\n    \"U0082\": \"Reserved by J2012\",\n    \"U0083\": \"Reserved by J2012\",\n    \"U0084\": \"Reserved by J2012\",\n    \"U0085\": \"Reserved by J2012\",\n    \"U0086\": \"Reserved by J2012\",\n    \"U0087\": \"Reserved by J2012\",\n    \"U0088\": \"Reserved by J2012\",\n    \"U0089\": \"Reserved by J2012\",\n    \"U0090\": \"Reserved by J2012\",\n    \"U0091\": \"Reserved by J2012\",\n    \"U0092\": \"Reserved by J2012\",\n    \"U0093\": \"Reserved by J2012\",\n    \"U0094\": \"Reserved by J2012\",\n    \"U0095\": \"Reserved by J2012\",\n    \"U0096\": \"Reserved by J2012\",\n    \"U0097\": \"Reserved by J2012\",\n    \"U0098\": \"Reserved by J2012\",\n    \"U0099\": \"Reserved by J2012\",\n    \"U0100\": \"Lost Communication With ECM/PCM A\",\n    \"U0101\": \"Lost Communication with TCM\",\n    \"U0102\": \"Lost Communication with Transfer Case Control Module\",\n    \"U0103\": \"Lost Communication With Gear Shift Module\",\n    \"U0104\": \"Lost Communication With Cruise Control Module\",\n    \"U0105\": \"Lost Communication With Fuel Injector Control Module\",\n    \"U0106\": \"Lost Communication With Glow Plug Control Module\",\n    \"U0107\": \"Lost Communication With Throttle Actuator Control Module\",\n    \"U0108\": \"Lost Communication With Alternative Fuel Control Module\",\n    \"U0109\": \"Lost Communication With Fuel Pump Control Module\",\n    \"U0110\": \"Lost Communication With Drive Motor Control Module\",\n    \"U0111\": \"Lost Communication With Battery Energy Control Module 'A'\",\n    \"U0112\": \"Lost Communication With Battery Energy Control Module 'B'\",\n    \"U0113\": \"Lost Communication With Emissions Critical Control Information\",\n    \"U0114\": \"Lost Communication With Four-Wheel Drive Clutch Control Module\",\n    \"U0115\": \"Lost Communication With ECM/PCM B\",\n    \"U0116\": \"Reserved by J2012\",\n    \"U0117\": \"Reserved by J2012\",\n    \"U0118\": \"Reserved by J2012\",\n    \"U0119\": \"Reserved by J2012\",\n    \"U0120\": \"Reserved by J2012\",\n    \"U0121\": \"Lost Communication With Anti-Lock Brake System (ABS) Control Module\",\n    \"U0122\": \"Lost Communication With Vehicle Dynamics Control Module\",\n    \"U0123\": \"Lost Communication With Yaw Rate Sensor Module\",\n    \"U0124\": \"Lost Communication With Lateral Acceleration Sensor Module\",\n    \"U0125\": \"Lost Communication With Multi-axis Acceleration Sensor Module\",\n    \"U0126\": \"Lost Communication With Steering Angle Sensor Module\",\n    \"U0127\": \"Lost Communication With Tire Pressure Monitor Module\",\n    \"U0128\": \"Lost Communication With Park Brake Control Module\",\n    \"U0129\": \"Lost Communication With Brake System Control Module\",\n    \"U0130\": \"Lost Communication With Steering Effort Control Module\",\n    \"U0131\": \"Lost Communication With Power Steering Control Module\",\n    \"U0132\": \"Lost Communication With Ride Level Control Module\",\n    \"U0133\": \"Reserved by J2012\",\n    \"U0134\": \"Reserved by J2012\",\n    \"U0135\": \"Reserved by J2012\",\n    \"U0136\": \"Reserved by J2012\",\n    \"U0137\": \"Reserved by J2012\",\n    \"U0138\": \"Reserved by J2012\",\n    \"U0139\": \"Reserved by J2012\",\n    \"U0140\": \"Lost Communication With Body Control Module\",\n    \"U0141\": \"Lost Communication With Body Control Module 'A'\",\n    \"U0142\": \"Lost Communication With Body Control Module 'B'\",\n    \"U0143\": \"Lost Communication With Body Control Module 'C'\",\n    \"U0144\": \"Lost Communication With Body Control Module 'D'\",\n    \"U0145\": \"Lost Communication With Body Control Module 'E'\",\n    \"U0146\": \"Lost Communication With Gateway 'A'\",\n    \"U0147\": \"Lost Communication With Gateway 'B'\",\n    \"U0148\": \"Lost Communication With Gateway 'C'\",\n    \"U0149\": \"Lost Communication With Gateway 'D'\",\n    \"U0150\": \"Lost Communication With Gateway 'E'\",\n    \"U0151\": \"Lost Communication With Restraints Control Module\",\n    \"U0152\": \"Lost Communication With Side Restraints Control Module Left\",\n    \"U0153\": \"Lost Communication With Side Restraints Control Module Right\",\n    \"U0154\": \"Lost Communication With Restraints Occupant Sensing Control Module\",\n    \"U0155\": \"Lost Communication With Instrument Panel Cluster (IPC) Control Module\",\n    \"U0156\": \"Lost Communication With Information Center 'A'\",\n    \"U0157\": \"Lost Communication With Information Center 'B'\",\n    \"U0158\": \"Lost Communication With Head Up Display\",\n    \"U0159\": \"Lost Communication With Parking Assist Control Module\",\n    \"U0160\": \"Lost Communication With Audible Alert Control Module\",\n    \"U0161\": \"Lost Communication With Compass Module\",\n    \"U0162\": \"Lost Communication With Navigation Display Module\",\n    \"U0163\": \"Lost Communication With Navigation Control Module\",\n    \"U0164\": \"Lost Communication With HVAC Control Module\",\n    \"U0165\": \"Lost Communication With HVAC Control Module Rear\",\n    \"U0166\": \"Lost Communication With Auxiliary Heater Control Module\",\n    \"U0167\": \"Lost Communication With Vehicle Immobilizer Control Module\",\n    \"U0168\": \"Lost Communication With Vehicle Security Control Module\",\n    \"U0169\": \"Lost Communication With Sunroof Control Module\",\n    \"U0170\": \"Lost Communication With 'Restraints System Sensor A'\",\n    \"U0171\": \"Lost Communication With 'Restraints System Sensor B'\",\n    \"U0172\": \"Lost Communication With 'Restraints System Sensor C'\",\n    \"U0173\": \"Lost Communication With 'Restraints System Sensor D'\",\n    \"U0174\": \"Lost Communication With 'Restraints System Sensor E'\",\n    \"U0175\": \"Lost Communication With 'Restraints System Sensor F'\",\n    \"U0176\": \"Lost Communication With 'Restraints System Sensor G'\",\n    \"U0177\": \"Lost Communication With 'Restraints System Sensor H'\",\n    \"U0178\": \"Lost Communication With 'Restraints System Sensor I'\",\n    \"U0179\": \"Lost Communication With 'Restraints System Sensor J'\",\n    \"U0180\": \"Lost Communication With Automatic Lighting Control Module\",\n    \"U0181\": \"Lost Communication With Headlamp Leveling Control Module\",\n    \"U0182\": \"Lost Communication With Lighting Control Module Front\",\n    \"U0183\": \"Lost Communication With Lighting Control Module Rear\",\n    \"U0184\": \"Lost Communication With Radio\",\n    \"U0185\": \"Lost Communication With Antenna Control Module\",\n    \"U0186\": \"Lost Communication With Audio Amplifier\",\n    \"U0187\": \"Lost Communication With Digital Disc Player/Changer Module 'A'\",\n    \"U0188\": \"Lost Communication With Digital Disc Player/Changer Module 'B'\",\n    \"U0189\": \"Lost Communication With Digital Disc Player/Changer Module 'C'\",\n    \"U0190\": \"Lost Communication With Digital Disc Player/Changer Module 'D'\",\n    \"U0191\": \"Lost Communication With Television\",\n    \"U0192\": \"Lost Communication With Personal Computer\",\n    \"U0193\": \"Lost Communication With 'Digital Audio Control Module A'\",\n    \"U0194\": \"Lost Communication With 'Digital Audio Control Module B'\",\n    \"U0195\": \"Lost Communication With Subscription Entertainment Receiver Module\",\n    \"U0196\": \"Lost Communication With Rear Seat Entertainment Control Module\",\n    \"U0197\": \"Lost Communication With Telephone Control Module\",\n    \"U0198\": \"Lost Communication With Telematic Control Module\",\n    \"U0199\": \"Lost Communication With 'Door Control Module A'\",\n    \"U0200\": \"Lost Communication With 'Door Control Module B'\",\n    \"U0201\": \"Lost Communication With 'Door Control Module C'\",\n    \"U0202\": \"Lost Communication With 'Door Control Module D'\",\n    \"U0203\": \"Lost Communication With 'Door Control Module E'\",\n    \"U0204\": \"Lost Communication With 'Door Control Module F'\",\n    \"U0205\": \"Lost Communication With 'Door Control Module G'\",\n    \"U0206\": \"Lost Communication With Folding Top Control Module\",\n    \"U0207\": \"Lost Communication With Moveable Roof Control Module\",\n    \"U0208\": \"Lost Communication With 'Seat Control Module A'\",\n    \"U0209\": \"Lost Communication With 'Seat Control Module B'\",\n    \"U0210\": \"Lost Communication With 'Seat Control Module C'\",\n    \"U0211\": \"Lost Communication With 'Seat Control Module D'\",\n    \"U0212\": \"Lost Communication With Steering Column Control Module\",\n    \"U0213\": \"Lost Communication With Mirror Control Module\",\n    \"U0214\": \"Lost Communication With Remote Function Actuation\",\n    \"U0215\": \"Lost Communication With 'Door Switch A'\",\n    \"U0216\": \"Lost Communication With 'Door Switch B'\",\n    \"U0217\": \"Lost Communication With 'Door Switch C'\",\n    \"U0218\": \"Lost Communication With 'Door Switch D'\",\n    \"U0219\": \"Lost Communication With 'Door Switch E'\",\n    \"U0220\": \"Lost Communication With 'Door Switch F'\",\n    \"U0221\": \"Lost Communication With 'Door Switch G'\",\n    \"U0222\": \"Lost Communication With 'Door Window Motor A'\",\n    \"U0223\": \"Lost Communication With 'Door Window Motor B'\",\n    \"U0224\": \"Lost Communication With 'Door Window Motor C'\",\n    \"U0225\": \"Lost Communication With 'Door Window Motor D'\",\n    \"U0226\": \"Lost Communication With 'Door Window Motor E'\",\n    \"U0227\": \"Lost Communication With 'Door Window Motor F'\",\n    \"U0228\": \"Lost Communication With 'Door Window Motor G'\",\n    \"U0229\": \"Lost Communication With Heated Steering Wheel Module\",\n    \"U0230\": \"Lost Communication With Rear Gate Module\",\n    \"U0231\": \"Lost Communication With Rain Sensing Module\",\n    \"U0232\": \"Lost Communication With Side Obstacle Detection Control Module Left\",\n    \"U0233\": \"Lost Communication With Side Obstacle Detection Control Module Right\",\n    \"U0234\": \"Lost Communication With Convenience Recall Module\",\n    \"U0235\": \"Lost Communication With Cruise Control Front Distance Range Sensor\",\n    \"U0300\": \"Internal Control Module Software Incompatibility\",\n    \"U0301\": \"Software Incompatibility with ECM/PCM\",\n    \"U0302\": \"Software Incompatibility with Transmission Control Module\",\n    \"U0303\": \"Software Incompatibility with Transfer Case Control Module\",\n    \"U0304\": \"Software Incompatibility with Gear Shift Control Module\",\n    \"U0305\": \"Software Incompatibility with Cruise Control Module\",\n    \"U0306\": \"Software Incompatibility with Fuel Injector Control Module\",\n    \"U0307\": \"Software Incompatibility with Glow Plug Control Module\",\n    \"U0308\": \"Software Incompatibility with Throttle Actuator Control Module\",\n    \"U0309\": \"Software Incompatibility with Alternative Fuel Control Module\",\n    \"U0310\": \"Software Incompatibility with Fuel Pump Control Module\",\n    \"U0311\": \"Software Incompatibility with Drive Motor Control Module\",\n    \"U0312\": \"Software Incompatibility with Battery Energy Control Module A\",\n    \"U0313\": \"Software Incompatibility with Battery Energy Control Module B\",\n    \"U0314\": \"Software Incompatibility with Four-Wheel Drive Clutch Control Module\",\n    \"U0315\": \"Software Incompatibility with Anti-Lock Brake System Control Module\",\n    \"U0316\": \"Software Incompatibility with Vehicle Dynamics Control Module\",\n    \"U0317\": \"Software Incompatibility with Park Brake Control Module\",\n    \"U0318\": \"Software Incompatibility with Brake System Control Module\",\n    \"U0319\": \"Software Incompatibility with Steering Effort Control Module\",\n    \"U0320\": \"Software Incompatibility with Power Steering Control Module\",\n    \"U0321\": \"Software Incompatibility with Ride Level Control Module\",\n    \"U0322\": \"Software Incompatibility with Body Control Module\",\n    \"U0323\": \"Software Incompatibility with Instrument Panel Control Module\",\n    \"U0324\": \"Software Incompatibility with HVAC Control Module\",\n    \"U0325\": \"Software Incompatibility with Auxiliary Heater Control Module\",\n    \"U0326\": \"Software Incompatibility with Vehicle Immobilizer Control Module\",\n    \"U0327\": \"Software Incompatibility with Vehicle Security Control Module\",\n    \"U0328\": \"Software Incompatibility with Steering Angle Sensor Module\",\n    \"U0329\": \"Software Incompatibility with Steering Column Control Module\",\n    \"U0330\": \"Software Incompatibility with Tire Pressure Monitor Module\",\n    \"U0331\": \"Software Incompatibility with Body Control Module 'A'\",\n    \"U0400\": \"Invalid Data Received\",\n    \"U0401\": \"Invalid Data Received From ECM/PCM\",\n    \"U0402\": \"Invalid Data Received From Transmission Control Module\",\n    \"U0403\": \"Invalid Data Received From Transfer Case Control Module\",\n    \"U0404\": \"Invalid Data Received From Gear Shift Control Module\",\n    \"U0405\": \"Invalid Data Received From Cruise Control Module\",\n    \"U0406\": \"Invalid Data Received From Fuel Injector Control Module\",\n    \"U0407\": \"Invalid Data Received From Glow Plug Control Module\",\n    \"U0408\": \"Invalid Data Received From Throttle Actuator Control Module\",\n    \"U0409\": \"Invalid Data Received From Alternative Fuel Control Module\",\n    \"U0410\": \"Invalid Data Received From Fuel Pump Control Module\",\n    \"U0411\": \"Invalid Data Received From Drive Motor Control Module\",\n    \"U0412\": \"Invalid Data Received From Battery Energy Control Module A\",\n    \"U0413\": \"Invalid Data Received From Battery Energy Control Module B\",\n    \"U0414\": \"Invalid Data Received From Four-Wheel Drive Clutch Control Module\",\n    \"U0415\": \"Invalid Data Received From Anti-Lock Brake System Control Module\",\n    \"U0416\": \"Invalid Data Received From Vehicle Dynamics Control Module\",\n    \"U0417\": \"Invalid Data Received From Park Brake Control Module\",\n    \"U0418\": \"Invalid Data Received From Brake System Control Module\",\n    \"U0419\": \"Invalid Data Received From Steering Effort Control Module\",\n    \"U0420\": \"Invalid Data Received From Power Steering Control Module\",\n    \"U0421\": \"Invalid Data Received From Ride Level Control Module\",\n    \"U0422\": \"Invalid Data Received From Body Control Module\",\n    \"U0423\": \"Invalid Data Received From Instrument Panel Control Module\",\n    \"U0424\": \"Invalid Data Received From HVAC Control Module\",\n    \"U0425\": \"Invalid Data Received From Auxiliary Heater Control Module\",\n    \"U0426\": \"Invalid Data Received From Vehicle Immobilizer Control Module\",\n    \"U0427\": \"Invalid Data Received From Vehicle Security Control Module\",\n    \"U0428\": \"Invalid Data Received From Steering Angle Sensor Module\",\n    \"U0429\": \"Invalid Data Received From Steering Column Control Module\",\n    \"U0430\": \"Invalid Data Received From Tire Pressure Monitor Module\",\n    \"U0431\": \"Invalid Data Received From Body Control Module 'A'\",\n}\npcode_classes = {\n    \"P00XX\": \"Fuel and Air Metering and Auxiliary Emission Controls\",\n    \"P01XX\": \"Fuel and Air Merering\",\n    \"P02XX\": \"Fuel and Air Merering\",\n    \"P03XX\": \"Ignition System or Misfire\",\n    \"P04XX\": \"Auxiliary Emission Controls\",\n    \"P05XX\": \"Vehicle Speed, Idle Control, and Auxiliary Inputs\",\n    \"P06XX\": \"Computer and Auxiliary Outputs\",\n    \"P07XX\": \"Transmission\",\n    \"P08XX\": \"Transmission\",\n    \"P09XX\": \"Transmission\",\n    \"P0AXX\": \"Hybrid Propulsion\",\n    \"P10XX\": \"Manufacturer Controlled Fuel and Air Metering and Auxiliary Emission Controls\",\n    \"P11XX\": \"Manufacturer Controlled Fuel and Air Merering\",\n    \"P12XX\": \"Fuel and Air Merering\",\n    \"P13XX\": \"Ignition System or Misfire\",\n    \"P14XX\": \"Auxiliary Emission Controls\",\n    \"P15XX\": \"Vehicle Speed, Idle Control, and Auxiliary Inputs\",\n    \"P16XX\": \"Computer and Auxiliary Outputs\",\n    \"P17XX\": \"Transmission\",\n    \"P18XX\": \"Transmission\",\n    \"P19XX\": \"Transmission\",\n}\nptest = [\n    \"DTCs:\",\n    \"MIL:\",\n    \"Misfire:\",\n    \"Fuel system:\",\n    \"Components:\",\n    \"Catalyst:\",\n    \"Heated Catalyst:\",\n    \"Evaporative system:\",\n    \"Secondary Air System:\",\n    \"A/C Refrigerant:\",\n    \"Oxygen Sensor:\",\n    \"Oxygen Sensor Heater:\",\n    \"EGR SystemC7:\",\n]\n```"
    },
    {
        "readme": "# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py",
        "file_path": "obd_io.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as a file path. Please write a corresponding file sketch.\n\n---\nREADME.md\n---\n# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py\n```\n\n---\nFile Path\n---\nobd_io.py\n\n---\nFile Sketch\n---\n",
        "input": "",
        "output": "Here is a practicable file sketch.\n\n```python\nimport decimal\nimport re\nimport string\nimport time\nfrom math import ceil\nfrom pdb import set_trace as bp\nimport obd\nimport obd_sensors\nimport serial\nimport wx\nfrom obd_sensors import hex_to_int\n\n\ndef truncate(num, n):\n    pass\n\n\nGET_DTC_COMMAND = \"03\"\nCLEAR_DTC_COMMAND = \"04\"\nGET_FREEZE_DTC_COMMAND = \"07\"\nimport logging\nimport traceback\nfrom debugEvent import *\n\nlogger = logging.getLogger(__name__)\n\n\nclass OBDConnection:\n    def __init__(self, portnum, _notify_window, baud, SERTIMEOUT, RECONNATTEMPTS, FAST):\n        pass\n\n    def close(self):\n        \"\"\"Resets device and closes all associated filehandles\"\"\"\n        pass\n\n    def sensor(self, sensor_index):\n        \"\"\"Returns 3-tuple of given sensors. 3-tuple consists of\n        (Sensor Name (string), Sensor Value (string), Sensor Unit (string) )\"\"\"\n        pass\n\n    def clear_dtc(self):\n        \"\"\"Clears all DTCs and freeze frame data\"\"\"\n        pass\n\n    def log(self, sensor_index, filename):\n        pass\n```"
    },
    {
        "readme": "# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py",
        "file_path": "obd_sensors.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as a file path. Please write a corresponding file sketch.\n\n---\nREADME.md\n---\n# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py\n```\n\n---\nFile Path\n---\nobd_sensors.py\n\n---\nFile Sketch\n---\n",
        "input": "",
        "output": "Here is a practicable file sketch.\n\n```python\ndef hex_to_int(str):\n    pass\n\n\ndef maf(code):\n    pass\n\n\ndef throttle_pos(code):\n    pass\n\n\ndef intake_m_pres(code):\n    pass\n\n\ndef rpm(code):\n    pass\n\n\ndef speed(code):\n    pass\n\n\ndef percent_scale(code):\n    pass\n\n\ndef timing_advance(code):\n    pass\n\n\ndef sec_to_min(code):\n    pass\n\n\ndef temp(code):\n    pass\n\n\ndef cpass(code):\n    pass\n\n\ndef fuel_trim_percent(code):\n    pass\n\n\ndef dtc_decrypt(code):\n    pass\n\n\ndef hex_to_bitstring(str):\n    pass\n\n\nclass Sensor:\n    def __init__(self, sensorName, sensorcommand, sensorValueFunction, u):\n        pass\n\n\nSENSORS = [\n    Sensor(\"          Supported PIDs\", \"0100\", hex_to_bitstring, \"\"),\n    Sensor(\"Status Since DTC Cleared\", \"0101\", dtc_decrypt, \"\"),\n    Sensor(\"DTC Causing Freeze Frame\", \"0102\", cpass, \"\"),\n    Sensor(\"      Fuel System Status\", \"0103\", cpass, \"\"),\n    Sensor(\"   Calculated Load Value\", \"0104\", percent_scale, \"\"),\n    Sensor(\"     Coolant Temperature\", \"0105\", temp, \"C\"),\n    Sensor(\"    Short Term Fuel Trim\", \"0106\", fuel_trim_percent, \"%\"),\n    Sensor(\"     Long Term Fuel Trim\", \"0107\", fuel_trim_percent, \"%\"),\n    Sensor(\"    Short Term Fuel Trim\", \"0108\", fuel_trim_percent, \"%\"),\n    Sensor(\"     Long Term Fuel Trim\", \"0109\", fuel_trim_percent, \"%\"),\n    Sensor(\"      Fuel Rail Pressure\", \"010A\", cpass, \"\"),\n    Sensor(\"Intake Manifold Pressure\", \"010B\", intake_m_pres, \"psi\"),\n    Sensor(\"              Engine RPM\", \"010C\", rpm, \"\"),\n    Sensor(\"           Vehicle Speed\", \"010D\", speed, \"MPH\"),\n    Sensor(\"          Timing Advance\", \"010E\", timing_advance, \"degrees\"),\n    Sensor(\"         Intake Air Temp\", \"010F\", temp, \"C\"),\n    Sensor(\"     Air Flow Rate (MAF)\", \"0110\", maf, \"lb/min\"),\n    Sensor(\"       Throttle Position\", \"0111\", throttle_pos, \"%\"),\n    Sensor(\"    Secondary Air Status\", \"0112\", cpass, \"\"),\n    Sensor(\"  Location of O2 sensors\", \"0113\", cpass, \"\"),\n    Sensor(\"        O2 Sensor: 1 - 1\", \"0114\", fuel_trim_percent, \"%\"),\n    Sensor(\"        O2 Sensor: 1 - 2\", \"0115\", fuel_trim_percent, \"%\"),\n    Sensor(\"        O2 Sensor: 1 - 3\", \"0116\", fuel_trim_percent, \"%\"),\n    Sensor(\"        O2 Sensor: 1 - 4\", \"0117\", fuel_trim_percent, \"%\"),\n    Sensor(\"        O2 Sensor: 2 - 1\", \"0118\", fuel_trim_percent, \"%\"),\n    Sensor(\"        O2 Sensor: 2 - 2\", \"0119\", fuel_trim_percent, \"%\"),\n    Sensor(\"        O2 Sensor: 2 - 3\", \"011A\", fuel_trim_percent, \"%\"),\n    Sensor(\"        O2 Sensor: 2 - 4\", \"011B\", fuel_trim_percent, \"%\"),\n    Sensor(\"         OBD Designation\", \"011C\", cpass, \"\"),\n    Sensor(\"  Location of O2 sensors\", \"011D\", cpass, \"\"),\n    Sensor(\"        Aux input status\", \"011E\", cpass, \"\"),\n    Sensor(\" Time Since Engine Start\", \"011F\", sec_to_min, \"min\"),\n    Sensor(\"  Engine Run with MIL on\", \"014E\", sec_to_min, \"min\"),\n]\n\n\ndef test():\n    pass\n\n\nif __name__ == \"__main__\":\n    test()\n```"
    },
    {
        "readme": "# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py",
        "file_path": "pyobd.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as a file path. Please write a corresponding file sketch.\n\n---\nREADME.md\n---\n# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py\n```\n\n---\nFile Path\n---\npyobd.py\n\n---\nFile Sketch\n---\n",
        "input": "",
        "output": "Here is a practicable file sketch.\n\n```python\nimport configparser\nimport datetime\nimport gc\nimport os\nimport sys\nimport threading\nimport time\nimport traceback\nimport webbrowser\nimport numpy as np\nimport obd\nimport obd_io\nimport serial\nimport wx\nfrom obd2_codes import pcodes\nfrom obd.utils import OBDStatus\nfrom wx.lib import plot as wxplot\nfrom wx.lib.mixins.listctrl import ListCtrlAutoWidthMixin\n\nID_ABOUT = 101\nID_EXIT = 110\nID_CONFIG = 500\nID_CLEAR = 501\nID_GETC = 502\nID_RESET = 503\nID_LOOK = 504\nALL_ON = 505\nALL_OFF = 506\nID_DISCONNECT = 507\nID_HELP_ABOUT = 508\nID_HELP_VISIT = 509\nID_HELP_ORDER = 510\nEVT_RESULT_ID = 1000\nEVT_GRAPH_VALUE_ID = 1036\nEVT_GRAPHS_VALUE_ID = 1048\nEVT_GRAPH_ID = 1035\nEVT_GRAPHS_ID = 1049\nEVT_COMBOBOX = 1036\nEVT_CLOSE_ID = 1037\nEVT_BUILD_COMBOBOXGRAPH_ID = 1038\nEVT_BUILD_COMBOBOXGRAPHS_ID = 1045\nEVT_DESTROY_COMBOBOX_ID = 1039\nEVT_COMBOBOXGRAPH_GETSELECTION_ID = 1040\nEVT_COMBOBOXGRAPHS_GETSELECTION_ID = 1046\nEVT_COMBOBOXGRAPH_SETSELECTION_ID = 1044\nEVT_COMBOBOXGRAPHS_SETSELECTION_ID = 1047\nEVT_INSERT_SENSOR_ROW_ID = 1041\nEVT_INSERT_FREEZEFRAME_ROW_ID = 1042\nEVT_FREEZEFRAME_RESULT_ID = 1043\nlock = threading.Lock()\n\n\ndef resource_path(relative_path):\n    \"\"\"Get absolute path to resource, works for dev and for PyInstaller\"\"\"\n    pass\n\n\nTESTS = [\n    \"MISFIRE_MONITORING\",\n    \"FUEL_SYSTEM_MONITORING\",\n    \"COMPONENT_MONITORING\",\n    \"CATALYST_MONITORING\",\n    \"HEATED_CATALYST_MONITORING\",\n    \"EVAPORATIVE_SYSTEM_MONITORING\",\n    \"SECONDARY_AIR_SYSTEM_MONITORING\",\n    \"OXYGEN_SENSOR_MONITORING\",\n    \"OXYGEN_SENSOR_HEATER_MONITORING\",\n    \"EGR_VVT_SYSTEM_MONITORING\",\n    \"NMHC_CATALYST_MONITORING\",\n    \"NOX_SCR_AFTERTREATMENT_MONITORING\",\n    \"BOOST_PRESSURE_MONITORING\",\n    \"EXHAUST_GAS_SENSOR_MONITORING\",\n    \"PM_FILTER_MONITORING\",\n]\n\n\ndef EVT_RESULT(win, func, id):\n    \"\"\"Define Result Event.\"\"\"\n    pass\n\n\n\"\"\"\nclass MyPanel(wx.Panel):\n    def __init__(self, parent):\n        super(MyPanel, self).__init__(parent)\n\n        self.label = wx.StaticText(self, label=\"What Programming Language You Like?\", pos=(50, 30))\n\n        languages = ['Java', 'C++', 'C#', 'Python', 'Erlang', 'PHP', 'Ruby']\n        self.combobox = wx.ComboBox(self, choices=languages, pos=(50, 50))\n\n        self.label2 = wx.StaticText(self, label=\"\", pos=(50, 80))\n\n        self.Bind(wx.EVT_COMBOBOX, self.OnCombo)\n\n    def OnCombo(self, event):\n        self.label2.SetLabel(\"You Like \" + self.combobox.GetValue())\n\"\"\"\n\n\nclass ResultEvent(wx.PyEvent):\n    \"\"\"Simple event to carry arbitrary result data.\"\"\"\n\n    def __init__(self, data):\n        \"\"\"Init Result Event.\"\"\"\n        pass\n\n\nclass FreezeframeResultEvent(wx.PyEvent):\n    \"\"\"Simple event to carry arbitrary result data.\"\"\"\n\n    def __init__(self, data):\n        \"\"\"Init Result Event.\"\"\"\n        pass\n\n\nclass InsertSensorRowEvent(wx.PyEvent):\n    \"\"\"Simple event to carry arbitrary result data.\"\"\"\n\n    def __init__(self, data):\n        \"\"\"Init Result Event.\"\"\"\n        pass\n\n\nclass InsertFreezeframeRowEvent(wx.PyEvent):\n    \"\"\"Simple event to carry arbitrary result data.\"\"\"\n\n    def __init__(self, data):\n        \"\"\"Init Result Event.\"\"\"\n        pass\n\n\nclass BuildComboBoxGraphEvent(wx.PyEvent):\n    \"\"\"Simple event to carry arbitrary result data.\"\"\"\n\n    def __init__(self, data):\n        \"\"\"Init Result Event.\"\"\"\n        pass\n\n\nclass BuildComboBoxGraphsEvent(wx.PyEvent):\n    \"\"\"Simple event to carry arbitrary result data.\"\"\"\n\n    def __init__(self, data):\n        \"\"\"Init Result Event.\"\"\"\n        pass\n\n\nclass DestroyComboBoxEvent(wx.PyEvent):\n    \"\"\"Simple event to carry arbitrary result data.\"\"\"\n\n    def __init__(self, data):\n        \"\"\"Init Result Event.\"\"\"\n        pass\n\n\nclass GetSelectionComboBoxGraphEvent(wx.PyEvent):\n    \"\"\"Simple event to carry arbitrary result data.\"\"\"\n\n    def __init__(self, data):\n        \"\"\"Init Result Event.\"\"\"\n        pass\n\n\nclass GetSelectionComboBoxGraphsEvent(wx.PyEvent):\n    \"\"\"Simple event to carry arbitrary result data.\"\"\"\n\n    def __init__(self, data):\n        \"\"\"Init Result Event.\"\"\"\n        pass\n\n\nclass SetSelectionComboBoxGraphEvent(wx.PyEvent):\n    \"\"\"Simple event to carry arbitrary result data.\"\"\"\n\n    def __init__(self, data):\n        \"\"\"Init Result Event.\"\"\"\n        pass\n\n\nclass SetSelectionComboBoxGraphsEvent(wx.PyEvent):\n    \"\"\"Simple event to carry arbitrary result data.\"\"\"\n\n    def __init__(self, data):\n        \"\"\"Init Result Event.\"\"\"\n        pass\n\n\nclass GraphValueEvent(wx.PyEvent):\n    \"\"\"Simple event to carry arbitrary result data.\"\"\"\n\n    def __init__(self, data):\n        \"\"\"Init Result Event.\"\"\"\n        pass\n\n\nclass GraphsValueEvent(wx.PyEvent):\n    \"\"\"Simple event to carry arbitrary result data.\"\"\"\n\n    def __init__(self, data):\n        \"\"\"Init Result Event.\"\"\"\n        pass\n\n\nclass GraphEvent(wx.PyEvent):\n    \"\"\"Simple event to carry arbitrary result data.\"\"\"\n\n    def __init__(self, data):\n        \"\"\"Init Result Event.\"\"\"\n        pass\n\n\nclass GraphsEvent(wx.PyEvent):\n    \"\"\"Simple event to carry arbitrary result data.\"\"\"\n\n    def __init__(self, data):\n        \"\"\"Init Result Event.\"\"\"\n        pass\n\n\nEVT_DTC_ID = 1001\n\n\nclass DTCEvent(wx.PyEvent):\n    \"\"\"Simple event to carry arbitrary result data.\"\"\"\n\n    def __init__(self, data):\n        \"\"\"Init Result Event.\"\"\"\n        pass\n\n\nEVT_STATUS_ID = 1002\n\n\nclass StatusEvent(wx.PyEvent):\n    \"\"\"Simple event to carry arbitrary result data.\"\"\"\n\n    def __init__(self, data):\n        \"\"\"Init Result Event.\"\"\"\n        pass\n\n\nclass CloseEvent(wx.PyEvent):\n    \"\"\"Simple event to carry arbitrary result data.\"\"\"\n\n    def __init__(self, data):\n        \"\"\"Init Result Event.\"\"\"\n        pass\n\n\nEVT_TESTS_ID = 1003\n\n\nclass TestEvent(wx.PyEvent):\n    \"\"\"Simple event to carry arbitrary result data.\"\"\"\n\n    def __init__(self, data):\n        \"\"\"Init Result Event.\"\"\"\n        pass\n\n\nfrom debugEvent import *\n\n\nclass MyApp(wx.App):\n    class MyListCtrl(wx.ListCtrl, ListCtrlAutoWidthMixin):\n        def __init__(\n            self, parent, id, pos=wx.DefaultPosition, size=wx.DefaultSize, style=0\n        ):\n            pass\n\n    class sensorProducer(threading.Thread):\n        def __init__(\n            self,\n            _notify_window,\n            portName,\n            SERTIMEOUT,\n            RECONNATTEMPTS,\n            BAUDRATE,\n            FAST,\n            _nb,\n        ):\n            pass\n\n        def initCommunication(self):\n            pass\n\n        def run(self):\n            pass\n\n        \"\"\"\n        def off(self, id):\n            if id >= 0 and id < len(self.active): \n                self.active[id] = 0\n            else:\n                debug(\"Invalid sensor id\")\n        def on(self, id):\n            if id >= 0 and id < len(self.active): \n                self.active[id] = 1\n            else:\n                debug(\"Invalid sensor id\")\n\n        def all_off(self):\n            for i in range(0, len(self.active)):\n                self.off(i)\n        def all_on(self):\n            for i in range(0, len(self.active)):\n                self.off(i)\n        \"\"\"\n\n        def stop(self):\n            pass\n\n    def sensor_control_on(self):\n        pass\n\n    def sensor_control_off(self):\n        pass\n\n    def build_sensor_page(self):\n        pass\n\n    def build_graph_page(self):\n        pass\n\n    def build_graphs_page(self):\n        pass\n\n    def build_freezeframe_page(self):\n        pass\n\n    def build_DTC_page(self):\n        pass\n\n    def TraceDebug(self, level, msg):\n        pass\n\n    def OnInit(self):\n        pass\n\n    def OnHelpVisit(self, event):\n        pass\n\n    def OnHelpOrder(self, event):\n        pass\n\n    def OnHelpAbout(self, event):\n        pass\n\n    def OnResult(self, event):\n        pass\n\n    def OnFreezeframeResult(self, event):\n        pass\n\n    def OnStatus(self, event):\n        pass\n\n    def OnTests(self, event):\n        pass\n\n    \"\"\"\n    def OnCombo(self, event):\n        self.curr_selection1 = self.combobox1.GetSelection()\n        self.curr_selection2 = self.combobox2.GetSelection()\n        self.curr_selection3 = self.combobox3.GetSelection()\n        self.curr_selection4 = self.combobox4.GetSelection()\n    \"\"\"\n\n    def InsertSensorRow(self, event):\n        pass\n\n    def InsertFreezeframeRow(self, event):\n        pass\n\n    def BuildComboBoxGraph(self, event):\n        pass\n\n    def BuildComboBoxGraphs(self, event):\n        pass\n\n    def DestroyComboBox(self, event):\n        pass\n\n    def GetSelectionGraphComboBox(self, event):\n        pass\n\n    def GetSelectionGraphsComboBox(self, event):\n        pass\n\n    def SetSelectionGraphComboBox(self, event):\n        pass\n\n    def SetSelectionGraphsComboBox(self, event):\n        pass\n\n    def OnClose(self, event):\n        pass\n\n    def OnGraph(self, event):\n        pass\n\n    def OnGraphs(self, event):\n        pass\n\n    def OnGraphValue(self, event):\n        pass\n\n    def OnGraphsValue(self, event):\n        pass\n\n    def OnDebug(self, event):\n        pass\n\n    def OnDtc(self, event):\n        pass\n\n    def OnDisconnect(self, event):\n        pass\n\n    def OpenPort(self, e):\n        pass\n\n    def GetDTC(self, e):\n        pass\n\n    def AddDTC(self, code):\n        pass\n\n    def CodeLookup(self, e=None):\n        pass\n\n    def QueryClear(self, e):\n        pass\n\n    def ClearDTC(self):\n        pass\n\n    def try_port(self, portStr):\n        \"\"\"returns boolean for port availability\"\"\"\n        pass\n\n    def scanSerial(self):\n        \"\"\"scan for available ports. return a list of serial names\"\"\"\n        pass\n\n    def Configure(self, e=None):\n        pass\n\n    def OnExit(self, e=None):\n        pass\n\n\napp = MyApp(0)\napp.MainLoop()\n```"
    },
    {
        "readme": "# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py",
        "file_path": "obd/OBDCommand.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as a file path. Please write a corresponding file sketch.\n\n---\nREADME.md\n---\n# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py\n```\n\n---\nFile Path\n---\nobd/OBDCommand.py\n\n---\nFile Sketch\n---\n",
        "input": "",
        "output": "Here is a practicable file sketch.\n\n```python\nimport logging\nfrom .OBDResponse import OBDResponse\nfrom .protocols import ECU, ECU_HEADER\nfrom .utils import *\n\nlogger = logging.getLogger(__name__)\n\n\nclass OBDCommand:\n    def __init__(\n        self,\n        name,\n        desc,\n        command,\n        _bytes,\n        decoder,\n        ecu=ECU.ALL,\n        fast=False,\n        header=ECU_HEADER.ENGINE,\n    ):\n        pass\n\n    def clone(self):\n        pass\n\n    @property\n    def mode(self):\n        pass\n\n    @property\n    def pid(self):\n        pass\n\n    def __call__(self, messages):\n        pass\n\n    def __constrain_message_data(self, message):\n        \"\"\"pads or chops the data field to the size specified by this command\"\"\"\n        pass\n\n    def __str__(self):\n        pass\n\n    def __repr__(self):\n        pass\n\n    def __hash__(self):\n        pass\n\n    def __eq__(self, other):\n        pass\n```"
    },
    {
        "readme": "# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py",
        "file_path": "obd/OBDResponse.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as a file path. Please write a corresponding file sketch.\n\n---\nREADME.md\n---\n# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py\n```\n\n---\nFile Path\n---\nobd/OBDResponse.py\n\n---\nFile Sketch\n---\n",
        "input": "",
        "output": "Here is a practicable file sketch.\n\n```python\nimport logging\nimport sys\nimport time\nfrom .codes import *\n\nlogger = logging.getLogger(__name__)\nif sys.version[0] < \"3\":\n    string_types = str, unicode\nelse:\n    string_types = (str,)\n\n\nclass OBDResponse:\n    \"\"\"Standard response object for any OBDCommand\"\"\"\n\n    def __init__(self, command=None, messages=None):\n        pass\n\n    @property\n    def unit(self):\n        pass\n\n    def is_null(self):\n        pass\n\n    def __str__(self):\n        pass\n\n\n\"\"\"\n    Special value types used in OBDResponses\n    instantiated in decoders.py\n\"\"\"\n\n\nclass Status:\n    def __init__(self):\n        pass\n\n\nclass StatusTest:\n    def __init__(self, name=\"\", available=False, complete=False):\n        pass\n\n    def __str__(self):\n        pass\n\n\nclass Monitor:\n    def __init__(self):\n        pass\n\n    def add_test(self, test):\n        pass\n\n    @property\n    def tests(self):\n        pass\n\n    def __str__(self):\n        pass\n\n    def __len__(self):\n        pass\n\n    def __getitem__(self, key):\n        pass\n\n\nclass MonitorTest:\n    def __init__(self):\n        pass\n\n    @property\n    def passed(self):\n        pass\n\n    def is_null(self):\n        pass\n\n    def __str__(self):\n        pass\n```"
    },
    {
        "readme": "# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py",
        "file_path": "obd/UnitsAndScaling.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as a file path. Please write a corresponding file sketch.\n\n---\nREADME.md\n---\n# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py\n```\n\n---\nFile Path\n---\nobd/UnitsAndScaling.py\n\n---\nFile Sketch\n---\n",
        "input": "",
        "output": "Here is a practicable file sketch.\n\n```python\nimport pint\nfrom .utils import *\n\nUnit = pint.UnitRegistry()\nUnit.define(\"percent = [] = %\")\nUnit.define(\"ratio = []\")\nUnit.define(\"gps = gram / second = GPS = grams_per_second\")\nUnit.define(\"lph = liter / hour = LPH = liters_per_hour\")\nUnit.define(\"ppm = count / 1000000 = PPM = parts_per_million\")\n\n\nclass UAS:\n    \"\"\"\n    Class for representing a Unit and Scale conversion\n    Used in the decoding of Mode 06 monitor responses\n    \"\"\"\n\n    def __init__(self, signed, scale, unit, offset=0.0):\n        pass\n\n    def __call__(self, _bytes):\n        pass\n\n\nUAS_IDS = {\n    (1): UAS(False, 1, Unit.count),\n    (2): UAS(False, 0.1, Unit.count),\n    (3): UAS(False, 0.01, Unit.count),\n    (4): UAS(False, 0.001, Unit.count),\n    (5): UAS(False, 3.05e-05, Unit.count),\n    (6): UAS(False, 0.000305, Unit.count),\n    (7): UAS(False, 0.25, Unit.rpm),\n    (8): UAS(False, 0.01, Unit.kph),\n    (9): UAS(False, 1, Unit.kph),\n    (10): UAS(False, 0.122, Unit.millivolt),\n    (11): UAS(False, 0.001, Unit.volt),\n    (12): UAS(False, 0.01, Unit.volt),\n    (13): UAS(False, 0.00390625, Unit.milliampere),\n    (14): UAS(False, 0.001, Unit.ampere),\n    (15): UAS(False, 0.01, Unit.ampere),\n    (16): UAS(False, 1, Unit.millisecond),\n    (17): UAS(False, 100, Unit.millisecond),\n    (18): UAS(False, 1, Unit.second),\n    (19): UAS(False, 1, Unit.milliohm),\n    (20): UAS(False, 1, Unit.ohm),\n    (21): UAS(False, 1, Unit.kiloohm),\n    (22): UAS(False, 0.1, Unit.celsius, offset=-40.0),\n    (23): UAS(False, 0.01, Unit.kilopascal),\n    (24): UAS(False, 0.0117, Unit.kilopascal),\n    (25): UAS(False, 0.079, Unit.kilopascal),\n    (26): UAS(False, 1, Unit.kilopascal),\n    (27): UAS(False, 10, Unit.kilopascal),\n    (28): UAS(False, 0.01, Unit.degree),\n    (29): UAS(False, 0.5, Unit.degree),\n    (30): UAS(False, 3.05e-05, Unit.ratio),\n    (31): UAS(False, 0.05, Unit.ratio),\n    (32): UAS(False, 0.00390625, Unit.ratio),\n    (33): UAS(False, 1, Unit.millihertz),\n    (34): UAS(False, 1, Unit.hertz),\n    (35): UAS(False, 1, Unit.kilohertz),\n    (36): UAS(False, 1, Unit.count),\n    (37): UAS(False, 1, Unit.kilometer),\n    (38): UAS(False, 0.1, Unit.millivolt / Unit.millisecond),\n    (39): UAS(False, 0.01, Unit.grams_per_second),\n    (40): UAS(False, 1, Unit.grams_per_second),\n    (41): UAS(False, 0.25, Unit.pascal / Unit.second),\n    (42): UAS(False, 0.001, Unit.kilogram / Unit.hour),\n    (43): UAS(False, 1, Unit.count),\n    (44): UAS(False, 0.01, Unit.gram),\n    (45): UAS(False, 0.01, Unit.milligram),\n    (46): lambda _bytes: any([bool(x) for x in _bytes]),\n    (47): UAS(False, 0.01, Unit.percent),\n    (48): UAS(False, 0.001526, Unit.percent),\n    (49): UAS(False, 0.001, Unit.liter),\n    (50): UAS(False, 3.05e-05, Unit.inch),\n    (51): UAS(False, 0.00024414, Unit.ratio),\n    (52): UAS(False, 1, Unit.minute),\n    (53): UAS(False, 10, Unit.millisecond),\n    (54): UAS(False, 0.01, Unit.gram),\n    (55): UAS(False, 0.1, Unit.gram),\n    (56): UAS(False, 1, Unit.gram),\n    (57): UAS(False, 0.01, Unit.percent, offset=-327.68),\n    (58): UAS(False, 0.001, Unit.gram),\n    (59): UAS(False, 0.0001, Unit.gram),\n    (60): UAS(False, 0.1, Unit.microsecond),\n    (61): UAS(False, 0.01, Unit.milliampere),\n    (62): UAS(False, 6.103516e-05, Unit.millimeter**2),\n    (63): UAS(False, 0.01, Unit.liter),\n    (64): UAS(False, 1, Unit.ppm),\n    (65): UAS(False, 0.01, Unit.microampere),\n    (129): UAS(True, 1, Unit.count),\n    (130): UAS(True, 0.1, Unit.count),\n    (131): UAS(True, 0.01, Unit.count),\n    (132): UAS(True, 0.001, Unit.count),\n    (133): UAS(True, 3.05e-05, Unit.count),\n    (134): UAS(True, 0.000305, Unit.count),\n    (135): UAS(True, 1, Unit.ppm),\n    (138): UAS(True, 0.122, Unit.millivolt),\n    (139): UAS(True, 0.001, Unit.volt),\n    (140): UAS(True, 0.01, Unit.volt),\n    (141): UAS(True, 0.00390625, Unit.milliampere),\n    (142): UAS(True, 0.001, Unit.ampere),\n    (144): UAS(True, 1, Unit.millisecond),\n    (150): UAS(True, 0.1, Unit.celsius),\n    (153): UAS(True, 0.1, Unit.kilopascal),\n    (156): UAS(True, 0.01, Unit.degree),\n    (157): UAS(True, 0.5, Unit.degree),\n    (168): UAS(True, 1, Unit.grams_per_second),\n    (169): UAS(True, 0.25, Unit.pascal / Unit.second),\n    (173): UAS(True, 0.01, Unit.milligram),\n    (174): UAS(True, 0.1, Unit.milligram),\n    (175): UAS(True, 0.01, Unit.percent),\n    (176): UAS(True, 0.003052, Unit.percent),\n    (177): UAS(True, 2, Unit.millivolt / Unit.second),\n    (252): UAS(True, 0.01, Unit.kilopascal),\n    (253): UAS(True, 0.001, Unit.kilopascal),\n    (254): UAS(True, 0.25, Unit.pascal),\n}\n```"
    },
    {
        "readme": "# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py",
        "file_path": "obd/__init__.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as a file path. Please write a corresponding file sketch.\n\n---\nREADME.md\n---\n# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py\n```\n\n---\nFile Path\n---\nobd/__init__.py\n\n---\nFile Sketch\n---\n",
        "input": "",
        "output": "Here is a practicable file sketch.\n\n```python\n\"\"\"\n\tA serial module for accessing data from a vehicles OBD-II port\n\n\tFor more documentation, visit:\n\thttp://python-obd.readthedocs.org/en/latest/\n\"\"\"\nimport logging\nfrom .__version__ import __version__\nfrom .asynchronous import Async\nfrom .commands import commands\nfrom .obd import OBD\nfrom .OBDCommand import OBDCommand\nfrom .OBDResponse import OBDResponse\nfrom .protocols import ECU\nfrom .UnitsAndScaling import Unit\nfrom .utils import OBDStatus, scan_serial\n\nlogger = logging.getLogger(__name__)\nlogger.setLevel(logging.WARNING)\nconsole_handler = logging.StreamHandler()\nconsole_handler.setFormatter(logging.Formatter(\"[%(name)s] %(message)s\"))\nlogger.addHandler(console_handler)\n```"
    },
    {
        "readme": "# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py",
        "file_path": "obd/__version__.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as a file path. Please write a corresponding file sketch.\n\n---\nREADME.md\n---\n# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py\n```\n\n---\nFile Path\n---\nobd/__version__.py\n\n---\nFile Sketch\n---\n",
        "input": "",
        "output": "Here is a practicable file sketch.\n\n```python\n__version__ = \"0.7.1\"\n```"
    },
    {
        "readme": "# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py",
        "file_path": "obd/asynchronous.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as a file path. Please write a corresponding file sketch.\n\n---\nREADME.md\n---\n# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py\n```\n\n---\nFile Path\n---\nobd/asynchronous.py\n\n---\nFile Sketch\n---\n",
        "input": "",
        "output": "Here is a practicable file sketch.\n\n```python\nimport logging\nimport threading\nimport time\nfrom .obd import OBD\nfrom .OBDResponse import OBDResponse\n\nlogger = logging.getLogger(__name__)\n\n\nclass Async(OBD):\n    \"\"\"\n    Class representing an OBD-II connection with it's assorted commands/sensors\n    Specialized for asynchronous value reporting.\n    \"\"\"\n\n    def __init__(\n        self,\n        portstr=None,\n        baudrate=None,\n        protocol=None,\n        fast=True,\n        timeout=0.1,\n        check_voltage=True,\n        start_low_power=False,\n        delay_cmds=0.25,\n    ):\n        pass\n\n    @property\n    def running(self):\n        pass\n\n    def start(self):\n        \"\"\"Starts the async update loop\"\"\"\n        pass\n\n    def stop(self):\n        \"\"\"Stops the async update loop\"\"\"\n        pass\n\n    def paused(self):\n        \"\"\"\n        A stub function for semantic purposes only\n        enables code such as:\n\n        with connection.paused() as was_running\n            ...\n        \"\"\"\n        pass\n\n    def __enter__(self):\n        \"\"\"\n        pauses the async loop,\n        while recording the old state\n        \"\"\"\n        pass\n\n    def __exit__(self, exc_type, exc_value, traceback):\n        \"\"\"\n        resumes the update loop if it was running\n        when __enter__ was called\n        \"\"\"\n        pass\n\n    def close(self):\n        \"\"\"Closes the connection\"\"\"\n        pass\n\n    def watch(self, c, callback=None, force=False):\n        \"\"\"\n        Subscribes the given command for continuous updating. Once subscribed,\n        query() will return that command's latest value. Optional callbacks can\n        be given, which will be fired upon every new value.\n        \"\"\"\n        pass\n\n    def unwatch(self, c, callback=None):\n        \"\"\"\n        Unsubscribes a specific command (and optionally, a specific callback)\n        from being updated. If no callback is specified, all callbacks for\n        that command are dropped.\n        \"\"\"\n        pass\n\n    def unwatch_all(self):\n        \"\"\"Unsubscribes all commands and callbacks from being updated\"\"\"\n        pass\n\n    def query(self, c, force=False):\n        \"\"\"\n        Non-blocking query().\n        Only commands that have been watch()ed will return valid responses\n        \"\"\"\n        pass\n\n    def run(self):\n        \"\"\"Daemon thread\"\"\"\n        pass\n```"
    },
    {
        "readme": "# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py",
        "file_path": "obd/codes.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as a file path. Please write a corresponding file sketch.\n\n---\nREADME.md\n---\n# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py\n```\n\n---\nFile Path\n---\nobd/codes.py\n\n---\nFile Sketch\n---\n",
        "input": "",
        "output": "Here is a practicable file sketch.\n\n```python\nDTC = {\n    \"P0001\": \"Fuel Volume Regulator Control Circuit/Open\",\n    \"P0002\": \"Fuel Volume Regulator Control Circuit Range/Performance\",\n    \"P0003\": \"Fuel Volume Regulator Control Circuit Low\",\n    \"P0004\": \"Fuel Volume Regulator Control Circuit High\",\n    \"P0005\": \"Fuel Shutoff Valve 'A' Control Circuit/Open\",\n    \"P0006\": \"Fuel Shutoff Valve 'A' Control Circuit Low\",\n    \"P0007\": \"Fuel Shutoff Valve 'A' Control Circuit High\",\n    \"P0008\": \"Engine Position System Performance\",\n    \"P0009\": \"Engine Position System Performance\",\n    \"P0010\": \"'A' Camshaft Position Actuator Circuit\",\n    \"P0011\": \"'A' Camshaft Position - Timing Over-Advanced or System Performance\",\n    \"P0012\": \"'A' Camshaft Position - Timing Over-Retarded\",\n    \"P0013\": \"'B' Camshaft Position - Actuator Circuit\",\n    \"P0014\": \"'B' Camshaft Position - Timing Over-Advanced or System Performance\",\n    \"P0015\": \"'B' Camshaft Position - Timing Over-Retarded\",\n    \"P0016\": \"Crankshaft Position - Camshaft Position Correlation\",\n    \"P0017\": \"Crankshaft Position - Camshaft Position Correlation\",\n    \"P0018\": \"Crankshaft Position - Camshaft Position Correlation\",\n    \"P0019\": \"Crankshaft Position - Camshaft Position Correlation\",\n    \"P0020\": \"'A' Camshaft Position Actuator Circuit\",\n    \"P0021\": \"'A' Camshaft Position - Timing Over-Advanced or System Performance\",\n    \"P0022\": \"'A' Camshaft Position - Timing Over-Retarded\",\n    \"P0023\": \"'B' Camshaft Position - Actuator Circuit\",\n    \"P0024\": \"'B' Camshaft Position - Timing Over-Advanced or System Performance\",\n    \"P0025\": \"'B' Camshaft Position - Timing Over-Retarded\",\n    \"P0026\": \"Intake Valve Control Solenoid Circuit Range/Performance\",\n    \"P0027\": \"Exhaust Valve Control Solenoid Circuit Range/Performance\",\n    \"P0028\": \"Intake Valve Control Solenoid Circuit Range/Performance\",\n    \"P0029\": \"Exhaust Valve Control Solenoid Circuit Range/Performance\",\n    \"P0030\": \"HO2S Heater Control Circuit\",\n    \"P0031\": \"HO2S Heater Control Circuit Low\",\n    \"P0032\": \"HO2S Heater Control Circuit High\",\n    \"P0033\": \"Turbo Charger Bypass Valve Control Circuit\",\n    \"P0034\": \"Turbo Charger Bypass Valve Control Circuit Low\",\n    \"P0035\": \"Turbo Charger Bypass Valve Control Circuit High\",\n    \"P0036\": \"HO2S Heater Control Circuit\",\n    \"P0037\": \"HO2S Heater Control Circuit Low\",\n    \"P0038\": \"HO2S Heater Control Circuit High\",\n    \"P0039\": \"Turbo/Super Charger Bypass Valve Control Circuit Range/Performance\",\n    \"P0040\": \"O2 Sensor Signals Swapped Bank 1 Sensor 1/ Bank 2 Sensor 1\",\n    \"P0041\": \"O2 Sensor Signals Swapped Bank 1 Sensor 2/ Bank 2 Sensor 2\",\n    \"P0042\": \"HO2S Heater Control Circuit\",\n    \"P0043\": \"HO2S Heater Control Circuit Low\",\n    \"P0044\": \"HO2S Heater Control Circuit High\",\n    \"P0045\": \"Turbo/Super Charger Boost Control Solenoid Circuit/Open\",\n    \"P0046\": \"Turbo/Super Charger Boost Control Solenoid Circuit Range/Performance\",\n    \"P0047\": \"Turbo/Super Charger Boost Control Solenoid Circuit Low\",\n    \"P0048\": \"Turbo/Super Charger Boost Control Solenoid Circuit High\",\n    \"P0049\": \"Turbo/Super Charger Turbine Overspeed\",\n    \"P0050\": \"HO2S Heater Control Circuit\",\n    \"P0051\": \"HO2S Heater Control Circuit Low\",\n    \"P0052\": \"HO2S Heater Control Circuit High\",\n    \"P0053\": \"HO2S Heater Resistance\",\n    \"P0054\": \"HO2S Heater Resistance\",\n    \"P0055\": \"HO2S Heater Resistance\",\n    \"P0056\": \"HO2S Heater Control Circuit\",\n    \"P0057\": \"HO2S Heater Control Circuit Low\",\n    \"P0058\": \"HO2S Heater Control Circuit High\",\n    \"P0059\": \"HO2S Heater Resistance\",\n    \"P0060\": \"HO2S Heater Resistance\",\n    \"P0061\": \"HO2S Heater Resistance\",\n    \"P0062\": \"HO2S Heater Control Circuit\",\n    \"P0063\": \"HO2S Heater Control Circuit Low\",\n    \"P0064\": \"HO2S Heater Control Circuit High\",\n    \"P0065\": \"Air Assisted Injector Control Range/Performance\",\n    \"P0066\": \"Air Assisted Injector Control Circuit or Circuit Low\",\n    \"P0067\": \"Air Assisted Injector Control Circuit High\",\n    \"P0068\": \"MAP/MAF - Throttle Position Correlation\",\n    \"P0069\": \"Manifold Absolute Pressure - Barometric Pressure Correlation\",\n    \"P0070\": \"Ambient Air Temperature Sensor Circuit\",\n    \"P0071\": \"Ambient Air Temperature Sensor Range/Performance\",\n    \"P0072\": \"Ambient Air Temperature Sensor Circuit Low\",\n    \"P0073\": \"Ambient Air Temperature Sensor Circuit High\",\n    \"P0074\": \"Ambient Air Temperature Sensor Circuit Intermittent\",\n    \"P0075\": \"Intake Valve Control Solenoid Circuit\",\n    \"P0076\": \"Intake Valve Control Solenoid Circuit Low\",\n    \"P0077\": \"Intake Valve Control Solenoid Circuit High\",\n    \"P0078\": \"Exhaust Valve Control Solenoid Circuit\",\n    \"P0079\": \"Exhaust Valve Control Solenoid Circuit Low\",\n    \"P0080\": \"Exhaust Valve Control Solenoid Circuit High\",\n    \"P0081\": \"Intake Valve Control Solenoid Circuit\",\n    \"P0082\": \"Intake Valve Control Solenoid Circuit Low\",\n    \"P0083\": \"Intake Valve Control Solenoid Circuit High\",\n    \"P0084\": \"Exhaust Valve Control Solenoid Circuit\",\n    \"P0085\": \"Exhaust Valve Control Solenoid Circuit Low\",\n    \"P0086\": \"Exhaust Valve Control Solenoid Circuit High\",\n    \"P0087\": \"Fuel Rail/System Pressure - Too Low\",\n    \"P0088\": \"Fuel Rail/System Pressure - Too High\",\n    \"P0089\": \"Fuel Pressure Regulator 1 Performance\",\n    \"P0090\": \"Fuel Pressure Regulator 1 Control Circuit\",\n    \"P0091\": \"Fuel Pressure Regulator 1 Control Circuit Low\",\n    \"P0092\": \"Fuel Pressure Regulator 1 Control Circuit High\",\n    \"P0093\": \"Fuel System Leak Detected - Large Leak\",\n    \"P0094\": \"Fuel System Leak Detected - Small Leak\",\n    \"P0095\": \"Intake Air Temperature Sensor 2 Circuit\",\n    \"P0096\": \"Intake Air Temperature Sensor 2 Circuit Range/Performance\",\n    \"P0097\": \"Intake Air Temperature Sensor 2 Circuit Low\",\n    \"P0098\": \"Intake Air Temperature Sensor 2 Circuit High\",\n    \"P0099\": \"Intake Air Temperature Sensor 2 Circuit Intermittent/Erratic\",\n    \"P0100\": \"Mass or Volume Air Flow Circuit\",\n    \"P0101\": \"Mass or Volume Air Flow Circuit Range/Performance\",\n    \"P0102\": \"Mass or Volume Air Flow Circuit Low Input\",\n    \"P0103\": \"Mass or Volume Air Flow Circuit High Input\",\n    \"P0104\": \"Mass or Volume Air Flow Circuit Intermittent\",\n    \"P0105\": \"Manifold Absolute Pressure/Barometric Pressure Circuit\",\n    \"P0106\": \"Manifold Absolute Pressure/Barometric Pressure Circuit Range/Performance\",\n    \"P0107\": \"Manifold Absolute Pressure/Barometric Pressure Circuit Low Input\",\n    \"P0108\": \"Manifold Absolute Pressure/Barometric Pressure Circuit High Input\",\n    \"P0109\": \"Manifold Absolute Pressure/Barometric Pressure Circuit Intermittent\",\n    \"P0110\": \"Intake Air Temperature Sensor 1 Circuit\",\n    \"P0111\": \"Intake Air Temperature Sensor 1 Circuit Range/Performance\",\n    \"P0112\": \"Intake Air Temperature Sensor 1 Circuit Low\",\n    \"P0113\": \"Intake Air Temperature Sensor 1 Circuit High\",\n    \"P0114\": \"Intake Air Temperature Sensor 1 Circuit Intermittent\",\n    \"P0115\": \"Engine Coolant Temperature Circuit\",\n    \"P0116\": \"Engine Coolant Temperature Circuit Range/Performance\",\n    \"P0117\": \"Engine Coolant Temperature Circuit Low\",\n    \"P0118\": \"Engine Coolant Temperature Circuit High\",\n    \"P0119\": \"Engine Coolant Temperature Circuit Intermittent\",\n    \"P0120\": \"Throttle/Pedal Position Sensor/Switch 'A' Circuit\",\n    \"P0121\": \"Throttle/Pedal Position Sensor/Switch 'A' Circuit Range/Performance\",\n    \"P0122\": \"Throttle/Pedal Position Sensor/Switch 'A' Circuit Low\",\n    \"P0123\": \"Throttle/Pedal Position Sensor/Switch 'A' Circuit High\",\n    \"P0124\": \"Throttle/Pedal Position Sensor/Switch 'A' Circuit Intermittent\",\n    \"P0125\": \"Insufficient Coolant Temperature for Closed Loop Fuel Control\",\n    \"P0126\": \"Insufficient Coolant Temperature for Stable Operation\",\n    \"P0127\": \"Intake Air Temperature Too High\",\n    \"P0128\": \"Coolant Thermostat (Coolant Temperature Below Thermostat Regulating Temperature)\",\n    \"P0129\": \"Barometric Pressure Too Low\",\n    \"P0130\": \"O2 Sensor Circuit\",\n    \"P0131\": \"O2 Sensor Circuit Low Voltage\",\n    \"P0132\": \"O2 Sensor Circuit High Voltage\",\n    \"P0133\": \"O2 Sensor Circuit Slow OBDResponse\",\n    \"P0134\": \"O2 Sensor Circuit No Activity Detected\",\n    \"P0135\": \"O2 Sensor Heater Circuit\",\n    \"P0136\": \"O2 Sensor Circuit\",\n    \"P0137\": \"O2 Sensor Circuit Low Voltage\",\n    \"P0138\": \"O2 Sensor Circuit High Voltage\",\n    \"P0139\": \"O2 Sensor Circuit Slow OBDResponse\",\n    \"P0140\": \"O2 Sensor Circuit No Activity Detected\",\n    \"P0141\": \"O2 Sensor Heater Circuit\",\n    \"P0142\": \"O2 Sensor Circuit\",\n    \"P0143\": \"O2 Sensor Circuit Low Voltage\",\n    \"P0144\": \"O2 Sensor Circuit High Voltage\",\n    \"P0145\": \"O2 Sensor Circuit Slow OBDResponse\",\n    \"P0146\": \"O2 Sensor Circuit No Activity Detected\",\n    \"P0147\": \"O2 Sensor Heater Circuit\",\n    \"P0148\": \"Fuel Delivery Error\",\n    \"P0149\": \"Fuel Timing Error\",\n    \"P0150\": \"O2 Sensor Circuit\",\n    \"P0151\": \"O2 Sensor Circuit Low Voltage\",\n    \"P0152\": \"O2 Sensor Circuit High Voltage\",\n    \"P0153\": \"O2 Sensor Circuit Slow OBDResponse\",\n    \"P0154\": \"O2 Sensor Circuit No Activity Detected\",\n    \"P0155\": \"O2 Sensor Heater Circuit\",\n    \"P0156\": \"O2 Sensor Circuit\",\n    \"P0157\": \"O2 Sensor Circuit Low Voltage\",\n    \"P0158\": \"O2 Sensor Circuit High Voltage\",\n    \"P0159\": \"O2 Sensor Circuit Slow OBDResponse\",\n    \"P0160\": \"O2 Sensor Circuit No Activity Detected\",\n    \"P0161\": \"O2 Sensor Heater Circuit\",\n    \"P0162\": \"O2 Sensor Circuit\",\n    \"P0163\": \"O2 Sensor Circuit Low Voltage\",\n    \"P0164\": \"O2 Sensor Circuit High Voltage\",\n    \"P0165\": \"O2 Sensor Circuit Slow OBDResponse\",\n    \"P0166\": \"O2 Sensor Circuit No Activity Detected\",\n    \"P0167\": \"O2 Sensor Heater Circuit\",\n    \"P0168\": \"Fuel Temperature Too High\",\n    \"P0169\": \"Incorrect Fuel Composition\",\n    \"P0170\": \"Fuel Trim\",\n    \"P0171\": \"System Too Lean\",\n    \"P0172\": \"System Too Rich\",\n    \"P0173\": \"Fuel Trim\",\n    \"P0174\": \"System Too Lean\",\n    \"P0175\": \"System Too Rich\",\n    \"P0176\": \"Fuel Composition Sensor Circuit\",\n    \"P0177\": \"Fuel Composition Sensor Circuit Range/Performance\",\n    \"P0178\": \"Fuel Composition Sensor Circuit Low\",\n    \"P0179\": \"Fuel Composition Sensor Circuit High\",\n    \"P0180\": \"Fuel Temperature Sensor A Circuit\",\n    \"P0181\": \"Fuel Temperature Sensor A Circuit Range/Performance\",\n    \"P0182\": \"Fuel Temperature Sensor A Circuit Low\",\n    \"P0183\": \"Fuel Temperature Sensor A Circuit High\",\n    \"P0184\": \"Fuel Temperature Sensor A Circuit Intermittent\",\n    \"P0185\": \"Fuel Temperature Sensor B Circuit\",\n    \"P0186\": \"Fuel Temperature Sensor B Circuit Range/Performance\",\n    \"P0187\": \"Fuel Temperature Sensor B Circuit Low\",\n    \"P0188\": \"Fuel Temperature Sensor B Circuit High\",\n    \"P0189\": \"Fuel Temperature Sensor B Circuit Intermittent\",\n    \"P0190\": \"Fuel Rail Pressure Sensor Circuit\",\n    \"P0191\": \"Fuel Rail Pressure Sensor Circuit Range/Performance\",\n    \"P0192\": \"Fuel Rail Pressure Sensor Circuit Low\",\n    \"P0193\": \"Fuel Rail Pressure Sensor Circuit High\",\n    \"P0194\": \"Fuel Rail Pressure Sensor Circuit Intermittent\",\n    \"P0195\": \"Engine Oil Temperature Sensor\",\n    \"P0196\": \"Engine Oil Temperature Sensor Range/Performance\",\n    \"P0197\": \"Engine Oil Temperature Sensor Low\",\n    \"P0198\": \"Engine Oil Temperature Sensor High\",\n    \"P0199\": \"Engine Oil Temperature Sensor Intermittent\",\n    \"P0200\": \"Injector Circuit/Open\",\n    \"P0201\": \"Injector Circuit/Open - Cylinder 1\",\n    \"P0202\": \"Injector Circuit/Open - Cylinder 2\",\n    \"P0203\": \"Injector Circuit/Open - Cylinder 3\",\n    \"P0204\": \"Injector Circuit/Open - Cylinder 4\",\n    \"P0205\": \"Injector Circuit/Open - Cylinder 5\",\n    \"P0206\": \"Injector Circuit/Open - Cylinder 6\",\n    \"P0207\": \"Injector Circuit/Open - Cylinder 7\",\n    \"P0208\": \"Injector Circuit/Open - Cylinder 8\",\n    \"P0209\": \"Injector Circuit/Open - Cylinder 9\",\n    \"P0210\": \"Injector Circuit/Open - Cylinder 10\",\n    \"P0211\": \"Injector Circuit/Open - Cylinder 11\",\n    \"P0212\": \"Injector Circuit/Open - Cylinder 12\",\n    \"P0213\": \"Cold Start Injector 1\",\n    \"P0214\": \"Cold Start Injector 2\",\n    \"P0215\": \"Engine Shutoff Solenoid\",\n    \"P0216\": \"Injector/Injection Timing Control Circuit\",\n    \"P0217\": \"Engine Coolant Over Temperature Condition\",\n    \"P0218\": \"Transmission Fluid Over Temperature Condition\",\n    \"P0219\": \"Engine Overspeed Condition\",\n    \"P0220\": \"Throttle/Pedal Position Sensor/Switch 'B' Circuit\",\n    \"P0221\": \"Throttle/Pedal Position Sensor/Switch 'B' Circuit Range/Performance\",\n    \"P0222\": \"Throttle/Pedal Position Sensor/Switch 'B' Circuit Low\",\n    \"P0223\": \"Throttle/Pedal Position Sensor/Switch 'B' Circuit High\",\n    \"P0224\": \"Throttle/Pedal Position Sensor/Switch 'B' Circuit Intermittent\",\n    \"P0225\": \"Throttle/Pedal Position Sensor/Switch 'C' Circuit\",\n    \"P0226\": \"Throttle/Pedal Position Sensor/Switch 'C' Circuit Range/Performance\",\n    \"P0227\": \"Throttle/Pedal Position Sensor/Switch 'C' Circuit Low\",\n    \"P0228\": \"Throttle/Pedal Position Sensor/Switch 'C' Circuit High\",\n    \"P0229\": \"Throttle/Pedal Position Sensor/Switch 'C' Circuit Intermittent\",\n    \"P0230\": \"Fuel Pump Primary Circuit\",\n    \"P0231\": \"Fuel Pump Secondary Circuit Low\",\n    \"P0232\": \"Fuel Pump Secondary Circuit High\",\n    \"P0233\": \"Fuel Pump Secondary Circuit Intermittent\",\n    \"P0234\": \"Turbo/Super Charger Overboost Condition\",\n    \"P0235\": \"Turbo/Super Charger Boost Sensor 'A' Circuit\",\n    \"P0236\": \"Turbo/Super Charger Boost Sensor 'A' Circuit Range/Performance\",\n    \"P0237\": \"Turbo/Super Charger Boost Sensor 'A' Circuit Low\",\n    \"P0238\": \"Turbo/Super Charger Boost Sensor 'A' Circuit High\",\n    \"P0239\": \"Turbo/Super Charger Boost Sensor 'B' Circuit\",\n    \"P0240\": \"Turbo/Super Charger Boost Sensor 'B' Circuit Range/Performance\",\n    \"P0241\": \"Turbo/Super Charger Boost Sensor 'B' Circuit Low\",\n    \"P0242\": \"Turbo/Super Charger Boost Sensor 'B' Circuit High\",\n    \"P0243\": \"Turbo/Super Charger Wastegate Solenoid 'A'\",\n    \"P0244\": \"Turbo/Super Charger Wastegate Solenoid 'A' Range/Performance\",\n    \"P0245\": \"Turbo/Super Charger Wastegate Solenoid 'A' Low\",\n    \"P0246\": \"Turbo/Super Charger Wastegate Solenoid 'A' High\",\n    \"P0247\": \"Turbo/Super Charger Wastegate Solenoid 'B'\",\n    \"P0248\": \"Turbo/Super Charger Wastegate Solenoid 'B' Range/Performance\",\n    \"P0249\": \"Turbo/Super Charger Wastegate Solenoid 'B' Low\",\n    \"P0250\": \"Turbo/Super Charger Wastegate Solenoid 'B' High\",\n    \"P0251\": \"Injection Pump Fuel Metering Control 'A' (Cam/Rotor/Injector)\",\n    \"P0252\": \"Injection Pump Fuel Metering Control 'A' Range/Performance (Cam/Rotor/Injector)\",\n    \"P0253\": \"Injection Pump Fuel Metering Control 'A' Low (Cam/Rotor/Injector)\",\n    \"P0254\": \"Injection Pump Fuel Metering Control 'A' High (Cam/Rotor/Injector)\",\n    \"P0255\": \"Injection Pump Fuel Metering Control 'A' Intermittent (Cam/Rotor/Injector)\",\n    \"P0256\": \"Injection Pump Fuel Metering Control 'B' (Cam/Rotor/Injector)\",\n    \"P0257\": \"Injection Pump Fuel Metering Control 'B' Range/Performance (Cam/Rotor/Injector)\",\n    \"P0258\": \"Injection Pump Fuel Metering Control 'B' Low (Cam/Rotor/Injector)\",\n    \"P0259\": \"Injection Pump Fuel Metering Control 'B' High (Cam/Rotor/Injector)\",\n    \"P0260\": \"Injection Pump Fuel Metering Control 'B' Intermittent (Cam/Rotor/Injector)\",\n    \"P0261\": \"Cylinder 1 Injector Circuit Low\",\n    \"P0262\": \"Cylinder 1 Injector Circuit High\",\n    \"P0263\": \"Cylinder 1 Contribution/Balance\",\n    \"P0264\": \"Cylinder 2 Injector Circuit Low\",\n    \"P0265\": \"Cylinder 2 Injector Circuit High\",\n    \"P0266\": \"Cylinder 2 Contribution/Balance\",\n    \"P0267\": \"Cylinder 3 Injector Circuit Low\",\n    \"P0268\": \"Cylinder 3 Injector Circuit High\",\n    \"P0269\": \"Cylinder 3 Contribution/Balance\",\n    \"P0270\": \"Cylinder 4 Injector Circuit Low\",\n    \"P0271\": \"Cylinder 4 Injector Circuit High\",\n    \"P0272\": \"Cylinder 4 Contribution/Balance\",\n    \"P0273\": \"Cylinder 5 Injector Circuit Low\",\n    \"P0274\": \"Cylinder 5 Injector Circuit High\",\n    \"P0275\": \"Cylinder 5 Contribution/Balance\",\n    \"P0276\": \"Cylinder 6 Injector Circuit Low\",\n    \"P0277\": \"Cylinder 6 Injector Circuit High\",\n    \"P0278\": \"Cylinder 6 Contribution/Balance\",\n    \"P0279\": \"Cylinder 7 Injector Circuit Low\",\n    \"P0280\": \"Cylinder 7 Injector Circuit High\",\n    \"P0281\": \"Cylinder 7 Contribution/Balance\",\n    \"P0282\": \"Cylinder 8 Injector Circuit Low\",\n    \"P0283\": \"Cylinder 8 Injector Circuit High\",\n    \"P0284\": \"Cylinder 8 Contribution/Balance\",\n    \"P0285\": \"Cylinder 9 Injector Circuit Low\",\n    \"P0286\": \"Cylinder 9 Injector Circuit High\",\n    \"P0287\": \"Cylinder 9 Contribution/Balance\",\n    \"P0288\": \"Cylinder 10 Injector Circuit Low\",\n    \"P0289\": \"Cylinder 10 Injector Circuit High\",\n    \"P0290\": \"Cylinder 10 Contribution/Balance\",\n    \"P0291\": \"Cylinder 11 Injector Circuit Low\",\n    \"P0292\": \"Cylinder 11 Injector Circuit High\",\n    \"P0293\": \"Cylinder 11 Contribution/Balance\",\n    \"P0294\": \"Cylinder 12 Injector Circuit Low\",\n    \"P0295\": \"Cylinder 12 Injector Circuit High\",\n    \"P0296\": \"Cylinder 12 Contribution/Balance\",\n    \"P0297\": \"Vehicle Overspeed Condition\",\n    \"P0298\": \"Engine Oil Over Temperature\",\n    \"P0299\": \"Turbo/Super Charger Underboost\",\n    \"P0300\": \"Random/Multiple Cylinder Misfire Detected\",\n    \"P0301\": \"Cylinder 1 Misfire Detected\",\n    \"P0302\": \"Cylinder 2 Misfire Detected\",\n    \"P0303\": \"Cylinder 3 Misfire Detected\",\n    \"P0304\": \"Cylinder 4 Misfire Detected\",\n    \"P0305\": \"Cylinder 5 Misfire Detected\",\n    \"P0306\": \"Cylinder 6 Misfire Detected\",\n    \"P0307\": \"Cylinder 7 Misfire Detected\",\n    \"P0308\": \"Cylinder 8 Misfire Detected\",\n    \"P0309\": \"Cylinder 9 Misfire Detected\",\n    \"P0310\": \"Cylinder 10 Misfire Detected\",\n    \"P0311\": \"Cylinder 11 Misfire Detected\",\n    \"P0312\": \"Cylinder 12 Misfire Detected\",\n    \"P0313\": \"Misfire Detected with Low Fuel\",\n    \"P0314\": \"Single Cylinder Misfire (Cylinder not Specified)\",\n    \"P0315\": \"Crankshaft Position System Variation Not Learned\",\n    \"P0316\": \"Engine Misfire Detected on Startup (First 1000 Revolutions)\",\n    \"P0317\": \"Rough Road Hardware Not Present\",\n    \"P0318\": \"Rough Road Sensor 'A' Signal Circuit\",\n    \"P0319\": \"Rough Road Sensor 'B'\",\n    \"P0320\": \"Ignition/Distributor Engine Speed Input Circuit\",\n    \"P0321\": \"Ignition/Distributor Engine Speed Input Circuit Range/Performance\",\n    \"P0322\": \"Ignition/Distributor Engine Speed Input Circuit No Signal\",\n    \"P0323\": \"Ignition/Distributor Engine Speed Input Circuit Intermittent\",\n    \"P0324\": \"Knock Control System Error\",\n    \"P0325\": \"Knock Sensor 1 Circuit\",\n    \"P0326\": \"Knock Sensor 1 Circuit Range/Performance\",\n    \"P0327\": \"Knock Sensor 1 Circuit Low\",\n    \"P0328\": \"Knock Sensor 1 Circuit High\",\n    \"P0329\": \"Knock Sensor 1 Circuit Input Intermittent\",\n    \"P0330\": \"Knock Sensor 2 Circuit\",\n    \"P0331\": \"Knock Sensor 2 Circuit Range/Performance\",\n    \"P0332\": \"Knock Sensor 2 Circuit Low\",\n    \"P0333\": \"Knock Sensor 2 Circuit High\",\n    \"P0334\": \"Knock Sensor 2 Circuit Input Intermittent\",\n    \"P0335\": \"Crankshaft Position Sensor 'A' Circuit\",\n    \"P0336\": \"Crankshaft Position Sensor 'A' Circuit Range/Performance\",\n    \"P0337\": \"Crankshaft Position Sensor 'A' Circuit Low\",\n    \"P0338\": \"Crankshaft Position Sensor 'A' Circuit High\",\n    \"P0339\": \"Crankshaft Position Sensor 'A' Circuit Intermittent\",\n    \"P0340\": \"Camshaft Position Sensor 'A' Circuit\",\n    \"P0341\": \"Camshaft Position Sensor 'A' Circuit Range/Performance\",\n    \"P0342\": \"Camshaft Position Sensor 'A' Circuit Low\",\n    \"P0343\": \"Camshaft Position Sensor 'A' Circuit High\",\n    \"P0344\": \"Camshaft Position Sensor 'A' Circuit Intermittent\",\n    \"P0345\": \"Camshaft Position Sensor 'A' Circuit\",\n    \"P0346\": \"Camshaft Position Sensor 'A' Circuit Range/Performance\",\n    \"P0347\": \"Camshaft Position Sensor 'A' Circuit Low\",\n    \"P0348\": \"Camshaft Position Sensor 'A' Circuit High\",\n    \"P0349\": \"Camshaft Position Sensor 'A' Circuit Intermittent\",\n    \"P0350\": \"Ignition Coil Primary/Secondary Circuit\",\n    \"P0351\": \"Ignition Coil 'A' Primary/Secondary Circuit\",\n    \"P0352\": \"Ignition Coil 'B' Primary/Secondary Circuit\",\n    \"P0353\": \"Ignition Coil 'C' Primary/Secondary Circuit\",\n    \"P0354\": \"Ignition Coil 'D' Primary/Secondary Circuit\",\n    \"P0355\": \"Ignition Coil 'E' Primary/Secondary Circuit\",\n    \"P0356\": \"Ignition Coil 'F' Primary/Secondary Circuit\",\n    \"P0357\": \"Ignition Coil 'G' Primary/Secondary Circuit\",\n    \"P0358\": \"Ignition Coil 'H' Primary/Secondary Circuit\",\n    \"P0359\": \"Ignition Coil 'I' Primary/Secondary Circuit\",\n    \"P0360\": \"Ignition Coil 'J' Primary/Secondary Circuit\",\n    \"P0361\": \"Ignition Coil 'K' Primary/Secondary Circuit\",\n    \"P0362\": \"Ignition Coil 'L' Primary/Secondary Circuit\",\n    \"P0363\": \"Misfire Detected - Fueling Disabled\",\n    \"P0364\": \"Reserved\",\n    \"P0365\": \"Camshaft Position Sensor 'B' Circuit\",\n    \"P0366\": \"Camshaft Position Sensor 'B' Circuit Range/Performance\",\n    \"P0367\": \"Camshaft Position Sensor 'B' Circuit Low\",\n    \"P0368\": \"Camshaft Position Sensor 'B' Circuit High\",\n    \"P0369\": \"Camshaft Position Sensor 'B' Circuit Intermittent\",\n    \"P0370\": \"Timing Reference High Resolution Signal 'A'\",\n    \"P0371\": \"Timing Reference High Resolution Signal 'A' Too Many Pulses\",\n    \"P0372\": \"Timing Reference High Resolution Signal 'A' Too Few Pulses\",\n    \"P0373\": \"Timing Reference High Resolution Signal 'A' Intermittent/Erratic Pulses\",\n    \"P0374\": \"Timing Reference High Resolution Signal 'A' No Pulse\",\n    \"P0375\": \"Timing Reference High Resolution Signal 'B'\",\n    \"P0376\": \"Timing Reference High Resolution Signal 'B' Too Many Pulses\",\n    \"P0377\": \"Timing Reference High Resolution Signal 'B' Too Few Pulses\",\n    \"P0378\": \"Timing Reference High Resolution Signal 'B' Intermittent/Erratic Pulses\",\n    \"P0379\": \"Timing Reference High Resolution Signal 'B' No Pulses\",\n    \"P0380\": \"Glow Plug/Heater Circuit 'A'\",\n    \"P0381\": \"Glow Plug/Heater Indicator Circuit\",\n    \"P0382\": \"Glow Plug/Heater Circuit 'B'\",\n    \"P0383\": \"Reserved by SAE J2012\",\n    \"P0384\": \"Reserved by SAE J2012\",\n    \"P0385\": \"Crankshaft Position Sensor 'B' Circuit\",\n    \"P0386\": \"Crankshaft Position Sensor 'B' Circuit Range/Performance\",\n    \"P0387\": \"Crankshaft Position Sensor 'B' Circuit Low\",\n    \"P0388\": \"Crankshaft Position Sensor 'B' Circuit High\",\n    \"P0389\": \"Crankshaft Position Sensor 'B' Circuit Intermittent\",\n    \"P0390\": \"Camshaft Position Sensor 'B' Circuit\",\n    \"P0391\": \"Camshaft Position Sensor 'B' Circuit Range/Performance\",\n    \"P0392\": \"Camshaft Position Sensor 'B' Circuit Low\",\n    \"P0393\": \"Camshaft Position Sensor 'B' Circuit High\",\n    \"P0394\": \"Camshaft Position Sensor 'B' Circuit Intermittent\",\n    \"P0400\": \"Exhaust Gas Recirculation Flow\",\n    \"P0401\": \"Exhaust Gas Recirculation Flow Insufficient Detected\",\n    \"P0402\": \"Exhaust Gas Recirculation Flow Excessive Detected\",\n    \"P0403\": \"Exhaust Gas Recirculation Control Circuit\",\n    \"P0404\": \"Exhaust Gas Recirculation Control Circuit Range/Performance\",\n    \"P0405\": \"Exhaust Gas Recirculation Sensor 'A' Circuit Low\",\n    \"P0406\": \"Exhaust Gas Recirculation Sensor 'A' Circuit High\",\n    \"P0407\": \"Exhaust Gas Recirculation Sensor 'B' Circuit Low\",\n    \"P0408\": \"Exhaust Gas Recirculation Sensor 'B' Circuit High\",\n    \"P0409\": \"Exhaust Gas Recirculation Sensor 'A' Circuit\",\n    \"P0410\": \"Secondary Air Injection System\",\n    \"P0411\": \"Secondary Air Injection System Incorrect Flow Detected\",\n    \"P0412\": \"Secondary Air Injection System Switching Valve 'A' Circuit\",\n    \"P0413\": \"Secondary Air Injection System Switching Valve 'A' Circuit Open\",\n    \"P0414\": \"Secondary Air Injection System Switching Valve 'A' Circuit Shorted\",\n    \"P0415\": \"Secondary Air Injection System Switching Valve 'B' Circuit\",\n    \"P0416\": \"Secondary Air Injection System Switching Valve 'B' Circuit Open\",\n    \"P0417\": \"Secondary Air Injection System Switching Valve 'B' Circuit Shorted\",\n    \"P0418\": \"Secondary Air Injection System Control 'A' Circuit\",\n    \"P0419\": \"Secondary Air Injection System Control 'B' Circuit\",\n    \"P0420\": \"Catalyst System Efficiency Below Threshold\",\n    \"P0421\": \"Warm Up Catalyst Efficiency Below Threshold\",\n    \"P0422\": \"Main Catalyst Efficiency Below Threshold\",\n    \"P0423\": \"Heated Catalyst Efficiency Below Threshold\",\n    \"P0424\": \"Heated Catalyst Temperature Below Threshold\",\n    \"P0425\": \"Catalyst Temperature Sensor\",\n    \"P0426\": \"Catalyst Temperature Sensor Range/Performance\",\n    \"P0427\": \"Catalyst Temperature Sensor Low\",\n    \"P0428\": \"Catalyst Temperature Sensor High\",\n    \"P0429\": \"Catalyst Heater Control Circuit\",\n    \"P0430\": \"Catalyst System Efficiency Below Threshold\",\n    \"P0431\": \"Warm Up Catalyst Efficiency Below Threshold\",\n    \"P0432\": \"Main Catalyst Efficiency Below Threshold\",\n    \"P0433\": \"Heated Catalyst Efficiency Below Threshold\",\n    \"P0434\": \"Heated Catalyst Temperature Below Threshold\",\n    \"P0435\": \"Catalyst Temperature Sensor\",\n    \"P0436\": \"Catalyst Temperature Sensor Range/Performance\",\n    \"P0437\": \"Catalyst Temperature Sensor Low\",\n    \"P0438\": \"Catalyst Temperature Sensor High\",\n    \"P0439\": \"Catalyst Heater Control Circuit\",\n    \"P0440\": \"Evaporative Emission System\",\n    \"P0441\": \"Evaporative Emission System Incorrect Purge Flow\",\n    \"P0442\": \"Evaporative Emission System Leak Detected (small leak)\",\n    \"P0443\": \"Evaporative Emission System Purge Control Valve Circuit\",\n    \"P0444\": \"Evaporative Emission System Purge Control Valve Circuit Open\",\n    \"P0445\": \"Evaporative Emission System Purge Control Valve Circuit Shorted\",\n    \"P0446\": \"Evaporative Emission System Vent Control Circuit\",\n    \"P0447\": \"Evaporative Emission System Vent Control Circuit Open\",\n    \"P0448\": \"Evaporative Emission System Vent Control Circuit Shorted\",\n    \"P0449\": \"Evaporative Emission System Vent Valve/Solenoid Circuit\",\n    \"P0450\": \"Evaporative Emission System Pressure Sensor/Switch\",\n    \"P0451\": \"Evaporative Emission System Pressure Sensor/Switch Range/Performance\",\n    \"P0452\": \"Evaporative Emission System Pressure Sensor/Switch Low\",\n    \"P0453\": \"Evaporative Emission System Pressure Sensor/Switch High\",\n    \"P0454\": \"Evaporative Emission System Pressure Sensor/Switch Intermittent\",\n    \"P0455\": \"Evaporative Emission System Leak Detected (large leak)\",\n    \"P0456\": \"Evaporative Emission System Leak Detected (very small leak)\",\n    \"P0457\": \"Evaporative Emission System Leak Detected (fuel cap loose/off)\",\n    \"P0458\": \"Evaporative Emission System Purge Control Valve Circuit Low\",\n    \"P0459\": \"Evaporative Emission System Purge Control Valve Circuit High\",\n    \"P0460\": \"Fuel Level Sensor 'A' Circuit\",\n    \"P0461\": \"Fuel Level Sensor 'A' Circuit Range/Performance\",\n    \"P0462\": \"Fuel Level Sensor 'A' Circuit Low\",\n    \"P0463\": \"Fuel Level Sensor 'A' Circuit High\",\n    \"P0464\": \"Fuel Level Sensor 'A' Circuit Intermittent\",\n    \"P0465\": \"EVAP Purge Flow Sensor Circuit\",\n    \"P0466\": \"EVAP Purge Flow Sensor Circuit Range/Performance\",\n    \"P0467\": \"EVAP Purge Flow Sensor Circuit Low\",\n    \"P0468\": \"EVAP Purge Flow Sensor Circuit High\",\n    \"P0469\": \"EVAP Purge Flow Sensor Circuit Intermittent\",\n    \"P0470\": \"Exhaust Pressure Sensor\",\n    \"P0471\": \"Exhaust Pressure Sensor Range/Performance\",\n    \"P0472\": \"Exhaust Pressure Sensor Low\",\n    \"P0473\": \"Exhaust Pressure Sensor High\",\n    \"P0474\": \"Exhaust Pressure Sensor Intermittent\",\n    \"P0475\": \"Exhaust Pressure Control Valve\",\n    \"P0476\": \"Exhaust Pressure Control Valve Range/Performance\",\n    \"P0477\": \"Exhaust Pressure Control Valve Low\",\n    \"P0478\": \"Exhaust Pressure Control Valve High\",\n    \"P0479\": \"Exhaust Pressure Control Valve Intermittent\",\n    \"P0480\": \"Fan 1 Control Circuit\",\n    \"P0481\": \"Fan 2 Control Circuit\",\n    \"P0482\": \"Fan 3 Control Circuit\",\n    \"P0483\": \"Fan Rationality Check\",\n    \"P0484\": \"Fan Circuit Over Current\",\n    \"P0485\": \"Fan Power/Ground Circuit\",\n    \"P0486\": \"Exhaust Gas Recirculation Sensor 'B' Circuit\",\n    \"P0487\": \"Exhaust Gas Recirculation Throttle Position Control Circuit\",\n    \"P0488\": \"Exhaust Gas Recirculation Throttle Position Control Range/Performance\",\n    \"P0489\": \"Exhaust Gas Recirculation Control Circuit Low\",\n    \"P0490\": \"Exhaust Gas Recirculation Control Circuit High\",\n    \"P0491\": \"Secondary Air Injection System Insufficient Flow\",\n    \"P0492\": \"Secondary Air Injection System Insufficient Flow\",\n    \"P0493\": \"Fan Overspeed\",\n    \"P0494\": \"Fan Speed Low\",\n    \"P0495\": \"Fan Speed High\",\n    \"P0496\": \"Evaporative Emission System High Purge Flow\",\n    \"P0497\": \"Evaporative Emission System Low Purge Flow\",\n    \"P0498\": \"Evaporative Emission System Vent Valve Control Circuit Low\",\n    \"P0499\": \"Evaporative Emission System Vent Valve Control Circuit High\",\n    \"P0500\": \"Vehicle Speed Sensor 'A'\",\n    \"P0501\": \"Vehicle Speed Sensor 'A' Range/Performance\",\n    \"P0502\": \"Vehicle Speed Sensor 'A' Circuit Low Input\",\n    \"P0503\": \"Vehicle Speed Sensor 'A' Intermittent/Erratic/High\",\n    \"P0504\": \"Brake Switch 'A'/'B' Correlation\",\n    \"P0505\": \"Idle Air Control System\",\n    \"P0506\": \"Idle Air Control System RPM Lower Than Expected\",\n    \"P0507\": \"Idle Air Control System RPM Higher Than Expected\",\n    \"P0508\": \"Idle Air Control System Circuit Low\",\n    \"P0509\": \"Idle Air Control System Circuit High\",\n    \"P0510\": \"Closed Throttle Position Switch\",\n    \"P0511\": \"Idle Air Control Circuit\",\n    \"P0512\": \"Starter Request Circuit\",\n    \"P0513\": \"Incorrect Immobilizer Key\",\n    \"P0514\": \"Battery Temperature Sensor Circuit Range/Performance\",\n    \"P0515\": \"Battery Temperature Sensor Circuit\",\n    \"P0516\": \"Battery Temperature Sensor Circuit Low\",\n    \"P0517\": \"Battery Temperature Sensor Circuit High\",\n    \"P0518\": \"Idle Air Control Circuit Intermittent\",\n    \"P0519\": \"Idle Air Control System Performance\",\n    \"P0520\": \"Engine Oil Pressure Sensor/Switch Circuit\",\n    \"P0521\": \"Engine Oil Pressure Sensor/Switch Range/Performance\",\n    \"P0522\": \"Engine Oil Pressure Sensor/Switch Low Voltage\",\n    \"P0523\": \"Engine Oil Pressure Sensor/Switch High Voltage\",\n    \"P0524\": \"Engine Oil Pressure Too Low\",\n    \"P0525\": \"Cruise Control Servo Control Circuit Range/Performance\",\n    \"P0526\": \"Fan Speed Sensor Circuit\",\n    \"P0527\": \"Fan Speed Sensor Circuit Range/Performance\",\n    \"P0528\": \"Fan Speed Sensor Circuit No Signal\",\n    \"P0529\": \"Fan Speed Sensor Circuit Intermittent\",\n    \"P0530\": \"A/C Refrigerant Pressure Sensor 'A' Circuit\",\n    \"P0531\": \"A/C Refrigerant Pressure Sensor 'A' Circuit Range/Performance\",\n    \"P0532\": \"A/C Refrigerant Pressure Sensor 'A' Circuit Low\",\n    \"P0533\": \"A/C Refrigerant Pressure Sensor 'A' Circuit High\",\n    \"P0534\": \"Air Conditioner Refrigerant Charge Loss\",\n    \"P0535\": \"A/C Evaporator Temperature Sensor Circuit\",\n    \"P0536\": \"A/C Evaporator Temperature Sensor Circuit Range/Performance\",\n    \"P0537\": \"A/C Evaporator Temperature Sensor Circuit Low\",\n    \"P0538\": \"A/C Evaporator Temperature Sensor Circuit High\",\n    \"P0539\": \"A/C Evaporator Temperature Sensor Circuit Intermittent\",\n    \"P0540\": \"Intake Air Heater 'A' Circuit\",\n    \"P0541\": \"Intake Air Heater 'A' Circuit Low\",\n    \"P0542\": \"Intake Air Heater 'A' Circuit High\",\n    \"P0543\": \"Intake Air Heater 'A' Circuit Open\",\n    \"P0544\": \"Exhaust Gas Temperature Sensor Circuit\",\n    \"P0545\": \"Exhaust Gas Temperature Sensor Circuit Low\",\n    \"P0546\": \"Exhaust Gas Temperature Sensor Circuit High\",\n    \"P0547\": \"Exhaust Gas Temperature Sensor Circuit\",\n    \"P0548\": \"Exhaust Gas Temperature Sensor Circuit Low\",\n    \"P0549\": \"Exhaust Gas Temperature Sensor Circuit High\",\n    \"P0550\": \"Power Steering Pressure Sensor/Switch Circuit\",\n    \"P0551\": \"Power Steering Pressure Sensor/Switch Circuit Range/Performance\",\n    \"P0552\": \"Power Steering Pressure Sensor/Switch Circuit Low Input\",\n    \"P0553\": \"Power Steering Pressure Sensor/Switch Circuit High Input\",\n    \"P0554\": \"Power Steering Pressure Sensor/Switch Circuit Intermittent\",\n    \"P0555\": \"Brake Booster Pressure Sensor Circuit\",\n    \"P0556\": \"Brake Booster Pressure Sensor Circuit Range/Performance\",\n    \"P0557\": \"Brake Booster Pressure Sensor Circuit Low Input\",\n    \"P0558\": \"Brake Booster Pressure Sensor Circuit High Input\",\n    \"P0559\": \"Brake Booster Pressure Sensor Circuit Intermittent\",\n    \"P0560\": \"System Voltage\",\n    \"P0561\": \"System Voltage Unstable\",\n    \"P0562\": \"System Voltage Low\",\n    \"P0563\": \"System Voltage High\",\n    \"P0564\": \"Cruise Control Multi-Function Input 'A' Circuit\",\n    \"P0565\": \"Cruise Control On Signal\",\n    \"P0566\": \"Cruise Control Off Signal\",\n    \"P0567\": \"Cruise Control Resume Signal\",\n    \"P0568\": \"Cruise Control Set Signal\",\n    \"P0569\": \"Cruise Control Coast Signal\",\n    \"P0570\": \"Cruise Control Accelerate Signal\",\n    \"P0571\": \"Brake Switch 'A' Circuit\",\n    \"P0572\": \"Brake Switch 'A' Circuit Low\",\n    \"P0573\": \"Brake Switch 'A' Circuit High\",\n    \"P0574\": \"Cruise Control System - Vehicle Speed Too High\",\n    \"P0575\": \"Cruise Control Input Circuit\",\n    \"P0576\": \"Cruise Control Input Circuit Low\",\n    \"P0577\": \"Cruise Control Input Circuit High\",\n    \"P0578\": \"Cruise Control Multi-Function Input 'A' Circuit Stuck\",\n    \"P0579\": \"Cruise Control Multi-Function Input 'A' Circuit Range/Performance\",\n    \"P0580\": \"Cruise Control Multi-Function Input 'A' Circuit Low\",\n    \"P0581\": \"Cruise Control Multi-Function Input 'A' Circuit High\",\n    \"P0582\": \"Cruise Control Vacuum Control Circuit/Open\",\n    \"P0583\": \"Cruise Control Vacuum Control Circuit Low\",\n    \"P0584\": \"Cruise Control Vacuum Control Circuit High\",\n    \"P0585\": \"Cruise Control Multi-Function Input 'A'/'B' Correlation\",\n    \"P0586\": \"Cruise Control Vent Control Circuit/Open\",\n    \"P0587\": \"Cruise Control Vent Control Circuit Low\",\n    \"P0588\": \"Cruise Control Vent Control Circuit High\",\n    \"P0589\": \"Cruise Control Multi-Function Input 'B' Circuit\",\n    \"P0590\": \"Cruise Control Multi-Function Input 'B' Circuit Stuck\",\n    \"P0591\": \"Cruise Control Multi-Function Input 'B' Circuit Range/Performance\",\n    \"P0592\": \"Cruise Control Multi-Function Input 'B' Circuit Low\",\n    \"P0593\": \"Cruise Control Multi-Function Input 'B' Circuit High\",\n    \"P0594\": \"Cruise Control Servo Control Circuit/Open\",\n    \"P0595\": \"Cruise Control Servo Control Circuit Low\",\n    \"P0596\": \"Cruise Control Servo Control Circuit High\",\n    \"P0597\": \"Thermostat Heater Control Circuit/Open\",\n    \"P0598\": \"Thermostat Heater Control Circuit Low\",\n    \"P0599\": \"Thermostat Heater Control Circuit High\",\n    \"P0600\": \"Serial Communication Link\",\n    \"P0601\": \"Internal Control Module Memory Check Sum Error\",\n    \"P0602\": \"Control Module Programming Error\",\n    \"P0603\": \"Internal Control Module Keep Alive Memory (KAM) Error\",\n    \"P0604\": \"Internal Control Module Random Access Memory (RAM) Error\",\n    \"P0605\": \"Internal Control Module Read Only Memory (ROM) Error\",\n    \"P0606\": \"ECM/PCM Processor\",\n    \"P0607\": \"Control Module Performance\",\n    \"P0608\": \"Control Module VSS Output 'A'\",\n    \"P0609\": \"Control Module VSS Output 'B'\",\n    \"P0610\": \"Control Module Vehicle Options Error\",\n    \"P0611\": \"Fuel Injector Control Module Performance\",\n    \"P0612\": \"Fuel Injector Control Module Relay Control\",\n    \"P0613\": \"TCM Processor\",\n    \"P0614\": \"ECM / TCM Incompatible\",\n    \"P0615\": \"Starter Relay Circuit\",\n    \"P0616\": \"Starter Relay Circuit Low\",\n    \"P0617\": \"Starter Relay Circuit High\",\n    \"P0618\": \"Alternative Fuel Control Module KAM Error\",\n    \"P0619\": \"Alternative Fuel Control Module RAM/ROM Error\",\n    \"P0620\": \"Generator Control Circuit\",\n    \"P0621\": \"Generator Lamp/L Terminal Circuit\",\n    \"P0622\": \"Generator Field/F Terminal Circuit\",\n    \"P0623\": \"Generator Lamp Control Circuit\",\n    \"P0624\": \"Fuel Cap Lamp Control Circuit\",\n    \"P0625\": \"Generator Field/F Terminal Circuit Low\",\n    \"P0626\": \"Generator Field/F Terminal Circuit High\",\n    \"P0627\": \"Fuel Pump 'A' Control Circuit /Open\",\n    \"P0628\": \"Fuel Pump 'A' Control Circuit Low\",\n    \"P0629\": \"Fuel Pump 'A' Control Circuit High\",\n    \"P0630\": \"VIN Not Programmed or Incompatible - ECM/PCM\",\n    \"P0631\": \"VIN Not Programmed or Incompatible - TCM\",\n    \"P0632\": \"Odometer Not Programmed - ECM/PCM\",\n    \"P0633\": \"Immobilizer Key Not Programmed - ECM/PCM\",\n    \"P0634\": \"PCM/ECM/TCM Internal Temperature Too High\",\n    \"P0635\": \"Power Steering Control Circuit\",\n    \"P0636\": \"Power Steering Control Circuit Low\",\n    \"P0637\": \"Power Steering Control Circuit High\",\n    \"P0638\": \"Throttle Actuator Control Range/Performance\",\n    \"P0639\": \"Throttle Actuator Control Range/Performance\",\n    \"P0640\": \"Intake Air Heater Control Circuit\",\n    \"P0641\": \"Sensor Reference Voltage 'A' Circuit/Open\",\n    \"P0642\": \"Sensor Reference Voltage 'A' Circuit Low\",\n    \"P0643\": \"Sensor Reference Voltage 'A' Circuit High\",\n    \"P0644\": \"Driver Display Serial Communication Circuit\",\n    \"P0645\": \"A/C Clutch Relay Control Circuit\",\n    \"P0646\": \"A/C Clutch Relay Control Circuit Low\",\n    \"P0647\": \"A/C Clutch Relay Control Circuit High\",\n    \"P0648\": \"Immobilizer Lamp Control Circuit\",\n    \"P0649\": \"Speed Control Lamp Control Circuit\",\n    \"P0650\": \"Malfunction Indicator Lamp (MIL) Control Circuit\",\n    \"P0651\": \"Sensor Reference Voltage 'B' Circuit/Open\",\n    \"P0652\": \"Sensor Reference Voltage 'B' Circuit Low\",\n    \"P0653\": \"Sensor Reference Voltage 'B' Circuit High\",\n    \"P0654\": \"Engine RPM Output Circuit\",\n    \"P0655\": \"Engine Hot Lamp Output Control Circuit\",\n    \"P0656\": \"Fuel Level Output Circuit\",\n    \"P0657\": \"Actuator Supply Voltage 'A' Circuit/Open\",\n    \"P0658\": \"Actuator Supply Voltage 'A' Circuit Low\",\n    \"P0659\": \"Actuator Supply Voltage 'A' Circuit High\",\n    \"P0660\": \"Intake Manifold Tuning Valve Control Circuit/Open\",\n    \"P0661\": \"Intake Manifold Tuning Valve Control Circuit Low\",\n    \"P0662\": \"Intake Manifold Tuning Valve Control Circuit High\",\n    \"P0663\": \"Intake Manifold Tuning Valve Control Circuit/Open\",\n    \"P0664\": \"Intake Manifold Tuning Valve Control Circuit Low\",\n    \"P0665\": \"Intake Manifold Tuning Valve Control Circuit High\",\n    \"P0666\": \"PCM/ECM/TCM Internal Temperature Sensor Circuit\",\n    \"P0667\": \"PCM/ECM/TCM Internal Temperature Sensor Range/Performance\",\n    \"P0668\": \"PCM/ECM/TCM Internal Temperature Sensor Circuit Low\",\n    \"P0669\": \"PCM/ECM/TCM Internal Temperature Sensor Circuit High\",\n    \"P0670\": \"Glow Plug Module Control Circuit\",\n    \"P0671\": \"Cylinder 1 Glow Plug Circuit\",\n    \"P0672\": \"Cylinder 2 Glow Plug Circuit\",\n    \"P0673\": \"Cylinder 3 Glow Plug Circuit\",\n    \"P0674\": \"Cylinder 4 Glow Plug Circuit\",\n    \"P0675\": \"Cylinder 5 Glow Plug Circuit\",\n    \"P0676\": \"Cylinder 6 Glow Plug Circuit\",\n    \"P0677\": \"Cylinder 7 Glow Plug Circuit\",\n    \"P0678\": \"Cylinder 8 Glow Plug Circuit\",\n    \"P0679\": \"Cylinder 9 Glow Plug Circuit\",\n    \"P0680\": \"Cylinder 10 Glow Plug Circuit\",\n    \"P0681\": \"Cylinder 11 Glow Plug Circuit\",\n    \"P0682\": \"Cylinder 12 Glow Plug Circuit\",\n    \"P0683\": \"Glow Plug Control Module to PCM Communication Circuit\",\n    \"P0684\": \"Glow Plug Control Module to PCM Communication Circuit Range/Performance\",\n    \"P0685\": \"ECM/PCM Power Relay Control Circuit /Open\",\n    \"P0686\": \"ECM/PCM Power Relay Control Circuit Low\",\n    \"P0687\": \"ECM/PCM Power Relay Control Circuit High\",\n    \"P0688\": \"ECM/PCM Power Relay Sense Circuit /Open\",\n    \"P0689\": \"ECM/PCM Power Relay Sense Circuit Low\",\n    \"P0690\": \"ECM/PCM Power Relay Sense Circuit High\",\n    \"P0691\": \"Fan 1 Control Circuit Low\",\n    \"P0692\": \"Fan 1 Control Circuit High\",\n    \"P0693\": \"Fan 2 Control Circuit Low\",\n    \"P0694\": \"Fan 2 Control Circuit High\",\n    \"P0695\": \"Fan 3 Control Circuit Low\",\n    \"P0696\": \"Fan 3 Control Circuit High\",\n    \"P0697\": \"Sensor Reference Voltage 'C' Circuit/Open\",\n    \"P0698\": \"Sensor Reference Voltage 'C' Circuit Low\",\n    \"P0699\": \"Sensor Reference Voltage 'C' Circuit High\",\n    \"P0700\": \"Transmission Control System (MIL Request)\",\n    \"P0701\": \"Transmission Control System Range/Performance\",\n    \"P0702\": \"Transmission Control System Electrical\",\n    \"P0703\": \"Brake Switch 'B' Circuit\",\n    \"P0704\": \"Clutch Switch Input Circuit Malfunction\",\n    \"P0705\": \"Transmission Range Sensor Circuit Malfunction (PRNDL Input)\",\n    \"P0706\": \"Transmission Range Sensor Circuit Range/Performance\",\n    \"P0707\": \"Transmission Range Sensor Circuit Low\",\n    \"P0708\": \"Transmission Range Sensor Circuit High\",\n    \"P0709\": \"Transmission Range Sensor Circuit Intermittent\",\n    \"P0710\": \"Transmission Fluid Temperature Sensor 'A' Circuit\",\n    \"P0711\": \"Transmission Fluid Temperature Sensor 'A' Circuit Range/Performance\",\n    \"P0712\": \"Transmission Fluid Temperature Sensor 'A' Circuit Low\",\n    \"P0713\": \"Transmission Fluid Temperature Sensor 'A' Circuit High\",\n    \"P0714\": \"Transmission Fluid Temperature Sensor 'A' Circuit Intermittent\",\n    \"P0715\": \"Input/Turbine Speed Sensor 'A' Circuit\",\n    \"P0716\": \"Input/Turbine Speed Sensor 'A' Circuit Range/Performance\",\n    \"P0717\": \"Input/Turbine Speed Sensor 'A' Circuit No Signal\",\n    \"P0718\": \"Input/Turbine Speed Sensor 'A' Circuit Intermittent\",\n    \"P0719\": \"Brake Switch 'B' Circuit Low\",\n    \"P0720\": \"Output Speed Sensor Circuit\",\n    \"P0721\": \"Output Speed Sensor Circuit Range/Performance\",\n    \"P0722\": \"Output Speed Sensor Circuit No Signal\",\n    \"P0723\": \"Output Speed Sensor Circuit Intermittent\",\n    \"P0724\": \"Brake Switch 'B' Circuit High\",\n    \"P0725\": \"Engine Speed Input Circuit\",\n    \"P0726\": \"Engine Speed Input Circuit Range/Performance\",\n    \"P0727\": \"Engine Speed Input Circuit No Signal\",\n    \"P0728\": \"Engine Speed Input Circuit Intermittent\",\n    \"P0729\": \"Gear 6 Incorrect Ratio\",\n    \"P0730\": \"Incorrect Gear Ratio\",\n    \"P0731\": \"Gear 1 Incorrect Ratio\",\n    \"P0732\": \"Gear 2 Incorrect Ratio\",\n    \"P0733\": \"Gear 3 Incorrect Ratio\",\n    \"P0734\": \"Gear 4 Incorrect Ratio\",\n    \"P0735\": \"Gear 5 Incorrect Ratio\",\n    \"P0736\": \"Reverse Incorrect Ratio\",\n    \"P0737\": \"TCM Engine Speed Output Circuit\",\n    \"P0738\": \"TCM Engine Speed Output Circuit Low\",\n    \"P0739\": \"TCM Engine Speed Output Circuit High\",\n    \"P0740\": \"Torque Converter Clutch Circuit/Open\",\n    \"P0741\": \"Torque Converter Clutch Circuit Performance or Stuck Off\",\n    \"P0742\": \"Torque Converter Clutch Circuit Stuck On\",\n    \"P0743\": \"Torque Converter Clutch Circuit Electrical\",\n    \"P0744\": \"Torque Converter Clutch Circuit Intermittent\",\n    \"P0745\": \"Pressure Control Solenoid 'A'\",\n    \"P0746\": \"Pressure Control Solenoid 'A' Performance or Stuck Off\",\n    \"P0747\": \"Pressure Control Solenoid 'A' Stuck On\",\n    \"P0748\": \"Pressure Control Solenoid 'A' Electrical\",\n    \"P0749\": \"Pressure Control Solenoid 'A' Intermittent\",\n    \"P0750\": \"Shift Solenoid 'A'\",\n    \"P0751\": \"Shift Solenoid 'A' Performance or Stuck Off\",\n    \"P0752\": \"Shift Solenoid 'A' Stuck On\",\n    \"P0753\": \"Shift Solenoid 'A' Electrical\",\n    \"P0754\": \"Shift Solenoid 'A' Intermittent\",\n    \"P0755\": \"Shift Solenoid 'B'\",\n    \"P0756\": \"Shift Solenoid 'B' Performance or Stuck Off\",\n    \"P0757\": \"Shift Solenoid 'B' Stuck On\",\n    \"P0758\": \"Shift Solenoid 'B' Electrical\",\n    \"P0759\": \"Shift Solenoid 'B' Intermittent\",\n    \"P0760\": \"Shift Solenoid 'C'\",\n    \"P0761\": \"Shift Solenoid 'C' Performance or Stuck Off\",\n    \"P0762\": \"Shift Solenoid 'C' Stuck On\",\n    \"P0763\": \"Shift Solenoid 'C' Electrical\",\n    \"P0764\": \"Shift Solenoid 'C' Intermittent\",\n    \"P0765\": \"Shift Solenoid 'D'\",\n    \"P0766\": \"Shift Solenoid 'D' Performance or Stuck Off\",\n    \"P0767\": \"Shift Solenoid 'D' Stuck On\",\n    \"P0768\": \"Shift Solenoid 'D' Electrical\",\n    \"P0769\": \"Shift Solenoid 'D' Intermittent\",\n    \"P0770\": \"Shift Solenoid 'E'\",\n    \"P0771\": \"Shift Solenoid 'E' Performance or Stuck Off\",\n    \"P0772\": \"Shift Solenoid 'E' Stuck On\",\n    \"P0773\": \"Shift Solenoid 'E' Electrical\",\n    \"P0774\": \"Shift Solenoid 'E' Intermittent\",\n    \"P0775\": \"Pressure Control Solenoid 'B'\",\n    \"P0776\": \"Pressure Control Solenoid 'B' Performance or Stuck off\",\n    \"P0777\": \"Pressure Control Solenoid 'B' Stuck On\",\n    \"P0778\": \"Pressure Control Solenoid 'B' Electrical\",\n    \"P0779\": \"Pressure Control Solenoid 'B' Intermittent\",\n    \"P0780\": \"Shift Error\",\n    \"P0781\": \"1-2 Shift\",\n    \"P0782\": \"2-3 Shift\",\n    \"P0783\": \"3-4 Shift\",\n    \"P0784\": \"4-5 Shift\",\n    \"P0785\": \"Shift/Timing Solenoid\",\n    \"P0786\": \"Shift/Timing Solenoid Range/Performance\",\n    \"P0787\": \"Shift/Timing Solenoid Low\",\n    \"P0788\": \"Shift/Timing Solenoid High\",\n    \"P0789\": \"Shift/Timing Solenoid Intermittent\",\n    \"P0790\": \"Normal/Performance Switch Circuit\",\n    \"P0791\": \"Intermediate Shaft Speed Sensor 'A' Circuit\",\n    \"P0792\": \"Intermediate Shaft Speed Sensor 'A' Circuit Range/Performance\",\n    \"P0793\": \"Intermediate Shaft Speed Sensor 'A' Circuit No Signal\",\n    \"P0794\": \"Intermediate Shaft Speed Sensor 'A' Circuit Intermittent\",\n    \"P0795\": \"Pressure Control Solenoid 'C'\",\n    \"P0796\": \"Pressure Control Solenoid 'C' Performance or Stuck off\",\n    \"P0797\": \"Pressure Control Solenoid 'C' Stuck On\",\n    \"P0798\": \"Pressure Control Solenoid 'C' Electrical\",\n    \"P0799\": \"Pressure Control Solenoid 'C' Intermittent\",\n    \"P0800\": \"Transfer Case Control System (MIL Request)\",\n    \"P0801\": \"Reverse Inhibit Control Circuit\",\n    \"P0802\": \"Transmission Control System MIL Request Circuit/Open\",\n    \"P0803\": \"1-4 Upshift (Skip Shift) Solenoid Control Circuit\",\n    \"P0804\": \"1-4 Upshift (Skip Shift) Lamp Control Circuit\",\n    \"P0805\": \"Clutch Position Sensor Circuit\",\n    \"P0806\": \"Clutch Position Sensor Circuit Range/Performance\",\n    \"P0807\": \"Clutch Position Sensor Circuit Low\",\n    \"P0808\": \"Clutch Position Sensor Circuit High\",\n    \"P0809\": \"Clutch Position Sensor Circuit Intermittent\",\n    \"P0810\": \"Clutch Position Control Error\",\n    \"P0811\": \"Excessive Clutch Slippage\",\n    \"P0812\": \"Reverse Input Circuit\",\n    \"P0813\": \"Reverse Output Circuit\",\n    \"P0814\": \"Transmission Range Display Circuit\",\n    \"P0815\": \"Upshift Switch Circuit\",\n    \"P0816\": \"Downshift Switch Circuit\",\n    \"P0817\": \"Starter Disable Circuit\",\n    \"P0818\": \"Driveline Disconnect Switch Input Circuit\",\n    \"P0819\": \"Up and Down Shift Switch to Transmission Range Correlation\",\n    \"P0820\": \"Gear Lever X-Y Position Sensor Circuit\",\n    \"P0821\": \"Gear Lever X Position Circuit\",\n    \"P0822\": \"Gear Lever Y Position Circuit\",\n    \"P0823\": \"Gear Lever X Position Circuit Intermittent\",\n    \"P0824\": \"Gear Lever Y Position Circuit Intermittent\",\n    \"P0825\": \"Gear Lever Push-Pull Switch (Shift Anticipate)\",\n    \"P0826\": \"Up and Down Shift Switch Circuit\",\n    \"P0827\": \"Up and Down Shift Switch Circuit Low\",\n    \"P0828\": \"Up and Down Shift Switch Circuit High\",\n    \"P0829\": \"5-6 Shift\",\n    \"P0830\": \"Clutch Pedal Switch 'A' Circuit\",\n    \"P0831\": \"Clutch Pedal Switch 'A' Circuit Low\",\n    \"P0832\": \"Clutch Pedal Switch 'A' Circuit High\",\n    \"P0833\": \"Clutch Pedal Switch 'B' Circuit\",\n    \"P0834\": \"Clutch Pedal Switch 'B' Circuit Low\",\n    \"P0835\": \"Clutch Pedal Switch 'B' Circuit High\",\n    \"P0836\": \"Four Wheel Drive (4WD) Switch Circuit\",\n    \"P0837\": \"Four Wheel Drive (4WD) Switch Circuit Range/Performance\",\n    \"P0838\": \"Four Wheel Drive (4WD) Switch Circuit Low\",\n    \"P0839\": \"Four Wheel Drive (4WD) Switch Circuit High\",\n    \"P0840\": \"Transmission Fluid Pressure Sensor/Switch 'A' Circuit\",\n    \"P0841\": \"Transmission Fluid Pressure Sensor/Switch 'A' Circuit Range/Performance\",\n    \"P0842\": \"Transmission Fluid Pressure Sensor/Switch 'A' Circuit Low\",\n    \"P0843\": \"Transmission Fluid Pressure Sensor/Switch 'A' Circuit High\",\n    \"P0844\": \"Transmission Fluid Pressure Sensor/Switch 'A' Circuit Intermittent\",\n    \"P0845\": \"Transmission Fluid Pressure Sensor/Switch 'B' Circuit\",\n    \"P0846\": \"Transmission Fluid Pressure Sensor/Switch 'B' Circuit Range/Performance\",\n    \"P0847\": \"Transmission Fluid Pressure Sensor/Switch 'B' Circuit Low\",\n    \"P0848\": \"Transmission Fluid Pressure Sensor/Switch 'B' Circuit High\",\n    \"P0849\": \"Transmission Fluid Pressure Sensor/Switch 'B' Circuit Intermittent\",\n    \"P0850\": \"Park/Neutral Switch Input Circuit\",\n    \"P0851\": \"Park/Neutral Switch Input Circuit Low\",\n    \"P0852\": \"Park/Neutral Switch Input Circuit High\",\n    \"P0853\": \"Drive Switch Input Circuit\",\n    \"P0854\": \"Drive Switch Input Circuit Low\",\n    \"P0855\": \"Drive Switch Input Circuit High\",\n    \"P0856\": \"Traction Control Input Signal\",\n    \"P0857\": \"Traction Control Input Signal Range/Performance\",\n    \"P0858\": \"Traction Control Input Signal Low\",\n    \"P0859\": \"Traction Control Input Signal High\",\n    \"P0860\": \"Gear Shift Module Communication Circuit\",\n    \"P0861\": \"Gear Shift Module Communication Circuit Low\",\n    \"P0862\": \"Gear Shift Module Communication Circuit High\",\n    \"P0863\": \"TCM Communication Circuit\",\n    \"P0864\": \"TCM Communication Circuit Range/Performance\",\n    \"P0865\": \"TCM Communication Circuit Low\",\n    \"P0866\": \"TCM Communication Circuit High\",\n    \"P0867\": \"Transmission Fluid Pressure\",\n    \"P0868\": \"Transmission Fluid Pressure Low\",\n    \"P0869\": \"Transmission Fluid Pressure High\",\n    \"P0870\": \"Transmission Fluid Pressure Sensor/Switch 'C' Circuit\",\n    \"P0871\": \"Transmission Fluid Pressure Sensor/Switch 'C' Circuit Range/Performance\",\n    \"P0872\": \"Transmission Fluid Pressure Sensor/Switch 'C' Circuit Low\",\n    \"P0873\": \"Transmission Fluid Pressure Sensor/Switch 'C' Circuit High\",\n    \"P0874\": \"Transmission Fluid Pressure Sensor/Switch 'C' Circuit Intermittent\",\n    \"P0875\": \"Transmission Fluid Pressure Sensor/Switch 'D' Circuit\",\n    \"P0876\": \"Transmission Fluid Pressure Sensor/Switch 'D' Circuit Range/Performance\",\n    \"P0877\": \"Transmission Fluid Pressure Sensor/Switch 'D' Circuit Low\",\n    \"P0878\": \"Transmission Fluid Pressure Sensor/Switch 'D' Circuit High\",\n    \"P0879\": \"Transmission Fluid Pressure Sensor/Switch 'D' Circuit Intermittent\",\n    \"P0880\": \"TCM Power Input Signal\",\n    \"P0881\": \"TCM Power Input Signal Range/Performance\",\n    \"P0882\": \"TCM Power Input Signal Low\",\n    \"P0883\": \"TCM Power Input Signal High\",\n    \"P0884\": \"TCM Power Input Signal Intermittent\",\n    \"P0885\": \"TCM Power Relay Control Circuit/Open\",\n    \"P0886\": \"TCM Power Relay Control Circuit Low\",\n    \"P0887\": \"TCM Power Relay Control Circuit High\",\n    \"P0888\": \"TCM Power Relay Sense Circuit\",\n    \"P0889\": \"TCM Power Relay Sense Circuit Range/Performance\",\n    \"P0890\": \"TCM Power Relay Sense Circuit Low\",\n    \"P0891\": \"TCM Power Relay Sense Circuit High\",\n    \"P0892\": \"TCM Power Relay Sense Circuit Intermittent\",\n    \"P0893\": \"Multiple Gears Engaged\",\n    \"P0894\": \"Transmission Component Slipping\",\n    \"P0895\": \"Shift Time Too Short\",\n    \"P0896\": \"Shift Time Too Long\",\n    \"P0897\": \"Transmission Fluid Deteriorated\",\n    \"P0898\": \"Transmission Control System MIL Request Circuit Low\",\n    \"P0899\": \"Transmission Control System MIL Request Circuit High\",\n    \"P0900\": \"Clutch Actuator Circuit/Open\",\n    \"P0901\": \"Clutch Actuator Circuit Range/Performance\",\n    \"P0902\": \"Clutch Actuator Circuit Low\",\n    \"P0903\": \"Clutch Actuator Circuit High\",\n    \"P0904\": \"Gate Select Position Circuit\",\n    \"P0905\": \"Gate Select Position Circuit Range/Performance\",\n    \"P0906\": \"Gate Select Position Circuit Low\",\n    \"P0907\": \"Gate Select Position Circuit High\",\n    \"P0908\": \"Gate Select Position Circuit Intermittent\",\n    \"P0909\": \"Gate Select Control Error\",\n    \"P0910\": \"Gate Select Actuator Circuit/Open\",\n    \"P0911\": \"Gate Select Actuator Circuit Range/Performance\",\n    \"P0912\": \"Gate Select Actuator Circuit Low\",\n    \"P0913\": \"Gate Select Actuator Circuit High\",\n    \"P0914\": \"Gear Shift Position Circuit\",\n    \"P0915\": \"Gear Shift Position Circuit Range/Performance\",\n    \"P0916\": \"Gear Shift Position Circuit Low\",\n    \"P0917\": \"Gear Shift Position Circuit High\",\n    \"P0918\": \"Gear Shift Position Circuit Intermittent\",\n    \"P0919\": \"Gear Shift Position Control Error\",\n    \"P0920\": \"Gear Shift Forward Actuator Circuit/Open\",\n    \"P0921\": \"Gear Shift Forward Actuator Circuit Range/Performance\",\n    \"P0922\": \"Gear Shift Forward Actuator Circuit Low\",\n    \"P0923\": \"Gear Shift Forward Actuator Circuit High\",\n    \"P0924\": \"Gear Shift Reverse Actuator Circuit/Open\",\n    \"P0925\": \"Gear Shift Reverse Actuator Circuit Range/Performance\",\n    \"P0926\": \"Gear Shift Reverse Actuator Circuit Low\",\n    \"P0927\": \"Gear Shift Reverse Actuator Circuit High\",\n    \"P0928\": \"Gear Shift Lock Solenoid Control Circuit/Open\",\n    \"P0929\": \"Gear Shift Lock Solenoid Control Circuit Range/Performance\",\n    \"P0930\": \"Gear Shift Lock Solenoid Control Circuit Low\",\n    \"P0931\": \"Gear Shift Lock Solenoid Control Circuit High\",\n    \"P0932\": \"Hydraulic Pressure Sensor Circuit\",\n    \"P0933\": \"Hydraulic Pressure Sensor Range/Performance\",\n    \"P0934\": \"Hydraulic Pressure Sensor Circuit Low\",\n    \"P0935\": \"Hydraulic Pressure Sensor Circuit High\",\n    \"P0936\": \"Hydraulic Pressure Sensor Circuit Intermittent\",\n    \"P0937\": \"Hydraulic Oil Temperature Sensor Circuit\",\n    \"P0938\": \"Hydraulic Oil Temperature Sensor Range/Performance\",\n    \"P0939\": \"Hydraulic Oil Temperature Sensor Circuit Low\",\n    \"P0940\": \"Hydraulic Oil Temperature Sensor Circuit High\",\n    \"P0941\": \"Hydraulic Oil Temperature Sensor Circuit Intermittent\",\n    \"P0942\": \"Hydraulic Pressure Unit\",\n    \"P0943\": \"Hydraulic Pressure Unit Cycling Period Too Short\",\n    \"P0944\": \"Hydraulic Pressure Unit Loss of Pressure\",\n    \"P0945\": \"Hydraulic Pump Relay Circuit/Open\",\n    \"P0946\": \"Hydraulic Pump Relay Circuit Range/Performance\",\n    \"P0947\": \"Hydraulic Pump Relay Circuit Low\",\n    \"P0948\": \"Hydraulic Pump Relay Circuit High\",\n    \"P0949\": \"Auto Shift Manual Adaptive Learning Not Complete\",\n    \"P0950\": \"Auto Shift Manual Control Circuit\",\n    \"P0951\": \"Auto Shift Manual Control Circuit Range/Performance\",\n    \"P0952\": \"Auto Shift Manual Control Circuit Low\",\n    \"P0953\": \"Auto Shift Manual Control Circuit High\",\n    \"P0954\": \"Auto Shift Manual Control Circuit Intermittent\",\n    \"P0955\": \"Auto Shift Manual Mode Circuit\",\n    \"P0956\": \"Auto Shift Manual Mode Circuit Range/Performance\",\n    \"P0957\": \"Auto Shift Manual Mode Circuit Low\",\n    \"P0958\": \"Auto Shift Manual Mode Circuit High\",\n    \"P0959\": \"Auto Shift Manual Mode Circuit Intermittent\",\n    \"P0960\": \"Pressure Control Solenoid 'A' Control Circuit/Open\",\n    \"P0961\": \"Pressure Control Solenoid 'A' Control Circuit Range/Performance\",\n    \"P0962\": \"Pressure Control Solenoid 'A' Control Circuit Low\",\n    \"P0963\": \"Pressure Control Solenoid 'A' Control Circuit High\",\n    \"P0964\": \"Pressure Control Solenoid 'B' Control Circuit/Open\",\n    \"P0965\": \"Pressure Control Solenoid 'B' Control Circuit Range/Performance\",\n    \"P0966\": \"Pressure Control Solenoid 'B' Control Circuit Low\",\n    \"P0967\": \"Pressure Control Solenoid 'B' Control Circuit High\",\n    \"P0968\": \"Pressure Control Solenoid 'C' Control Circuit/Open\",\n    \"P0969\": \"Pressure Control Solenoid 'C' Control Circuit Range/Performance\",\n    \"P0970\": \"Pressure Control Solenoid 'C' Control Circuit Low\",\n    \"P0971\": \"Pressure Control Solenoid 'C' Control Circuit High\",\n    \"P0972\": \"Shift Solenoid 'A' Control Circuit Range/Performance\",\n    \"P0973\": \"Shift Solenoid 'A' Control Circuit Low\",\n    \"P0974\": \"Shift Solenoid 'A' Control Circuit High\",\n    \"P0975\": \"Shift Solenoid 'B' Control Circuit Range/Performance\",\n    \"P0976\": \"Shift Solenoid 'B' Control Circuit Low\",\n    \"P0977\": \"Shift Solenoid 'B' Control Circuit High\",\n    \"P0978\": \"Shift Solenoid 'C' Control Circuit Range/Performance\",\n    \"P0979\": \"Shift Solenoid 'C' Control Circuit Low\",\n    \"P0980\": \"Shift Solenoid 'C' Control Circuit High\",\n    \"P0981\": \"Shift Solenoid 'D' Control Circuit Range/Performance\",\n    \"P0982\": \"Shift Solenoid 'D' Control Circuit Low\",\n    \"P0983\": \"Shift Solenoid 'D' Control Circuit High\",\n    \"P0984\": \"Shift Solenoid 'E' Control Circuit Range/Performance\",\n    \"P0985\": \"Shift Solenoid 'E' Control Circuit Low\",\n    \"P0986\": \"Shift Solenoid 'E' Control Circuit High\",\n    \"P0987\": \"Transmission Fluid Pressure Sensor/Switch 'E' Circuit\",\n    \"P0988\": \"Transmission Fluid Pressure Sensor/Switch 'E' Circuit Range/Performance\",\n    \"P0989\": \"Transmission Fluid Pressure Sensor/Switch 'E' Circuit Low\",\n    \"P0990\": \"Transmission Fluid Pressure Sensor/Switch 'E' Circuit High\",\n    \"P0991\": \"Transmission Fluid Pressure Sensor/Switch 'E' Circuit Intermittent\",\n    \"P0992\": \"Transmission Fluid Pressure Sensor/Switch 'F' Circuit\",\n    \"P0993\": \"Transmission Fluid Pressure Sensor/Switch 'F' Circuit Range/Performance\",\n    \"P0994\": \"Transmission Fluid Pressure Sensor/Switch 'F' Circuit Low\",\n    \"P0995\": \"Transmission Fluid Pressure Sensor/Switch 'F' Circuit High\",\n    \"P0996\": \"Transmission Fluid Pressure Sensor/Switch 'F' Circuit Intermittent\",\n    \"P0997\": \"Shift Solenoid 'F' Control Circuit Range/Performance\",\n    \"P0998\": \"Shift Solenoid 'F' Control Circuit Low\",\n    \"P0999\": \"Shift Solenoid 'F' Control Circuit High\",\n    \"P0A00\": \"Motor Electronics Coolant Temperature Sensor Circuit\",\n    \"P0A01\": \"Motor Electronics Coolant Temperature Sensor Circuit Range/Performance\",\n    \"P0A02\": \"Motor Electronics Coolant Temperature Sensor Circuit Low\",\n    \"P0A03\": \"Motor Electronics Coolant Temperature Sensor Circuit High\",\n    \"P0A04\": \"Motor Electronics Coolant Temperature Sensor Circuit Intermittent\",\n    \"P0A05\": \"Motor Electronics Coolant Pump Control Circuit/Open\",\n    \"P0A06\": \"Motor Electronics Coolant Pump Control Circuit Low\",\n    \"P0A07\": \"Motor Electronics Coolant Pump Control Circuit High\",\n    \"P0A08\": \"DC/DC Converter Status Circuit\",\n    \"P0A09\": \"DC/DC Converter Status Circuit Low Input\",\n    \"P0A10\": \"DC/DC Converter Status Circuit High Input\",\n    \"P0A11\": \"DC/DC Converter Enable Circuit/Open\",\n    \"P0A12\": \"DC/DC Converter Enable Circuit Low\",\n    \"P0A13\": \"DC/DC Converter Enable Circuit High\",\n    \"P0A14\": \"Engine Mount Control Circuit/Open\",\n    \"P0A15\": \"Engine Mount Control Circuit Low\",\n    \"P0A16\": \"Engine Mount Control Circuit High\",\n    \"P0A17\": \"Motor Torque Sensor Circuit\",\n    \"P0A18\": \"Motor Torque Sensor Circuit Range/Performance\",\n    \"P0A19\": \"Motor Torque Sensor Circuit Low\",\n    \"P0A20\": \"Motor Torque Sensor Circuit High\",\n    \"P0A21\": \"Motor Torque Sensor Circuit Intermittent\",\n    \"P0A22\": \"Generator Torque Sensor Circuit\",\n    \"P0A23\": \"Generator Torque Sensor Circuit Range/Performance\",\n    \"P0A24\": \"Generator Torque Sensor Circuit Low\",\n    \"P0A25\": \"Generator Torque Sensor Circuit High\",\n    \"P0A26\": \"Generator Torque Sensor Circuit Intermittent\",\n    \"P0A27\": \"Battery Power Off Circuit\",\n    \"P0A28\": \"Battery Power Off Circuit Low\",\n    \"P0A29\": \"Battery Power Off Circuit High\",\n    \"P2000\": \"NOx Trap Efficiency Below Threshold\",\n    \"P2001\": \"NOx Trap Efficiency Below Threshold\",\n    \"P2002\": \"Particulate Trap Efficiency Below Threshold\",\n    \"P2003\": \"Particulate Trap Efficiency Below Threshold\",\n    \"P2004\": \"Intake Manifold Runner Control Stuck Open\",\n    \"P2005\": \"Intake Manifold Runner Control Stuck Open\",\n    \"P2006\": \"Intake Manifold Runner Control Stuck Closed\",\n    \"P2007\": \"Intake Manifold Runner Control Stuck Closed\",\n    \"P2008\": \"Intake Manifold Runner Control Circuit/Open\",\n    \"P2009\": \"Intake Manifold Runner Control Circuit Low\",\n    \"P2010\": \"Intake Manifold Runner Control Circuit High\",\n    \"P2011\": \"Intake Manifold Runner Control Circuit/Open\",\n    \"P2012\": \"Intake Manifold Runner Control Circuit Low\",\n    \"P2013\": \"Intake Manifold Runner Control Circuit High\",\n    \"P2014\": \"Intake Manifold Runner Position Sensor/Switch Circuit\",\n    \"P2015\": \"Intake Manifold Runner Position Sensor/Switch Circuit Range/Performance\",\n    \"P2016\": \"Intake Manifold Runner Position Sensor/Switch Circuit Low\",\n    \"P2017\": \"Intake Manifold Runner Position Sensor/Switch Circuit High\",\n    \"P2018\": \"Intake Manifold Runner Position Sensor/Switch Circuit Intermittent\",\n    \"P2019\": \"Intake Manifold Runner Position Sensor/Switch Circuit\",\n    \"P2020\": \"Intake Manifold Runner Position Sensor/Switch Circuit Range/Performance\",\n    \"P2021\": \"Intake Manifold Runner Position Sensor/Switch Circuit Low\",\n    \"P2022\": \"Intake Manifold Runner Position Sensor/Switch Circuit High\",\n    \"P2023\": \"Intake Manifold Runner Position Sensor/Switch Circuit Intermittent\",\n    \"P2024\": \"Evaporative Emissions (EVAP) Fuel Vapor Temperature Sensor Circuit\",\n    \"P2025\": \"Evaporative Emissions (EVAP) Fuel Vapor Temperature Sensor Performance\",\n    \"P2026\": \"Evaporative Emissions (EVAP) Fuel Vapor Temperature Sensor Circuit Low Voltage\",\n    \"P2027\": \"Evaporative Emissions (EVAP) Fuel Vapor Temperature Sensor Circuit High Voltage\",\n    \"P2028\": \"Evaporative Emissions (EVAP) Fuel Vapor Temperature Sensor Circuit Intermittent\",\n    \"P2029\": \"Fuel Fired Heater Disabled\",\n    \"P2030\": \"Fuel Fired Heater Performance\",\n    \"P2031\": \"Exhaust Gas Temperature Sensor Circuit\",\n    \"P2032\": \"Exhaust Gas Temperature Sensor Circuit Low\",\n    \"P2033\": \"Exhaust Gas Temperature Sensor Circuit High\",\n    \"P2034\": \"Exhaust Gas Temperature Sensor Circuit\",\n    \"P2035\": \"Exhaust Gas Temperature Sensor Circuit Low\",\n    \"P2036\": \"Exhaust Gas Temperature Sensor Circuit High\",\n    \"P2037\": \"Reductant Injection Air Pressure Sensor Circuit\",\n    \"P2038\": \"Reductant Injection Air Pressure Sensor Circuit Range/Performance\",\n    \"P2039\": \"Reductant Injection Air Pressure Sensor Circuit Low Input\",\n    \"P2040\": \"Reductant Injection Air Pressure Sensor Circuit High Input\",\n    \"P2041\": \"Reductant Injection Air Pressure Sensor Circuit Intermittent\",\n    \"P2042\": \"Reductant Temperature Sensor Circuit\",\n    \"P2043\": \"Reductant Temperature Sensor Circuit Range/Performance\",\n    \"P2044\": \"Reductant Temperature Sensor Circuit Low Input\",\n    \"P2045\": \"Reductant Temperature Sensor Circuit High Input\",\n    \"P2046\": \"Reductant Temperature Sensor Circuit Intermittent\",\n    \"P2047\": \"Reductant Injector Circuit/Open\",\n    \"P2048\": \"Reductant Injector Circuit Low\",\n    \"P2049\": \"Reductant Injector Circuit High\",\n    \"P2050\": \"Reductant Injector Circuit/Open\",\n    \"P2051\": \"Reductant Injector Circuit Low\",\n    \"P2052\": \"Reductant Injector Circuit High\",\n    \"P2053\": \"Reductant Injector Circuit/Open\",\n    \"P2054\": \"Reductant Injector Circuit Low\",\n    \"P2055\": \"Reductant Injector Circuit High\",\n    \"P2056\": \"Reductant Injector Circuit/Open\",\n    \"P2057\": \"Reductant Injector Circuit Low\",\n    \"P2058\": \"Reductant Injector Circuit High\",\n    \"P2059\": \"Reductant Injection Air Pump Control Circuit/Open\",\n    \"P2060\": \"Reductant Injection Air Pump Control Circuit Low\",\n    \"P2061\": \"Reductant Injection Air Pump Control Circuit High\",\n    \"P2062\": \"Reductant Supply Control Circuit/Open\",\n    \"P2063\": \"Reductant Supply Control Circuit Low\",\n    \"P2064\": \"Reductant Supply Control Circuit High\",\n    \"P2065\": \"Fuel Level Sensor 'B' Circuit\",\n    \"P2066\": \"Fuel Level Sensor 'B' Performance\",\n    \"P2067\": \"Fuel Level Sensor 'B' Circuit Low\",\n    \"P2068\": \"Fuel Level Sensor 'B' Circuit High\",\n    \"P2069\": \"Fuel Level Sensor 'B' Circuit Intermittent\",\n    \"P2070\": \"Intake Manifold Tuning (IMT) Valve Stuck Open\",\n    \"P2071\": \"Intake Manifold Tuning (IMT) Valve Stuck Closed\",\n    \"P2075\": \"Intake Manifold Tuning (IMT) Valve Position Sensor/Switch Circuit\",\n    \"P2076\": \"Intake Manifold Tuning (IMT) Valve Position Sensor/Switch Circuit Range/Performance\",\n    \"P2077\": \"Intake Manifold Tuning (IMT) Valve Position Sensor/Switch Circuit Low\",\n    \"P2078\": \"Intake Manifold Tuning (IMT) Valve Position Sensor/Switch Circuit High\",\n    \"P2079\": \"Intake Manifold Tuning (IMT) Valve Position Sensor/Switch Circuit Intermittent\",\n    \"P2080\": \"Exhaust Gas Temperature Sensor Circuit Range/Performance\",\n    \"P2081\": \"Exhaust Gas Temperature Sensor Circuit Intermittent\",\n    \"P2082\": \"Exhaust Gas Temperature Sensor Circuit Range/Performance\",\n    \"P2083\": \"Exhaust Gas Temperature Sensor Circuit Intermittent\",\n    \"P2084\": \"Exhaust Gas Temperature Sensor Circuit Range/Performance\",\n    \"P2085\": \"Exhaust Gas Temperature Sensor Circuit Intermittent\",\n    \"P2086\": \"Exhaust Gas Temperature Sensor Circuit Range/Performance\",\n    \"P2087\": \"Exhaust Gas Temperature Sensor Circuit Intermittent\",\n    \"P2088\": \"'A' Camshaft Position Actuator Control Circuit Low\",\n    \"P2089\": \"'A' Camshaft Position Actuator Control Circuit High\",\n    \"P2090\": \"'B' Camshaft Position Actuator Control Circuit Low\",\n    \"P2091\": \"'B' Camshaft Position Actuator Control Circuit High\",\n    \"P2092\": \"'A' Camshaft Position Actuator Control Circuit Low\",\n    \"P2093\": \"'A' Camshaft Position Actuator Control Circuit High\",\n    \"P2094\": \"'B' Camshaft Position Actuator Control Circuit Low\",\n    \"P2095\": \"'B' Camshaft Position Actuator Control Circuit High\",\n    \"P2096\": \"Post Catalyst Fuel Trim System Too Lean\",\n    \"P2097\": \"Post Catalyst Fuel Trim System Too Rich\",\n    \"P2098\": \"Post Catalyst Fuel Trim System Too Lean\",\n    \"P2099\": \"Post Catalyst Fuel Trim System Too Rich\",\n    \"P2100\": \"Throttle Actuator Control Motor Circuit/Open\",\n    \"P2101\": \"Throttle Actuator Control Motor Circuit Range/Performance\",\n    \"P2102\": \"Throttle Actuator Control Motor Circuit Low\",\n    \"P2103\": \"Throttle Actuator Control Motor Circuit High\",\n    \"P2104\": \"Throttle Actuator Control System - Forced Idle\",\n    \"P2105\": \"Throttle Actuator Control System - Forced Engine Shutdown\",\n    \"P2106\": \"Throttle Actuator Control System - Forced Limited Power\",\n    \"P2107\": \"Throttle Actuator Control Module Processor\",\n    \"P2108\": \"Throttle Actuator Control Module Performance\",\n    \"P2109\": \"Throttle/Pedal Position Sensor 'A' Minimum Stop Performance\",\n    \"P2110\": \"Throttle Actuator Control System - Forced Limited RPM\",\n    \"P2111\": \"Throttle Actuator Control System - Stuck Open\",\n    \"P2112\": \"Throttle Actuator Control System - Stuck Closed\",\n    \"P2113\": \"Throttle/Pedal Position Sensor 'B' Minimum Stop Performance\",\n    \"P2114\": \"Throttle/Pedal Position Sensor 'C' Minimum Stop Performance\",\n    \"P2115\": \"Throttle/Pedal Position Sensor 'D' Minimum Stop Performance\",\n    \"P2116\": \"Throttle/Pedal Position Sensor 'E' Minimum Stop Performance\",\n    \"P2117\": \"Throttle/Pedal Position Sensor 'F' Minimum Stop Performance\",\n    \"P2118\": \"Throttle Actuator Control Motor Current Range/Performance\",\n    \"P2119\": \"Throttle Actuator Control Throttle Body Range/Performance\",\n    \"P2120\": \"Throttle/Pedal Position Sensor/Switch 'D' Circuit\",\n    \"P2121\": \"Throttle/Pedal Position Sensor/Switch 'D' Circuit Range/Performance\",\n    \"P2122\": \"Throttle/Pedal Position Sensor/Switch 'D' Circuit Low Input\",\n    \"P2123\": \"Throttle/Pedal Position Sensor/Switch 'D' Circuit High Input\",\n    \"P2124\": \"Throttle/Pedal Position Sensor/Switch 'D' Circuit Intermittent\",\n    \"P2125\": \"Throttle/Pedal Position Sensor/Switch 'E' Circuit\",\n    \"P2126\": \"Throttle/Pedal Position Sensor/Switch 'E' Circuit Range/Performance\",\n    \"P2127\": \"Throttle/Pedal Position Sensor/Switch 'E' Circuit Low Input\",\n    \"P2128\": \"Throttle/Pedal Position Sensor/Switch 'E' Circuit High Input\",\n    \"P2129\": \"Throttle/Pedal Position Sensor/Switch 'E' Circuit Intermittent\",\n    \"P2130\": \"Throttle/Pedal Position Sensor/Switch 'F' Circuit\",\n    \"P2131\": \"Throttle/Pedal Position Sensor/Switch 'F' Circuit Range Performance\",\n    \"P2132\": \"Throttle/Pedal Position Sensor/Switch 'F' Circuit Low Input\",\n    \"P2133\": \"Throttle/Pedal Position Sensor/Switch 'F' Circuit High Input\",\n    \"P2134\": \"Throttle/Pedal Position Sensor/Switch 'F' Circuit Intermittent\",\n    \"P2135\": \"Throttle/Pedal Position Sensor/Switch 'A' / 'B' Voltage Correlation\",\n    \"P2136\": \"Throttle/Pedal Position Sensor/Switch 'A' / 'C' Voltage Correlation\",\n    \"P2137\": \"Throttle/Pedal Position Sensor/Switch 'B' / 'C' Voltage Correlation\",\n    \"P2138\": \"Throttle/Pedal Position Sensor/Switch 'D' / 'E' Voltage Correlation\",\n    \"P2139\": \"Throttle/Pedal Position Sensor/Switch 'D' / 'F' Voltage Correlation\",\n    \"P2140\": \"Throttle/Pedal Position Sensor/Switch 'E' / 'F' Voltage Correlation\",\n    \"P2141\": \"Exhaust Gas Recirculation Throttle Control Circuit Low\",\n    \"P2142\": \"Exhaust Gas Recirculation Throttle Control Circuit High\",\n    \"P2143\": \"Exhaust Gas Recirculation Vent Control Circuit/Open\",\n    \"P2144\": \"Exhaust Gas Recirculation Vent Control Circuit Low\",\n    \"P2145\": \"Exhaust Gas Recirculation Vent Control Circuit High\",\n    \"P2146\": \"Fuel Injector Group 'A' Supply Voltage Circuit/Open\",\n    \"P2147\": \"Fuel Injector Group 'A' Supply Voltage Circuit Low\",\n    \"P2148\": \"Fuel Injector Group 'A' Supply Voltage Circuit High\",\n    \"P2149\": \"Fuel Injector Group 'B' Supply Voltage Circuit/Open\",\n    \"P2150\": \"Fuel Injector Group 'B' Supply Voltage Circuit Low\",\n    \"P2151\": \"Fuel Injector Group 'B' Supply Voltage Circuit High\",\n    \"P2152\": \"Fuel Injector Group 'C' Supply Voltage Circuit/Open\",\n    \"P2153\": \"Fuel Injector Group 'C' Supply Voltage Circuit Low\",\n    \"P2154\": \"Fuel Injector Group 'C' Supply Voltage Circuit High\",\n    \"P2155\": \"Fuel Injector Group 'D' Supply Voltage Circuit/Open\",\n    \"P2156\": \"Fuel Injector Group 'D' Supply Voltage Circuit Low\",\n    \"P2157\": \"Fuel Injector Group 'D' Supply Voltage Circuit High\",\n    \"P2158\": \"Vehicle Speed Sensor 'B'\",\n    \"P2159\": \"Vehicle Speed Sensor 'B' Range/Performance\",\n    \"P2160\": \"Vehicle Speed Sensor 'B' Circuit Low\",\n    \"P2161\": \"Vehicle Speed Sensor 'B' Intermittent/Erratic\",\n    \"P2162\": \"Vehicle Speed Sensor 'A' / 'B' Correlation\",\n    \"P2163\": \"Throttle/Pedal Position Sensor 'A' Maximum Stop Performance\",\n    \"P2164\": \"Throttle/Pedal Position Sensor 'B' Maximum Stop Performance\",\n    \"P2165\": \"Throttle/Pedal Position Sensor 'C' Maximum Stop Performance\",\n    \"P2166\": \"Throttle/Pedal Position Sensor 'D' Maximum Stop Performance\",\n    \"P2167\": \"Throttle/Pedal Position Sensor 'E' Maximum Stop Performance\",\n    \"P2168\": \"Throttle/Pedal Position Sensor 'F' Maximum Stop Performance\",\n    \"P2169\": \"Exhaust Pressure Regulator Vent Solenoid Control Circuit/Open\",\n    \"P2170\": \"Exhaust Pressure Regulator Vent Solenoid Control Circuit Low\",\n    \"P2171\": \"Exhaust Pressure Regulator Vent Solenoid Control Circuit High\",\n    \"P2172\": \"Throttle Actuator Control System - Sudden High Airflow Detected\",\n    \"P2173\": \"Throttle Actuator Control System - High Airflow Detected\",\n    \"P2174\": \"Throttle Actuator Control System - Sudden Low Airflow Detected\",\n    \"P2175\": \"Throttle Actuator Control System - Low Airflow Detected\",\n    \"P2176\": \"Throttle Actuator Control System - Idle Position Not Learned\",\n    \"P2177\": \"System Too Lean Off Idle\",\n    \"P2178\": \"System Too Rich Off Idle\",\n    \"P2179\": \"System Too Lean Off Idle\",\n    \"P2180\": \"System Too Rich Off Idle\",\n    \"P2181\": \"Cooling System Performance\",\n    \"P2182\": \"Engine Coolant Temperature Sensor 2 Circuit\",\n    \"P2183\": \"Engine Coolant Temperature Sensor 2 Circuit Range/Performance\",\n    \"P2184\": \"Engine Coolant Temperature Sensor 2 Circuit Low\",\n    \"P2185\": \"Engine Coolant Temperature Sensor 2 Circuit High\",\n    \"P2186\": \"Engine Coolant Temperature Sensor 2 Circuit Intermittent/Erratic\",\n    \"P2187\": \"System Too Lean at Idle\",\n    \"P2188\": \"System Too Rich at Idle\",\n    \"P2189\": \"System Too Lean at Idle\",\n    \"P2190\": \"System Too Rich at Idle\",\n    \"P2191\": \"System Too Lean at Higher Load\",\n    \"P2192\": \"System Too Rich at Higher Load\",\n    \"P2193\": \"System Too Lean at Higher Load\",\n    \"P2194\": \"System Too Rich at Higher Load\",\n    \"P2195\": \"O2 Sensor Signal Stuck Lean\",\n    \"P2196\": \"O2 Sensor Signal Stuck Rich\",\n    \"P2197\": \"O2 Sensor Signal Stuck Lean\",\n    \"P2198\": \"O2 Sensor Signal Stuck Rich\",\n    \"P2199\": \"Intake Air Temperature Sensor 1 / 2 Correlation\",\n    \"P2200\": \"NOx Sensor Circuit\",\n    \"P2201\": \"NOx Sensor Circuit Range/Performance\",\n    \"P2202\": \"NOx Sensor Circuit Low Input\",\n    \"P2203\": \"NOx Sensor Circuit High Input\",\n    \"P2204\": \"NOx Sensor Circuit Intermittent Input\",\n    \"P2205\": \"NOx Sensor Heater Control Circuit/Open\",\n    \"P2206\": \"NOx Sensor Heater Control Circuit Low\",\n    \"P2207\": \"NOx Sensor Heater Control Circuit High\",\n    \"P2208\": \"NOx Sensor Heater Sense Circuit\",\n    \"P2209\": \"NOx Sensor Heater Sense Circuit Range/Performance\",\n    \"P2210\": \"NOx Sensor Heater Sense Circuit Low Input\",\n    \"P2211\": \"NOx Sensor Heater Sense Circuit High Input\",\n    \"P2212\": \"NOx Sensor Heater Sense Circuit Intermittent\",\n    \"P2213\": \"NOx Sensor Circuit\",\n    \"P2214\": \"NOx Sensor Circuit Range/Performance\",\n    \"P2215\": \"NOx Sensor Circuit Low Input\",\n    \"P2216\": \"NOx Sensor Circuit High Input\",\n    \"P2217\": \"NOx Sensor Circuit Intermittent Input\",\n    \"P2218\": \"NOx Sensor Heater Control Circuit/Open\",\n    \"P2219\": \"NOx Sensor Heater Control Circuit Low\",\n    \"P2220\": \"NOx Sensor Heater Control Circuit High\",\n    \"P2221\": \"NOx Sensor Heater Sense Circuit\",\n    \"P2222\": \"NOx Sensor Heater Sense Circuit Range/Performance\",\n    \"P2223\": \"NOx Sensor Heater Sense Circuit Low\",\n    \"P2224\": \"NOx Sensor Heater Sense Circuit High\",\n    \"P2225\": \"NOx Sensor Heater Sense Circuit Intermittent\",\n    \"P2226\": \"Barometric Pressure Circuit\",\n    \"P2227\": \"Barometric Pressure Circuit Range/Performance\",\n    \"P2228\": \"Barometric Pressure Circuit Low\",\n    \"P2229\": \"Barometric Pressure Circuit High\",\n    \"P2230\": \"Barometric Pressure Circuit Intermittent\",\n    \"P2231\": \"O2 Sensor Signal Circuit Shorted to Heater Circuit\",\n    \"P2232\": \"O2 Sensor Signal Circuit Shorted to Heater Circuit\",\n    \"P2233\": \"O2 Sensor Signal Circuit Shorted to Heater Circuit\",\n    \"P2234\": \"O2 Sensor Signal Circuit Shorted to Heater Circuit\",\n    \"P2235\": \"O2 Sensor Signal Circuit Shorted to Heater Circuit\",\n    \"P2236\": \"O2 Sensor Signal Circuit Shorted to Heater Circuit\",\n    \"P2237\": \"O2 Sensor Positive Current Control Circuit/Open\",\n    \"P2238\": \"O2 Sensor Positive Current Control Circuit Low\",\n    \"P2239\": \"O2 Sensor Positive Current Control Circuit High\",\n    \"P2240\": \"O2 Sensor Positive Current Control Circuit/Open\",\n    \"P2241\": \"O2 Sensor Positive Current Control Circuit Low\",\n    \"P2242\": \"O2 Sensor Positive Current Control Circuit High\",\n    \"P2243\": \"O2 Sensor Reference Voltage Circuit/Open\",\n    \"P2244\": \"O2 Sensor Reference Voltage Performance\",\n    \"P2245\": \"O2 Sensor Reference Voltage Circuit Low\",\n    \"P2246\": \"O2 Sensor Reference Voltage Circuit High\",\n    \"P2247\": \"O2 Sensor Reference Voltage Circuit/Open\",\n    \"P2248\": \"O2 Sensor Reference Voltage Performance\",\n    \"P2249\": \"O2 Sensor Reference Voltage Circuit Low\",\n    \"P2250\": \"O2 Sensor Reference Voltage Circuit High\",\n    \"P2251\": \"O2 Sensor Negative Current Control Circuit/Open\",\n    \"P2252\": \"O2 Sensor Negative Current Control Circuit Low\",\n    \"P2253\": \"O2 Sensor Negative Current Control Circuit High\",\n    \"P2254\": \"O2 Sensor Negative Current Control Circuit/Open\",\n    \"P2255\": \"O2 Sensor Negative Current Control Circuit Low\",\n    \"P2256\": \"O2 Sensor Negative Current Control Circuit High\",\n    \"P2257\": \"Secondary Air Injection System Control 'A' Circuit Low\",\n    \"P2258\": \"Secondary Air Injection System Control 'A' Circuit High\",\n    \"P2259\": \"Secondary Air Injection System Control 'B' Circuit Low\",\n    \"P2260\": \"Secondary Air Injection System Control 'B' Circuit High\",\n    \"P2261\": \"Turbo/Super Charger Bypass Valve - Mechanical\",\n    \"P2262\": \"Turbo Boost Pressure Not Detected - Mechanical\",\n    \"P2263\": \"Turbo/Super Charger Boost System Performance\",\n    \"P2264\": \"Water in Fuel Sensor Circuit\",\n    \"P2265\": \"Water in Fuel Sensor Circuit Range/Performance\",\n    \"P2266\": \"Water in Fuel Sensor Circuit Low\",\n    \"P2267\": \"Water in Fuel Sensor Circuit High\",\n    \"P2268\": \"Water in Fuel Sensor Circuit Intermittent\",\n    \"P2269\": \"Water in Fuel Condition\",\n    \"P2270\": \"O2 Sensor Signal Stuck Lean\",\n    \"P2271\": \"O2 Sensor Signal Stuck Rich\",\n    \"P2272\": \"O2 Sensor Signal Stuck Lean\",\n    \"P2273\": \"O2 Sensor Signal Stuck Rich\",\n    \"P2274\": \"O2 Sensor Signal Stuck Lean\",\n    \"P2275\": \"O2 Sensor Signal Stuck Rich\",\n    \"P2276\": \"O2 Sensor Signal Stuck Lean\",\n    \"P2277\": \"O2 Sensor Signal Stuck Rich\",\n    \"P2278\": \"O2 Sensor Signals Swapped Bank 1 Sensor 3 / Bank 2 Sensor 3\",\n    \"P2279\": \"Intake Air System Leak\",\n    \"P2280\": \"Air Flow Restriction / Air Leak Between Air Filter and MAF\",\n    \"P2281\": \"Air Leak Between MAF and Throttle Body\",\n    \"P2282\": \"Air Leak Between Throttle Body and Intake Valves\",\n    \"P2283\": \"Injector Control Pressure Sensor Circuit\",\n    \"P2284\": \"Injector Control Pressure Sensor Circuit Range/Performance\",\n    \"P2285\": \"Injector Control Pressure Sensor Circuit Low\",\n    \"P2286\": \"Injector Control Pressure Sensor Circuit High\",\n    \"P2287\": \"Injector Control Pressure Sensor Circuit Intermittent\",\n    \"P2288\": \"Injector Control Pressure Too High\",\n    \"P2289\": \"Injector Control Pressure Too High - Engine Off\",\n    \"P2290\": \"Injector Control Pressure Too Low\",\n    \"P2291\": \"Injector Control Pressure Too Low - Engine Cranking\",\n    \"P2292\": \"Injector Control Pressure Erratic\",\n    \"P2293\": \"Fuel Pressure Regulator 2 Performance\",\n    \"P2294\": \"Fuel Pressure Regulator 2 Control Circuit\",\n    \"P2295\": \"Fuel Pressure Regulator 2 Control Circuit Low\",\n    \"P2296\": \"Fuel Pressure Regulator 2 Control Circuit High\",\n    \"P2297\": \"O2 Sensor Out of Range During Deceleration\",\n    \"P2298\": \"O2 Sensor Out of Range During Deceleration\",\n    \"P2299\": \"Brake Pedal Position / Accelerator Pedal Position Incompatible\",\n    \"P2300\": \"Ignition Coil 'A' Primary Control Circuit Low\",\n    \"P2301\": \"Ignition Coil 'A' Primary Control Circuit High\",\n    \"P2302\": \"Ignition Coil 'A' Secondary Circuit\",\n    \"P2303\": \"Ignition Coil 'B' Primary Control Circuit Low\",\n    \"P2304\": \"Ignition Coil 'B' Primary Control Circuit High\",\n    \"P2305\": \"Ignition Coil 'B' Secondary Circuit\",\n    \"P2306\": \"Ignition Coil 'C' Primary Control Circuit Low\",\n    \"P2307\": \"Ignition Coil 'C' Primary Control Circuit High\",\n    \"P2308\": \"Ignition Coil 'C' Secondary Circuit\",\n    \"P2309\": \"Ignition Coil 'D' Primary Control Circuit Low\",\n    \"P2310\": \"Ignition Coil 'D' Primary Control Circuit High\",\n    \"P2311\": \"Ignition Coil 'D' Secondary Circuit\",\n    \"P2312\": \"Ignition Coil 'E' Primary Control Circuit Low\",\n    \"P2313\": \"Ignition Coil 'E' Primary Control Circuit High\",\n    \"P2314\": \"Ignition Coil 'E' Secondary Circuit\",\n    \"P2315\": \"Ignition Coil 'F' Primary Control Circuit Low\",\n    \"P2316\": \"Ignition Coil 'F' Primary Control Circuit High\",\n    \"P2317\": \"Ignition Coil 'F' Secondary Circuit\",\n    \"P2318\": \"Ignition Coil 'G' Primary Control Circuit Low\",\n    \"P2319\": \"Ignition Coil 'G' Primary Control Circuit High\",\n    \"P2320\": \"Ignition Coil 'G' Secondary Circuit\",\n    \"P2321\": \"Ignition Coil 'H' Primary Control Circuit Low\",\n    \"P2322\": \"Ignition Coil 'H' Primary Control Circuit High\",\n    \"P2323\": \"Ignition Coil 'H' Secondary Circuit\",\n    \"P2324\": \"Ignition Coil 'I' Primary Control Circuit Low\",\n    \"P2325\": \"Ignition Coil 'I' Primary Control Circuit High\",\n    \"P2326\": \"Ignition Coil 'I' Secondary Circuit\",\n    \"P2327\": \"Ignition Coil 'J' Primary Control Circuit Low\",\n    \"P2328\": \"Ignition Coil 'J' Primary Control Circuit High\",\n    \"P2329\": \"Ignition Coil 'J' Secondary Circuit\",\n    \"P2330\": \"Ignition Coil 'K' Primary Control Circuit Low\",\n    \"P2331\": \"Ignition Coil 'K' Primary Control Circuit High\",\n    \"P2332\": \"Ignition Coil 'K' Secondary Circuit\",\n    \"P2333\": \"Ignition Coil 'L' Primary Control Circuit Low\",\n    \"P2334\": \"Ignition Coil 'L' Primary Control Circuit High\",\n    \"P2335\": \"Ignition Coil 'L' Secondary Circuit\",\n    \"P2336\": \"Cylinder #1 Above Knock Threshold\",\n    \"P2337\": \"Cylinder #2 Above Knock Threshold\",\n    \"P2338\": \"Cylinder #3 Above Knock Threshold\",\n    \"P2339\": \"Cylinder #4 Above Knock Threshold\",\n    \"P2340\": \"Cylinder #5 Above Knock Threshold\",\n    \"P2341\": \"Cylinder #6 Above Knock Threshold\",\n    \"P2342\": \"Cylinder #7 Above Knock Threshold\",\n    \"P2343\": \"Cylinder #8 Above Knock Threshold\",\n    \"P2344\": \"Cylinder #9 Above Knock Threshold\",\n    \"P2345\": \"Cylinder #10 Above Knock Threshold\",\n    \"P2346\": \"Cylinder #11 Above Knock Threshold\",\n    \"P2347\": \"Cylinder #12 Above Knock Threshold\",\n    \"P2400\": \"Evaporative Emission System Leak Detection Pump Control Circuit/Open\",\n    \"P2401\": \"Evaporative Emission System Leak Detection Pump Control Circuit Low\",\n    \"P2402\": \"Evaporative Emission System Leak Detection Pump Control Circuit High\",\n    \"P2403\": \"Evaporative Emission System Leak Detection Pump Sense Circuit/Open\",\n    \"P2404\": \"Evaporative Emission System Leak Detection Pump Sense Circuit Range/Performance\",\n    \"P2405\": \"Evaporative Emission System Leak Detection Pump Sense Circuit Low\",\n    \"P2406\": \"Evaporative Emission System Leak Detection Pump Sense Circuit High\",\n    \"P2407\": \"Evaporative Emission System Leak Detection Pump Sense Circuit Intermittent/Erratic\",\n    \"P2408\": \"Fuel Cap Sensor/Switch Circuit\",\n    \"P2409\": \"Fuel Cap Sensor/Switch Circuit Range/Performance\",\n    \"P2410\": \"Fuel Cap Sensor/Switch Circuit Low\",\n    \"P2411\": \"Fuel Cap Sensor/Switch Circuit High\",\n    \"P2412\": \"Fuel Cap Sensor/Switch Circuit Intermittent/Erratic\",\n    \"P2413\": \"Exhaust Gas Recirculation System Performance\",\n    \"P2414\": \"O2 Sensor Exhaust Sample Error\",\n    \"P2415\": \"O2 Sensor Exhaust Sample Error\",\n    \"P2416\": \"O2 Sensor Signals Swapped Bank 1 Sensor 2 / Bank 1 Sensor 3\",\n    \"P2417\": \"O2 Sensor Signals Swapped Bank 2 Sensor 2 / Bank 2 Sensor 3\",\n    \"P2418\": \"Evaporative Emission System Switching Valve Control Circuit / Open\",\n    \"P2419\": \"Evaporative Emission System Switching Valve Control Circuit Low\",\n    \"P2420\": \"Evaporative Emission System Switching Valve Control Circuit High\",\n    \"P2421\": \"Evaporative Emission System Vent Valve Stuck Open\",\n    \"P2422\": \"Evaporative Emission System Vent Valve Stuck Closed\",\n    \"P2423\": \"HC Adsorption Catalyst Efficiency Below Threshold\",\n    \"P2424\": \"HC Adsorption Catalyst Efficiency Below Threshold\",\n    \"P2425\": \"Exhaust Gas Recirculation Cooling Valve Control Circuit/Open\",\n    \"P2426\": \"Exhaust Gas Recirculation Cooling Valve Control Circuit Low\",\n    \"P2427\": \"Exhaust Gas Recirculation Cooling Valve Control Circuit High\",\n    \"P2428\": \"Exhaust Gas Temperature Too High\",\n    \"P2429\": \"Exhaust Gas Temperature Too High\",\n    \"P2430\": \"Secondary Air Injection System Air Flow/Pressure Sensor Circuit\",\n    \"P2431\": \"Secondary Air Injection System Air Flow/Pressure Sensor Circuit Range/Performance\",\n    \"P2432\": \"Secondary Air Injection System Air Flow/Pressure Sensor Circuit Low\",\n    \"P2433\": \"Secondary Air Injection System Air Flow/Pressure Sensor Circuit High\",\n    \"P2434\": \"Secondary Air Injection System Air Flow/Pressure Sensor Circuit Intermittent/Erratic\",\n    \"P2435\": \"Secondary Air Injection System Air Flow/Pressure Sensor Circuit\",\n    \"P2436\": \"Secondary Air Injection System Air Flow/Pressure Sensor Circuit Range/Performance\",\n    \"P2437\": \"Secondary Air Injection System Air Flow/Pressure Sensor Circuit Low\",\n    \"P2438\": \"Secondary Air Injection System Air Flow/Pressure Sensor Circuit High\",\n    \"P2439\": \"Secondary Air Injection System Air Flow/Pressure Sensor Circuit Intermittent/Erratic\",\n    \"P2440\": \"Secondary Air Injection System Switching Valve Stuck Open\",\n    \"P2441\": \"Secondary Air Injection System Switching Valve Stuck Closed\",\n    \"P2442\": \"Secondary Air Injection System Switching Valve Stuck Open\",\n    \"P2443\": \"Secondary Air Injection System Switching Valve Stuck Closed\",\n    \"P2444\": \"Secondary Air Injection System Pump Stuck On\",\n    \"P2445\": \"Secondary Air Injection System Pump Stuck Off\",\n    \"P2446\": \"Secondary Air Injection System Pump Stuck On\",\n    \"P2447\": \"Secondary Air Injection System Pump Stuck Off\",\n    \"P2500\": \"Generator Lamp/L-Terminal Circuit Low\",\n    \"P2501\": \"Generator Lamp/L-Terminal Circuit High\",\n    \"P2502\": \"Charging System Voltage\",\n    \"P2503\": \"Charging System Voltage Low\",\n    \"P2504\": \"Charging System Voltage High\",\n    \"P2505\": \"ECM/PCM Power Input Signal\",\n    \"P2506\": \"ECM/PCM Power Input Signal Range/Performance\",\n    \"P2507\": \"ECM/PCM Power Input Signal Low\",\n    \"P2508\": \"ECM/PCM Power Input Signal High\",\n    \"P2509\": \"ECM/PCM Power Input Signal Intermittent\",\n    \"P2510\": \"ECM/PCM Power Relay Sense Circuit Range/Performance\",\n    \"P2511\": \"ECM/PCM Power Relay Sense Circuit Intermittent\",\n    \"P2512\": \"Event Data Recorder Request Circuit/ Open\",\n    \"P2513\": \"Event Data Recorder Request Circuit Low\",\n    \"P2514\": \"Event Data Recorder Request Circuit High\",\n    \"P2515\": \"A/C Refrigerant Pressure Sensor 'B' Circuit\",\n    \"P2516\": \"A/C Refrigerant Pressure Sensor 'B' Circuit Range/Performance\",\n    \"P2517\": \"A/C Refrigerant Pressure Sensor 'B' Circuit Low\",\n    \"P2518\": \"A/C Refrigerant Pressure Sensor 'B' Circuit High\",\n    \"P2519\": \"A/C Request 'A' Circuit\",\n    \"P2520\": \"A/C Request 'A' Circuit Low\",\n    \"P2521\": \"A/C Request 'A' Circuit High\",\n    \"P2522\": \"A/C Request 'B' Circuit\",\n    \"P2523\": \"A/C Request 'B' Circuit Low\",\n    \"P2524\": \"A/C Request 'B' Circuit High\",\n    \"P2525\": \"Vacuum Reservoir Pressure Sensor Circuit\",\n    \"P2526\": \"Vacuum Reservoir Pressure Sensor Circuit Range/Performance\",\n    \"P2527\": \"Vacuum Reservoir Pressure Sensor Circuit Low\",\n    \"P2528\": \"Vacuum Reservoir Pressure Sensor Circuit High\",\n    \"P2529\": \"Vacuum Reservoir Pressure Sensor Circuit Intermittent\",\n    \"P2530\": \"Ignition Switch Run Position Circuit\",\n    \"P2531\": \"Ignition Switch Run Position Circuit Low\",\n    \"P2532\": \"Ignition Switch Run Position Circuit High\",\n    \"P2533\": \"Ignition Switch Run/Start Position Circuit\",\n    \"P2534\": \"Ignition Switch Run/Start Position Circuit Low\",\n    \"P2535\": \"Ignition Switch Run/Start Position Circuit High\",\n    \"P2536\": \"Ignition Switch Accessory Position Circuit\",\n    \"P2537\": \"Ignition Switch Accessory Position Circuit Low\",\n    \"P2538\": \"Ignition Switch Accessory Position Circuit High\",\n    \"P2539\": \"Low Pressure Fuel System Sensor Circuit\",\n    \"P2540\": \"Low Pressure Fuel System Sensor Circuit Range/Performance\",\n    \"P2541\": \"Low Pressure Fuel System Sensor Circuit Low\",\n    \"P2542\": \"Low Pressure Fuel System Sensor Circuit High\",\n    \"P2543\": \"Low Pressure Fuel System Sensor Circuit Intermittent\",\n    \"P2544\": \"Torque Management Request Input Signal 'A'\",\n    \"P2545\": \"Torque Management Request Input Signal 'A' Range/Performance\",\n    \"P2546\": \"Torque Management Request Input Signal 'A' Low\",\n    \"P2547\": \"Torque Management Request Input Signal 'A' High\",\n    \"P2548\": \"Torque Management Request Input Signal 'B'\",\n    \"P2549\": \"Torque Management Request Input Signal 'B' Range/Performance\",\n    \"P2550\": \"Torque Management Request Input Signal 'B' Low\",\n    \"P2551\": \"Torque Management Request Input Signal 'B' High\",\n    \"P2552\": \"Throttle/Fuel Inhibit Circuit\",\n    \"P2553\": \"Throttle/Fuel Inhibit Circuit Range/Performance\",\n    \"P2554\": \"Throttle/Fuel Inhibit Circuit Low\",\n    \"P2555\": \"Throttle/Fuel Inhibit Circuit High\",\n    \"P2556\": \"Engine Coolant Level Sensor/Switch Circuit\",\n    \"P2557\": \"Engine Coolant Level Sensor/Switch Circuit Range/Performance\",\n    \"P2558\": \"Engine Coolant Level Sensor/Switch Circuit Low\",\n    \"P2559\": \"Engine Coolant Level Sensor/Switch Circuit High\",\n    \"P2560\": \"Engine Coolant Level Low\",\n    \"P2561\": \"A/C Control Module Requested MIL Illumination\",\n    \"P2562\": \"Turbocharger Boost Control Position Sensor Circuit\",\n    \"P2563\": \"Turbocharger Boost Control Position Sensor Circuit Range/Performance\",\n    \"P2564\": \"Turbocharger Boost Control Position Sensor Circuit Low\",\n    \"P2565\": \"Turbocharger Boost Control Position Sensor Circuit High\",\n    \"P2566\": \"Turbocharger Boost Control Position Sensor Circuit Intermittent\",\n    \"P2567\": \"Direct Ozone Reduction Catalyst Temperature Sensor Circuit\",\n    \"P2568\": \"Direct Ozone Reduction Catalyst Temperature Sensor Circuit Range/Performance\",\n    \"P2569\": \"Direct Ozone Reduction Catalyst Temperature Sensor Circuit Low\",\n    \"P2570\": \"Direct Ozone Reduction Catalyst Temperature Sensor Circuit High\",\n    \"P2571\": \"Direct Ozone Reduction Catalyst Temperature Sensor Circuit Intermittent/Erratic\",\n    \"P2572\": \"Direct Ozone Reduction Catalyst Deterioration Sensor Circuit\",\n    \"P2573\": \"Direct Ozone Reduction Catalyst Deterioration Sensor Circuit Range/Performance\",\n    \"P2574\": \"Direct Ozone Reduction Catalyst Deterioration Sensor Circuit Low\",\n    \"P2575\": \"Direct Ozone Reduction Catalyst Deterioration Sensor Circuit High\",\n    \"P2576\": \"Direct Ozone Reduction Catalyst Deterioration Sensor Circuit Intermittent/Erratic\",\n    \"P2577\": \"Direct Ozone Reduction Catalyst Efficiency Below Threshold\",\n    \"P2600\": \"Coolant Pump Control Circuit/Open\",\n    \"P2601\": \"Coolant Pump Control Circuit Range/Performance\",\n    \"P2602\": \"Coolant Pump Control Circuit Low\",\n    \"P2603\": \"Coolant Pump Control Circuit High\",\n    \"P2604\": \"Intake Air Heater 'A' Circuit Range/Performance\",\n    \"P2605\": \"Intake Air Heater 'A' Circuit/Open\",\n    \"P2606\": \"Intake Air Heater 'B' Circuit Range/Performance\",\n    \"P2607\": \"Intake Air Heater 'B' Circuit Low\",\n    \"P2608\": \"Intake Air Heater 'B' Circuit High\",\n    \"P2609\": \"Intake Air Heater System Performance\",\n    \"P2610\": \"ECM/PCM Internal Engine Off Timer Performance\",\n    \"P2611\": \"A/C Refrigerant Distribution Valve Control Circuit/Open\",\n    \"P2612\": \"A/C Refrigerant Distribution Valve Control Circuit Low\",\n    \"P2613\": \"A/C Refrigerant Distribution Valve Control Circuit High\",\n    \"P2614\": \"Camshaft Position Signal Output Circuit/Open\",\n    \"P2615\": \"Camshaft Position Signal Output Circuit Low\",\n    \"P2616\": \"Camshaft Position Signal Output Circuit High\",\n    \"P2617\": \"Crankshaft Position Signal Output Circuit/Open\",\n    \"P2618\": \"Crankshaft Position Signal Output Circuit Low\",\n    \"P2619\": \"Crankshaft Position Signal Output Circuit High\",\n    \"P2620\": \"Throttle Position Output Circuit/Open\",\n    \"P2621\": \"Throttle Position Output Circuit Low\",\n    \"P2622\": \"Throttle Position Output Circuit High\",\n    \"P2623\": \"Injector Control Pressure Regulator Circuit/Open\",\n    \"P2624\": \"Injector Control Pressure Regulator Circuit Low\",\n    \"P2625\": \"Injector Control Pressure Regulator Circuit High\",\n    \"P2626\": \"O2 Sensor Pumping Current Trim Circuit/Open\",\n    \"P2627\": \"O2 Sensor Pumping Current Trim Circuit Low\",\n    \"P2628\": \"O2 Sensor Pumping Current Trim Circuit High\",\n    \"P2629\": \"O2 Sensor Pumping Current Trim Circuit/Open\",\n    \"P2630\": \"O2 Sensor Pumping Current Trim Circuit Low\",\n    \"P2631\": \"O2 Sensor Pumping Current Trim Circuit High\",\n    \"P2632\": \"Fuel Pump 'B' Control Circuit /Open\",\n    \"P2633\": \"Fuel Pump 'B' Control Circuit Low\",\n    \"P2634\": \"Fuel Pump 'B' Control Circuit High\",\n    \"P2635\": \"Fuel Pump 'A' Low Flow / Performance\",\n    \"P2636\": \"Fuel Pump 'B' Low Flow / Performance\",\n    \"P2637\": \"Torque Management Feedback Signal 'A'\",\n    \"P2638\": \"Torque Management Feedback Signal 'A' Range/Performance\",\n    \"P2639\": \"Torque Management Feedback Signal 'A' Low\",\n    \"P2640\": \"Torque Management Feedback Signal 'A' High\",\n    \"P2641\": \"Torque Management Feedback Signal 'B'\",\n    \"P2642\": \"Torque Management Feedback Signal 'B' Range/Performance\",\n    \"P2643\": \"Torque Management Feedback Signal 'B' Low\",\n    \"P2644\": \"Torque Management Feedback Signal 'B' High\",\n    \"P2645\": \"'A' Rocker Arm Actuator Control Circuit/Open\",\n    \"P2646\": \"'A' Rocker Arm Actuator System Performance or Stuck Off\",\n    \"P2647\": \"'A' Rocker Arm Actuator System Stuck On\",\n    \"P2648\": \"'A' Rocker Arm Actuator Control Circuit Low\",\n    \"P2649\": \"'A' Rocker Arm Actuator Control Circuit High\",\n    \"P2650\": \"'B' Rocker Arm Actuator Control Circuit/Open\",\n    \"P2651\": \"'B' Rocker Arm Actuator System Performance or Stuck Off\",\n    \"P2652\": \"'B' Rocker Arm Actuator System Stuck On\",\n    \"P2653\": \"'B' Rocker Arm Actuator Control Circuit Low\",\n    \"P2654\": \"'B' Rocker Arm Actuator Control Circuit High\",\n    \"P2655\": \"'A' Rocker Arm Actuator Control Circuit/Open\",\n    \"P2656\": \"'A' Rocker Arm Actuator System Performance or Stuck Off\",\n    \"P2657\": \"'A' Rocker Arm Actuator System Stuck On\",\n    \"P2658\": \"'A' Rocker Arm Actuator Control Circuit Low\",\n    \"P2659\": \"'A' Rocker Arm Actuator Control Circuit High\",\n    \"P2660\": \"'B' Rocker Arm Actuator Control Circuit/Open\",\n    \"P2661\": \"'B' Rocker Arm Actuator System Performance or Stuck Off\",\n    \"P2662\": \"'B' Rocker Arm Actuator System Stuck On\",\n    \"P2663\": \"'B' Rocker Arm Actuator Control Circuit Low\",\n    \"P2664\": \"'B' Rocker Arm Actuator Control Circuit High\",\n    \"P2665\": \"Fuel Shutoff Valve 'B' Control Circuit/Open\",\n    \"P2666\": \"Fuel Shutoff Valve 'B' Control Circuit Low\",\n    \"P2667\": \"Fuel Shutoff Valve 'B' Control Circuit High\",\n    \"P2668\": \"Fuel Mode Indicator Lamp Control Circuit\",\n    \"P2669\": \"Actuator Supply Voltage 'B' Circuit /Open\",\n    \"P2670\": \"Actuator Supply Voltage 'B' Circuit Low\",\n    \"P2671\": \"Actuator Supply Voltage 'B' Circuit High\",\n    \"P2700\": \"Transmission Friction Element 'A' Apply Time Range/Performance\",\n    \"P2701\": \"Transmission Friction Element 'B' Apply Time Range/Performance\",\n    \"P2702\": \"Transmission Friction Element 'C' Apply Time Range/Performance\",\n    \"P2703\": \"Transmission Friction Element 'D' Apply Time Range/Performance\",\n    \"P2704\": \"Transmission Friction Element 'E' Apply Time Range/Performance\",\n    \"P2705\": \"Transmission Friction Element 'F' Apply Time Range/Performance\",\n    \"P2706\": \"Shift Solenoid 'F'\",\n    \"P2707\": \"Shift Solenoid 'F' Performance or Stuck Off\",\n    \"P2708\": \"Shift Solenoid 'F' Stuck On\",\n    \"P2709\": \"Shift Solenoid 'F' Electrical\",\n    \"P2710\": \"Shift Solenoid 'F' Intermittent\",\n    \"P2711\": \"Unexpected Mechanical Gear Disengagement\",\n    \"P2712\": \"Hydraulic Power Unit Leakage\",\n    \"P2713\": \"Pressure Control Solenoid 'D'\",\n    \"P2714\": \"Pressure Control Solenoid 'D' Performance or Stuck Off\",\n    \"P2715\": \"Pressure Control Solenoid 'D' Stuck On\",\n    \"P2716\": \"Pressure Control Solenoid 'D' Electrical\",\n    \"P2717\": \"Pressure Control Solenoid 'D' Intermittent\",\n    \"P2718\": \"Pressure Control Solenoid 'D' Control Circuit / Open\",\n    \"P2719\": \"Pressure Control Solenoid 'D' Control Circuit Range/Performance\",\n    \"P2720\": \"Pressure Control Solenoid 'D' Control Circuit Low\",\n    \"P2721\": \"Pressure Control Solenoid 'D' Control Circuit High\",\n    \"P2722\": \"Pressure Control Solenoid 'E'\",\n    \"P2723\": \"Pressure Control Solenoid 'E' Performance or Stuck Off\",\n    \"P2724\": \"Pressure Control Solenoid 'E' Stuck On\",\n    \"P2725\": \"Pressure Control Solenoid 'E' Electrical\",\n    \"P2726\": \"Pressure Control Solenoid 'E' Intermittent\",\n    \"P2727\": \"Pressure Control Solenoid 'E' Control Circuit / Open\",\n    \"P2728\": \"Pressure Control Solenoid 'E' Control Circuit Range/Performance\",\n    \"P2729\": \"Pressure Control Solenoid 'E' Control Circuit Low\",\n    \"P2730\": \"Pressure Control Solenoid 'E' Control Circuit High\",\n    \"P2731\": \"Pressure Control Solenoid 'F'\",\n    \"P2732\": \"Pressure Control Solenoid 'F' Performance or Stuck Off\",\n    \"P2733\": \"Pressure Control Solenoid 'F' Stuck On\",\n    \"P2734\": \"Pressure Control Solenoid 'F' Electrical\",\n    \"P2735\": \"Pressure Control Solenoid 'F' Intermittent\",\n    \"P2736\": \"Pressure Control Solenoid 'F' Control Circuit/Open\",\n    \"P2737\": \"Pressure Control Solenoid 'F' Control Circuit Range/Performance\",\n    \"P2738\": \"Pressure Control Solenoid 'F' Control Circuit Low\",\n    \"P2739\": \"Pressure Control Solenoid 'F' Control Circuit High\",\n    \"P2740\": \"Transmission Fluid Temperature Sensor 'B' Circuit\",\n    \"P2741\": \"Transmission Fluid Temperature Sensor 'B' Circuit Range Performance\",\n    \"P2742\": \"Transmission Fluid Temperature Sensor 'B' Circuit Low\",\n    \"P2743\": \"Transmission Fluid Temperature Sensor 'B' Circuit High\",\n    \"P2744\": \"Transmission Fluid Temperature Sensor 'B' Circuit Intermittent\",\n    \"P2745\": \"Intermediate Shaft Speed Sensor 'B' Circuit\",\n    \"P2746\": \"Intermediate Shaft Speed Sensor 'B' Circuit Range/Performance\",\n    \"P2747\": \"Intermediate Shaft Speed Sensor 'B' Circuit No Signal\",\n    \"P2748\": \"Intermediate Shaft Speed Sensor 'B' Circuit Intermittent\",\n    \"P2749\": \"Intermediate Shaft Speed Sensor 'C' Circuit\",\n    \"P2750\": \"Intermediate Shaft Speed Sensor 'C' Circuit Range/Performance\",\n    \"P2751\": \"Intermediate Shaft Speed Sensor 'C' Circuit No Signal\",\n    \"P2752\": \"Intermediate Shaft Speed Sensor 'C' Circuit Intermittent\",\n    \"P2753\": \"Transmission Fluid Cooler Control Circuit/Open\",\n    \"P2754\": \"Transmission Fluid Cooler Control Circuit Low\",\n    \"P2755\": \"Transmission Fluid Cooler Control Circuit High\",\n    \"P2756\": \"Torque Converter Clutch Pressure Control Solenoid\",\n    \"P2757\": \"Torque Converter Clutch Pressure Control Solenoid Control Circuit Performance or Stuck Off\",\n    \"P2758\": \"Torque Converter Clutch Pressure Control Solenoid Control Circuit Stuck On\",\n    \"P2759\": \"Torque Converter Clutch Pressure Control Solenoid Control Circuit Electrical\",\n    \"P2760\": \"Torque Converter Clutch Pressure Control Solenoid Control Circuit Intermittent\",\n    \"P2761\": \"Torque Converter Clutch Pressure Control Solenoid Control Circuit/Open\",\n    \"P2762\": \"Torque Converter Clutch Pressure Control Solenoid Control Circuit Range/Performance\",\n    \"P2763\": \"Torque Converter Clutch Pressure Control Solenoid Control Circuit High\",\n    \"P2764\": \"Torque Converter Clutch Pressure Control Solenoid Control Circuit Low\",\n    \"P2765\": \"Input/Turbine Speed Sensor 'B' Circuit\",\n    \"P2766\": \"Input/Turbine Speed Sensor 'B' Circuit Range/Performance\",\n    \"P2767\": \"Input/Turbine Speed Sensor 'B' Circuit No Signal\",\n    \"P2768\": \"Input/Turbine Speed Sensor 'B' Circuit Intermittent\",\n    \"P2769\": \"Torque Converter Clutch Circuit Low\",\n    \"P2770\": \"Torque Converter Clutch Circuit High\",\n    \"P2771\": \"Four Wheel Drive (4WD) Low Switch Circuit\",\n    \"P2772\": \"Four Wheel Drive (4WD) Low Switch Circuit Range/Performance\",\n    \"P2773\": \"Four Wheel Drive (4WD) Low Switch Circuit Low\",\n    \"P2774\": \"Four Wheel Drive (4WD) Low Switch Circuit High\",\n    \"P2775\": \"Upshift Switch Circuit Range/Performance\",\n    \"P2776\": \"Upshift Switch Circuit Low\",\n    \"P2777\": \"Upshift Switch Circuit High\",\n    \"P2778\": \"Upshift Switch Circuit Intermittent/Erratic\",\n    \"P2779\": \"Downshift Switch Circuit Range/Performance\",\n    \"P2780\": \"Downshift Switch Circuit Low\",\n    \"P2781\": \"Downshift Switch Circuit High\",\n    \"P2782\": \"Downshift Switch Circuit Intermittent/Erratic\",\n    \"P2783\": \"Torque Converter Temperature Too High\",\n    \"P2784\": \"Input/Turbine Speed Sensor 'A'/'B' Correlation\",\n    \"P2785\": \"Clutch Actuator Temperature Too High\",\n    \"P2786\": \"Gear Shift Actuator Temperature Too High\",\n    \"P2787\": \"Clutch Temperature Too High\",\n    \"P2788\": \"Auto Shift Manual Adaptive Learning at Limit\",\n    \"P2789\": \"Clutch Adaptive Learning at Limit\",\n    \"P2790\": \"Gate Select Direction Circuit\",\n    \"P2791\": \"Gate Select Direction Circuit Low\",\n    \"P2792\": \"Gate Select Direction Circuit High\",\n    \"P2793\": \"Gear Shift Direction Circuit\",\n    \"P2794\": \"Gear Shift Direction Circuit Low\",\n    \"P2795\": \"Gear Shift Direction Circuit High\",\n    \"P2A00\": \"O2 Sensor Circuit Range/Performance\",\n    \"P2A01\": \"O2 Sensor Circuit Range/Performance\",\n    \"P2A02\": \"O2 Sensor Circuit Range/Performance\",\n    \"P2A03\": \"O2 Sensor Circuit Range/Performance\",\n    \"P2A04\": \"O2 Sensor Circuit Range/Performance\",\n    \"P2A05\": \"O2 Sensor Circuit Range/Performance\",\n    \"P3400\": \"Cylinder Deactivation System\",\n    \"P3401\": \"Cylinder 1 Deactivation/lntake Valve Control Circuit/Open\",\n    \"P3402\": \"Cylinder 1 Deactivation/lntake Valve Control Performance\",\n    \"P3403\": \"Cylinder 1 Deactivation/lntake Valve Control Circuit Low\",\n    \"P3404\": \"Cylinder 1 Deactivation/lntake Valve Control Circuit High\",\n    \"P3405\": \"Cylinder 1 Exhaust Valve Control Circuit/Open\",\n    \"P3406\": \"Cylinder 1 Exhaust Valve Control Performance\",\n    \"P3407\": \"Cylinder 1 Exhaust Valve Control Circuit Low\",\n    \"P3408\": \"Cylinder 1 Exhaust Valve Control Circuit High\",\n    \"P3409\": \"Cylinder 2 Deactivation/lntake Valve Control Circuit/Open\",\n    \"P3410\": \"Cylinder 2 Deactivation/lntake Valve Control Performance\",\n    \"P3411\": \"Cylinder 2 Deactivation/lntake Valve Control Circuit Low\",\n    \"P3412\": \"Cylinder 2 Deactivation/lntake Valve Control Circuit High\",\n    \"P3413\": \"Cylinder 2 Exhaust Valve Control Circuit/Open\",\n    \"P3414\": \"Cylinder 2 Exhaust Valve Control Performance\",\n    \"P3415\": \"Cylinder 2 Exhaust Valve Control Circuit Low\",\n    \"P3416\": \"Cylinder 2 Exhaust Valve Control Circuit High\",\n    \"P3417\": \"Cylinder 3 Deactivation/lntake Valve Control Circuit/Open\",\n    \"P3418\": \"Cylinder 3 Deactivation/lntake Valve Control Performance\",\n    \"P3419\": \"Cylinder 3 Deactivation/lntake Valve Control Circuit Low\",\n    \"P3420\": \"Cylinder 3 Deactivation/lntake Valve Control Circuit High\",\n    \"P3421\": \"Cylinder 3 Exhaust Valve Control Circuit/Open\",\n    \"P3422\": \"Cylinder 3 Exhaust Valve Control Performance\",\n    \"P3423\": \"Cylinder 3 Exhaust Valve Control Circuit Low\",\n    \"P3424\": \"Cylinder 3 Exhaust Valve Control Circuit High\",\n    \"P3425\": \"Cylinder 4 Deactivation/lntake Valve Control Circuit/Open\",\n    \"P3426\": \"Cylinder 4 Deactivation/lntake Valve Control Performance\",\n    \"P3427\": \"Cylinder 4 Deactivation/lntake Valve Control Circuit Low\",\n    \"P3428\": \"Cylinder 4 Deactivation/lntake Valve Control Circuit High\",\n    \"P3429\": \"Cylinder 4 Exhaust Valve Control Circuit/Open\",\n    \"P3430\": \"Cylinder 4 Exhaust Valve Control Performance\",\n    \"P3431\": \"Cylinder 4 Exhaust Valve Control Circuit Low\",\n    \"P3432\": \"Cylinder 4 Exhaust Valve Control Circuit High\",\n    \"P3433\": \"Cylinder 5 Deactivation/lntake Valve Control Circuit/Open\",\n    \"P3434\": \"Cylinder 5 Deactivation/lntake Valve Control Performance\",\n    \"P3435\": \"Cylinder 5 Deactivation/lntake Valve Control Circuit Low\",\n    \"P3436\": \"Cylinder 5 Deactivation/lntake Valve Control Circuit High\",\n    \"P3437\": \"Cylinder 5 Exhaust Valve Control Circuit/Open\",\n    \"P3438\": \"Cylinder 5 Exhaust Valve Control Performance\",\n    \"P3439\": \"Cylinder 5 Exhaust Valve Control Circuit Low\",\n    \"P3440\": \"Cylinder 5 Exhaust Valve Control Circuit High\",\n    \"P3441\": \"Cylinder 6 Deactivation/lntake Valve Control Circuit/Open\",\n    \"P3442\": \"Cylinder 6 Deactivation/lntake Valve Control Performance\",\n    \"P3443\": \"Cylinder 6 Deactivation/lntake Valve Control Circuit Low\",\n    \"P3444\": \"Cylinder 6 Deactivation/lntake Valve Control Circuit High\",\n    \"P3445\": \"Cylinder 6 Exhaust Valve Control Circuit/Open\",\n    \"P3446\": \"Cylinder 6 Exhaust Valve Control Performance\",\n    \"P3447\": \"Cylinder 6 Exhaust Valve Control Circuit Low\",\n    \"P3448\": \"Cylinder 6 Exhaust Valve Control Circuit High\",\n    \"P3449\": \"Cylinder 7 Deactivation/lntake Valve Control Circuit/Open\",\n    \"P3450\": \"Cylinder 7 Deactivation/lntake Valve Control Performance\",\n    \"P3451\": \"Cylinder 7 Deactivation/lntake Valve Control Circuit Low\",\n    \"P3452\": \"Cylinder 7 Deactivation/lntake Valve Control Circuit High\",\n    \"P3453\": \"Cylinder 7 Exhaust Valve Control Circuit/Open\",\n    \"P3454\": \"Cylinder 7 Exhaust Valve Control Performance\",\n    \"P3455\": \"Cylinder 7 Exhaust Valve Control Circuit Low\",\n    \"P3456\": \"Cylinder 7 Exhaust Valve Control Circuit High\",\n    \"P3457\": \"Cylinder 8 Deactivation/lntake Valve Control Circuit/Open\",\n    \"P3458\": \"Cylinder 8 Deactivation/lntake Valve Control Performance\",\n    \"P3459\": \"Cylinder 8 Deactivation/lntake Valve Control Circuit Low\",\n    \"P3460\": \"Cylinder 8 Deactivation/lntake Valve Control Circuit High\",\n    \"P3461\": \"Cylinder 8 Exhaust Valve Control Circuit/Open\",\n    \"P3462\": \"Cylinder 8 Exhaust Valve Control Performance\",\n    \"P3463\": \"Cylinder 8 Exhaust Valve Control Circuit Low\",\n    \"P3464\": \"Cylinder 8 Exhaust Valve Control Circuit High\",\n    \"P3465\": \"Cylinder 9 Deactivation/lntake Valve Control Circuit/Open\",\n    \"P3466\": \"Cylinder 9 Deactivation/lntake Valve Control Performance\",\n    \"P3467\": \"Cylinder 9 Deactivation/lntake Valve Control Circuit Low\",\n    \"P3468\": \"Cylinder 9 Deactivation/lntake Valve Control Circuit High\",\n    \"P3469\": \"Cylinder 9 Exhaust Valve Control Circuit/Open\",\n    \"P3470\": \"Cylinder 9 Exhaust Valve Control Performance\",\n    \"P3471\": \"Cylinder 9 Exhaust Valve Control Circuit Low\",\n    \"P3472\": \"Cylinder 9 Exhaust Valve Control Circuit High\",\n    \"P3473\": \"Cylinder 10 Deactivation/lntake Valve Control Circuit/Open\",\n    \"P3474\": \"Cylinder 10 Deactivation/lntake Valve Control Performance\",\n    \"P3475\": \"Cylinder 10 Deactivation/lntake Valve Control Circuit Low\",\n    \"P3476\": \"Cylinder 10 Deactivation/lntake Valve Control Circuit High\",\n    \"P3477\": \"Cylinder 10 Exhaust Valve Control Circuit/Open\",\n    \"P3478\": \"Cylinder 10 Exhaust Valve Control Performance\",\n    \"P3479\": \"Cylinder 10 Exhaust Valve Control Circuit Low\",\n    \"P3480\": \"Cylinder 10 Exhaust Valve Control Circuit High\",\n    \"P3481\": \"Cylinder 11 Deactivation/lntake Valve Control Circuit/Open\",\n    \"P3482\": \"Cylinder 11 Deactivation/lntake Valve Control Performance\",\n    \"P3483\": \"Cylinder 11 Deactivation/lntake Valve Control Circuit Low\",\n    \"P3484\": \"Cylinder 11 Deactivation/lntake Valve Control Circuit High\",\n    \"P3485\": \"Cylinder 11 Exhaust Valve Control Circuit/Open\",\n    \"P3486\": \"Cylinder 11 Exhaust Valve Control Performance\",\n    \"P3487\": \"Cylinder 11 Exhaust Valve Control Circuit Low\",\n    \"P3488\": \"Cylinder 11 Exhaust Valve Control Circuit High\",\n    \"P3489\": \"Cylinder 12 Deactivation/lntake Valve Control Circuit/Open\",\n    \"P3490\": \"Cylinder 12 Deactivation/lntake Valve Control Performance\",\n    \"P3491\": \"Cylinder 12 Deactivation/lntake Valve Control Circuit Low\",\n    \"P3492\": \"Cylinder 12 Deactivation/lntake Valve Control Circuit High\",\n    \"P3493\": \"Cylinder 12 Exhaust Valve Control Circuit/Open\",\n    \"P3494\": \"Cylinder 12 Exhaust Valve Control Performance\",\n    \"P3495\": \"Cylinder 12 Exhaust Valve Control Circuit Low\",\n    \"P3496\": \"Cylinder 12 Exhaust Valve Control Circuit High\",\n    \"P3497\": \"Cylinder Deactivation System\",\n    \"U0001\": \"High Speed CAN Communication Bus\",\n    \"U0002\": \"High Speed CAN Communication Bus (Performance)\",\n    \"U0003\": \"High Speed CAN Communication Bus (Open)\",\n    \"U0004\": \"High Speed CAN Communication Bus (Low)\",\n    \"U0005\": \"High Speed CAN Communication Bus (High)\",\n    \"U0006\": \"High Speed CAN Communication Bus (Open)\",\n    \"U0007\": \"High Speed CAN Communication Bus (Low)\",\n    \"U0008\": \"High Speed CAN Communication Bus (High)\",\n    \"U0009\": \"High Speed CAN Communication Bus (shorted to Bus)\",\n    \"U0010\": \"Medium Speed CAN Communication Bus\",\n    \"U0011\": \"Medium Speed CAN Communication Bus (Performance)\",\n    \"U0012\": \"Medium Speed CAN Communication Bus (Open)\",\n    \"U0013\": \"Medium Speed CAN Communication Bus (Low)\",\n    \"U0014\": \"Medium Speed CAN Communication Bus (High)\",\n    \"U0015\": \"Medium Speed CAN Communication Bus (Open)\",\n    \"U0016\": \"Medium Speed CAN Communication Bus (Low)\",\n    \"U0017\": \"Medium Speed CAN Communication Bus (High)\",\n    \"U0018\": \"Medium Speed CAN Communication Bus (shorted to Bus)\",\n    \"U0019\": \"Low Speed CAN Communication Bus\",\n    \"U0020\": \"Low Speed CAN Communication Bus (Performance)\",\n    \"U0021\": \"Low Speed CAN Communication Bus (Open)\",\n    \"U0022\": \"Low Speed CAN Communication Bus (Low)\",\n    \"U0023\": \"Low Speed CAN Communication Bus (High)\",\n    \"U0024\": \"Low Speed CAN Communication Bus (Open)\",\n    \"U0025\": \"Low Speed CAN Communication Bus (Low)\",\n    \"U0026\": \"Low Speed CAN Communication Bus (High)\",\n    \"U0027\": \"Low Speed CAN Communication Bus (shorted to Bus)\",\n    \"U0028\": \"Vehicle Communication Bus A\",\n    \"U0029\": \"Vehicle Communication Bus A (Performance)\",\n    \"U0030\": \"Vehicle Communication Bus A (Open)\",\n    \"U0031\": \"Vehicle Communication Bus A (Low)\",\n    \"U0032\": \"Vehicle Communication Bus A (High)\",\n    \"U0033\": \"Vehicle Communication Bus A (Open)\",\n    \"U0034\": \"Vehicle Communication Bus A (Low)\",\n    \"U0035\": \"Vehicle Communication Bus A (High)\",\n    \"U0036\": \"Vehicle Communication Bus A (shorted to Bus A)\",\n    \"U0037\": \"Vehicle Communication Bus B\",\n    \"U0038\": \"Vehicle Communication Bus B (Performance)\",\n    \"U0039\": \"Vehicle Communication Bus B (Open)\",\n    \"U0040\": \"Vehicle Communication Bus B (Low)\",\n    \"U0041\": \"Vehicle Communication Bus B (High)\",\n    \"U0042\": \"Vehicle Communication Bus B (Open)\",\n    \"U0043\": \"Vehicle Communication Bus B (Low)\",\n    \"U0044\": \"Vehicle Communication Bus B (High)\",\n    \"U0045\": \"Vehicle Communication Bus B (shorted to Bus B)\",\n    \"U0046\": \"Vehicle Communication Bus C\",\n    \"U0047\": \"Vehicle Communication Bus C (Performance)\",\n    \"U0048\": \"Vehicle Communication Bus C (Open)\",\n    \"U0049\": \"Vehicle Communication Bus C (Low)\",\n    \"U0050\": \"Vehicle Communication Bus C (High)\",\n    \"U0051\": \"Vehicle Communication Bus C (Open)\",\n    \"U0052\": \"Vehicle Communication Bus C (Low)\",\n    \"U0053\": \"Vehicle Communication Bus C (High)\",\n    \"U0054\": \"Vehicle Communication Bus C (shorted to Bus C)\",\n    \"U0055\": \"Vehicle Communication Bus D\",\n    \"U0056\": \"Vehicle Communication Bus D (Performance)\",\n    \"U0057\": \"Vehicle Communication Bus D (Open)\",\n    \"U0058\": \"Vehicle Communication Bus D (Low)\",\n    \"U0059\": \"Vehicle Communication Bus D (High)\",\n    \"U0060\": \"Vehicle Communication Bus D (Open)\",\n    \"U0061\": \"Vehicle Communication Bus D (Low)\",\n    \"U0062\": \"Vehicle Communication Bus D (High)\",\n    \"U0063\": \"Vehicle Communication Bus D (shorted to Bus D)\",\n    \"U0064\": \"Vehicle Communication Bus E\",\n    \"U0065\": \"Vehicle Communication Bus E (Performance)\",\n    \"U0066\": \"Vehicle Communication Bus E (Open)\",\n    \"U0067\": \"Vehicle Communication Bus E (Low)\",\n    \"U0068\": \"Vehicle Communication Bus E (High)\",\n    \"U0069\": \"Vehicle Communication Bus E (Open)\",\n    \"U0070\": \"Vehicle Communication Bus E (Low)\",\n    \"U0071\": \"Vehicle Communication Bus E (High)\",\n    \"U0072\": \"Vehicle Communication Bus E (shorted to Bus E)\",\n    \"U0073\": \"Control Module Communication Bus Off\",\n    \"U0074\": \"Reserved by J2012\",\n    \"U0075\": \"Reserved by J2012\",\n    \"U0076\": \"Reserved by J2012\",\n    \"U0077\": \"Reserved by J2012\",\n    \"U0078\": \"Reserved by J2012\",\n    \"U0079\": \"Reserved by J2012\",\n    \"U0080\": \"Reserved by J2012\",\n    \"U0081\": \"Reserved by J2012\",\n    \"U0082\": \"Reserved by J2012\",\n    \"U0083\": \"Reserved by J2012\",\n    \"U0084\": \"Reserved by J2012\",\n    \"U0085\": \"Reserved by J2012\",\n    \"U0086\": \"Reserved by J2012\",\n    \"U0087\": \"Reserved by J2012\",\n    \"U0088\": \"Reserved by J2012\",\n    \"U0089\": \"Reserved by J2012\",\n    \"U0090\": \"Reserved by J2012\",\n    \"U0091\": \"Reserved by J2012\",\n    \"U0092\": \"Reserved by J2012\",\n    \"U0093\": \"Reserved by J2012\",\n    \"U0094\": \"Reserved by J2012\",\n    \"U0095\": \"Reserved by J2012\",\n    \"U0096\": \"Reserved by J2012\",\n    \"U0097\": \"Reserved by J2012\",\n    \"U0098\": \"Reserved by J2012\",\n    \"U0099\": \"Reserved by J2012\",\n    \"U0100\": \"Lost Communication With ECM/PCM A\",\n    \"U0101\": \"Lost Communication with TCM\",\n    \"U0102\": \"Lost Communication with Transfer Case Control Module\",\n    \"U0103\": \"Lost Communication With Gear Shift Module\",\n    \"U0104\": \"Lost Communication With Cruise Control Module\",\n    \"U0105\": \"Lost Communication With Fuel Injector Control Module\",\n    \"U0106\": \"Lost Communication With Glow Plug Control Module\",\n    \"U0107\": \"Lost Communication With Throttle Actuator Control Module\",\n    \"U0108\": \"Lost Communication With Alternative Fuel Control Module\",\n    \"U0109\": \"Lost Communication With Fuel Pump Control Module\",\n    \"U0110\": \"Lost Communication With Drive Motor Control Module\",\n    \"U0111\": \"Lost Communication With Battery Energy Control Module 'A'\",\n    \"U0112\": \"Lost Communication With Battery Energy Control Module 'B'\",\n    \"U0113\": \"Lost Communication With Emissions Critical Control Information\",\n    \"U0114\": \"Lost Communication With Four-Wheel Drive Clutch Control Module\",\n    \"U0115\": \"Lost Communication With ECM/PCM B\",\n    \"U0116\": \"Reserved by J2012\",\n    \"U0117\": \"Reserved by J2012\",\n    \"U0118\": \"Reserved by J2012\",\n    \"U0119\": \"Reserved by J2012\",\n    \"U0120\": \"Reserved by J2012\",\n    \"U0121\": \"Lost Communication With Anti-Lock Brake System (ABS) Control Module\",\n    \"U0122\": \"Lost Communication With Vehicle Dynamics Control Module\",\n    \"U0123\": \"Lost Communication With Yaw Rate Sensor Module\",\n    \"U0124\": \"Lost Communication With Lateral Acceleration Sensor Module\",\n    \"U0125\": \"Lost Communication With Multi-axis Acceleration Sensor Module\",\n    \"U0126\": \"Lost Communication With Steering Angle Sensor Module\",\n    \"U0127\": \"Lost Communication With Tire Pressure Monitor Module\",\n    \"U0128\": \"Lost Communication With Park Brake Control Module\",\n    \"U0129\": \"Lost Communication With Brake System Control Module\",\n    \"U0130\": \"Lost Communication With Steering Effort Control Module\",\n    \"U0131\": \"Lost Communication With Power Steering Control Module\",\n    \"U0132\": \"Lost Communication With Ride Level Control Module\",\n    \"U0133\": \"Reserved by J2012\",\n    \"U0134\": \"Reserved by J2012\",\n    \"U0135\": \"Reserved by J2012\",\n    \"U0136\": \"Reserved by J2012\",\n    \"U0137\": \"Reserved by J2012\",\n    \"U0138\": \"Reserved by J2012\",\n    \"U0139\": \"Reserved by J2012\",\n    \"U0140\": \"Lost Communication With Body Control Module\",\n    \"U0141\": \"Lost Communication With Body Control Module 'A'\",\n    \"U0142\": \"Lost Communication With Body Control Module 'B'\",\n    \"U0143\": \"Lost Communication With Body Control Module 'C'\",\n    \"U0144\": \"Lost Communication With Body Control Module 'D'\",\n    \"U0145\": \"Lost Communication With Body Control Module 'E'\",\n    \"U0146\": \"Lost Communication With Gateway 'A'\",\n    \"U0147\": \"Lost Communication With Gateway 'B'\",\n    \"U0148\": \"Lost Communication With Gateway 'C'\",\n    \"U0149\": \"Lost Communication With Gateway 'D'\",\n    \"U0150\": \"Lost Communication With Gateway 'E'\",\n    \"U0151\": \"Lost Communication With Restraints Control Module\",\n    \"U0152\": \"Lost Communication With Side Restraints Control Module Left\",\n    \"U0153\": \"Lost Communication With Side Restraints Control Module Right\",\n    \"U0154\": \"Lost Communication With Restraints Occupant Sensing Control Module\",\n    \"U0155\": \"Lost Communication With Instrument Panel Cluster (IPC) Control Module\",\n    \"U0156\": \"Lost Communication With Information Center 'A'\",\n    \"U0157\": \"Lost Communication With Information Center 'B'\",\n    \"U0158\": \"Lost Communication With Head Up Display\",\n    \"U0159\": \"Lost Communication With Parking Assist Control Module\",\n    \"U0160\": \"Lost Communication With Audible Alert Control Module\",\n    \"U0161\": \"Lost Communication With Compass Module\",\n    \"U0162\": \"Lost Communication With Navigation Display Module\",\n    \"U0163\": \"Lost Communication With Navigation Control Module\",\n    \"U0164\": \"Lost Communication With HVAC Control Module\",\n    \"U0165\": \"Lost Communication With HVAC Control Module Rear\",\n    \"U0166\": \"Lost Communication With Auxiliary Heater Control Module\",\n    \"U0167\": \"Lost Communication With Vehicle Immobilizer Control Module\",\n    \"U0168\": \"Lost Communication With Vehicle Security Control Module\",\n    \"U0169\": \"Lost Communication With Sunroof Control Module\",\n    \"U0170\": \"Lost Communication With 'Restraints System Sensor A'\",\n    \"U0171\": \"Lost Communication With 'Restraints System Sensor B'\",\n    \"U0172\": \"Lost Communication With 'Restraints System Sensor C'\",\n    \"U0173\": \"Lost Communication With 'Restraints System Sensor D'\",\n    \"U0174\": \"Lost Communication With 'Restraints System Sensor E'\",\n    \"U0175\": \"Lost Communication With 'Restraints System Sensor F'\",\n    \"U0176\": \"Lost Communication With 'Restraints System Sensor G'\",\n    \"U0177\": \"Lost Communication With 'Restraints System Sensor H'\",\n    \"U0178\": \"Lost Communication With 'Restraints System Sensor I'\",\n    \"U0179\": \"Lost Communication With 'Restraints System Sensor J'\",\n    \"U0180\": \"Lost Communication With Automatic Lighting Control Module\",\n    \"U0181\": \"Lost Communication With Headlamp Leveling Control Module\",\n    \"U0182\": \"Lost Communication With Lighting Control Module Front\",\n    \"U0183\": \"Lost Communication With Lighting Control Module Rear\",\n    \"U0184\": \"Lost Communication With Radio\",\n    \"U0185\": \"Lost Communication With Antenna Control Module\",\n    \"U0186\": \"Lost Communication With Audio Amplifier\",\n    \"U0187\": \"Lost Communication With Digital Disc Player/Changer Module 'A'\",\n    \"U0188\": \"Lost Communication With Digital Disc Player/Changer Module 'B'\",\n    \"U0189\": \"Lost Communication With Digital Disc Player/Changer Module 'C'\",\n    \"U0190\": \"Lost Communication With Digital Disc Player/Changer Module 'D'\",\n    \"U0191\": \"Lost Communication With Television\",\n    \"U0192\": \"Lost Communication With Personal Computer\",\n    \"U0193\": \"Lost Communication With 'Digital Audio Control Module A'\",\n    \"U0194\": \"Lost Communication With 'Digital Audio Control Module B'\",\n    \"U0195\": \"Lost Communication With Subscription Entertainment Receiver Module\",\n    \"U0196\": \"Lost Communication With Rear Seat Entertainment Control Module\",\n    \"U0197\": \"Lost Communication With Telephone Control Module\",\n    \"U0198\": \"Lost Communication With Telematic Control Module\",\n    \"U0199\": \"Lost Communication With 'Door Control Module A'\",\n    \"U0200\": \"Lost Communication With 'Door Control Module B'\",\n    \"U0201\": \"Lost Communication With 'Door Control Module C'\",\n    \"U0202\": \"Lost Communication With 'Door Control Module D'\",\n    \"U0203\": \"Lost Communication With 'Door Control Module E'\",\n    \"U0204\": \"Lost Communication With 'Door Control Module F'\",\n    \"U0205\": \"Lost Communication With 'Door Control Module G'\",\n    \"U0206\": \"Lost Communication With Folding Top Control Module\",\n    \"U0207\": \"Lost Communication With Moveable Roof Control Module\",\n    \"U0208\": \"Lost Communication With 'Seat Control Module A'\",\n    \"U0209\": \"Lost Communication With 'Seat Control Module B'\",\n    \"U0210\": \"Lost Communication With 'Seat Control Module C'\",\n    \"U0211\": \"Lost Communication With 'Seat Control Module D'\",\n    \"U0212\": \"Lost Communication With Steering Column Control Module\",\n    \"U0213\": \"Lost Communication With Mirror Control Module\",\n    \"U0214\": \"Lost Communication With Remote Function Actuation\",\n    \"U0215\": \"Lost Communication With 'Door Switch A'\",\n    \"U0216\": \"Lost Communication With 'Door Switch B'\",\n    \"U0217\": \"Lost Communication With 'Door Switch C'\",\n    \"U0218\": \"Lost Communication With 'Door Switch D'\",\n    \"U0219\": \"Lost Communication With 'Door Switch E'\",\n    \"U0220\": \"Lost Communication With 'Door Switch F'\",\n    \"U0221\": \"Lost Communication With 'Door Switch G'\",\n    \"U0222\": \"Lost Communication With 'Door Window Motor A'\",\n    \"U0223\": \"Lost Communication With 'Door Window Motor B'\",\n    \"U0224\": \"Lost Communication With 'Door Window Motor C'\",\n    \"U0225\": \"Lost Communication With 'Door Window Motor D'\",\n    \"U0226\": \"Lost Communication With 'Door Window Motor E'\",\n    \"U0227\": \"Lost Communication With 'Door Window Motor F'\",\n    \"U0228\": \"Lost Communication With 'Door Window Motor G'\",\n    \"U0229\": \"Lost Communication With Heated Steering Wheel Module\",\n    \"U0230\": \"Lost Communication With Rear Gate Module\",\n    \"U0231\": \"Lost Communication With Rain Sensing Module\",\n    \"U0232\": \"Lost Communication With Side Obstacle Detection Control Module Left\",\n    \"U0233\": \"Lost Communication With Side Obstacle Detection Control Module Right\",\n    \"U0234\": \"Lost Communication With Convenience Recall Module\",\n    \"U0235\": \"Lost Communication With Cruise Control Front Distance Range Sensor\",\n    \"U0300\": \"Internal Control Module Software Incompatibility\",\n    \"U0301\": \"Software Incompatibility with ECM/PCM\",\n    \"U0302\": \"Software Incompatibility with Transmission Control Module\",\n    \"U0303\": \"Software Incompatibility with Transfer Case Control Module\",\n    \"U0304\": \"Software Incompatibility with Gear Shift Control Module\",\n    \"U0305\": \"Software Incompatibility with Cruise Control Module\",\n    \"U0306\": \"Software Incompatibility with Fuel Injector Control Module\",\n    \"U0307\": \"Software Incompatibility with Glow Plug Control Module\",\n    \"U0308\": \"Software Incompatibility with Throttle Actuator Control Module\",\n    \"U0309\": \"Software Incompatibility with Alternative Fuel Control Module\",\n    \"U0310\": \"Software Incompatibility with Fuel Pump Control Module\",\n    \"U0311\": \"Software Incompatibility with Drive Motor Control Module\",\n    \"U0312\": \"Software Incompatibility with Battery Energy Control Module A\",\n    \"U0313\": \"Software Incompatibility with Battery Energy Control Module B\",\n    \"U0314\": \"Software Incompatibility with Four-Wheel Drive Clutch Control Module\",\n    \"U0315\": \"Software Incompatibility with Anti-Lock Brake System Control Module\",\n    \"U0316\": \"Software Incompatibility with Vehicle Dynamics Control Module\",\n    \"U0317\": \"Software Incompatibility with Park Brake Control Module\",\n    \"U0318\": \"Software Incompatibility with Brake System Control Module\",\n    \"U0319\": \"Software Incompatibility with Steering Effort Control Module\",\n    \"U0320\": \"Software Incompatibility with Power Steering Control Module\",\n    \"U0321\": \"Software Incompatibility with Ride Level Control Module\",\n    \"U0322\": \"Software Incompatibility with Body Control Module\",\n    \"U0323\": \"Software Incompatibility with Instrument Panel Control Module\",\n    \"U0324\": \"Software Incompatibility with HVAC Control Module\",\n    \"U0325\": \"Software Incompatibility with Auxiliary Heater Control Module\",\n    \"U0326\": \"Software Incompatibility with Vehicle Immobilizer Control Module\",\n    \"U0327\": \"Software Incompatibility with Vehicle Security Control Module\",\n    \"U0328\": \"Software Incompatibility with Steering Angle Sensor Module\",\n    \"U0329\": \"Software Incompatibility with Steering Column Control Module\",\n    \"U0330\": \"Software Incompatibility with Tire Pressure Monitor Module\",\n    \"U0331\": \"Software Incompatibility with Body Control Module 'A'\",\n    \"U0400\": \"Invalid Data Received\",\n    \"U0401\": \"Invalid Data Received From ECM/PCM\",\n    \"U0402\": \"Invalid Data Received From Transmission Control Module\",\n    \"U0403\": \"Invalid Data Received From Transfer Case Control Module\",\n    \"U0404\": \"Invalid Data Received From Gear Shift Control Module\",\n    \"U0405\": \"Invalid Data Received From Cruise Control Module\",\n    \"U0406\": \"Invalid Data Received From Fuel Injector Control Module\",\n    \"U0407\": \"Invalid Data Received From Glow Plug Control Module\",\n    \"U0408\": \"Invalid Data Received From Throttle Actuator Control Module\",\n    \"U0409\": \"Invalid Data Received From Alternative Fuel Control Module\",\n    \"U0410\": \"Invalid Data Received From Fuel Pump Control Module\",\n    \"U0411\": \"Invalid Data Received From Drive Motor Control Module\",\n    \"U0412\": \"Invalid Data Received From Battery Energy Control Module A\",\n    \"U0413\": \"Invalid Data Received From Battery Energy Control Module B\",\n    \"U0414\": \"Invalid Data Received From Four-Wheel Drive Clutch Control Module\",\n    \"U0415\": \"Invalid Data Received From Anti-Lock Brake System Control Module\",\n    \"U0416\": \"Invalid Data Received From Vehicle Dynamics Control Module\",\n    \"U0417\": \"Invalid Data Received From Park Brake Control Module\",\n    \"U0418\": \"Invalid Data Received From Brake System Control Module\",\n    \"U0419\": \"Invalid Data Received From Steering Effort Control Module\",\n    \"U0420\": \"Invalid Data Received From Power Steering Control Module\",\n    \"U0421\": \"Invalid Data Received From Ride Level Control Module\",\n    \"U0422\": \"Invalid Data Received From Body Control Module\",\n    \"U0423\": \"Invalid Data Received From Instrument Panel Control Module\",\n    \"U0424\": \"Invalid Data Received From HVAC Control Module\",\n    \"U0425\": \"Invalid Data Received From Auxiliary Heater Control Module\",\n    \"U0426\": \"Invalid Data Received From Vehicle Immobilizer Control Module\",\n    \"U0427\": \"Invalid Data Received From Vehicle Security Control Module\",\n    \"U0428\": \"Invalid Data Received From Steering Angle Sensor Module\",\n    \"U0429\": \"Invalid Data Received From Steering Column Control Module\",\n    \"U0430\": \"Invalid Data Received From Tire Pressure Monitor Module\",\n    \"U0431\": \"Invalid Data Received From Body Control Module 'A'\",\n}\nIGNITION_TYPE = [\"spark\", \"compression\"]\nBASE_TESTS = [\"MISFIRE_MONITORING\", \"FUEL_SYSTEM_MONITORING\", \"COMPONENT_MONITORING\"]\nSPARK_TESTS = [\n    \"CATALYST_MONITORING\",\n    \"HEATED_CATALYST_MONITORING\",\n    \"EVAPORATIVE_SYSTEM_MONITORING\",\n    \"SECONDARY_AIR_SYSTEM_MONITORING\",\n    None,\n    \"OXYGEN_SENSOR_MONITORING\",\n    \"OXYGEN_SENSOR_HEATER_MONITORING\",\n    \"EGR_VVT_SYSTEM_MONITORING\",\n]\nCOMPRESSION_TESTS = [\n    \"NMHC_CATALYST_MONITORING\",\n    \"NOX_SCR_AFTERTREATMENT_MONITORING\",\n    None,\n    \"BOOST_PRESSURE_MONITORING\",\n    None,\n    \"EXHAUST_GAS_SENSOR_MONITORING\",\n    \"PM_FILTER_MONITORING\",\n    \"EGR_VVT_SYSTEM_MONITORING\",\n]\nFUEL_STATUS = [\n    \"Open loop due to insufficient engine temperature\",\n    \"Closed loop, using oxygen sensor feedback to determine fuel mix\",\n    \"Open loop due to engine load OR fuel cut due to deceleration\",\n    \"Open loop due to system failure\",\n    \"Closed loop, using at least one oxygen sensor but there is a fault in the feedback system\",\n]\nAIR_STATUS = [\n    \"Upstream\",\n    \"Downstream of catalytic converter\",\n    \"From the outside atmosphere or off\",\n    \"Pump commanded on for diagnostics\",\n]\nOBD_COMPLIANCE = [\n    \"Undefined\",\n    \"OBD-II as defined by the CARB\",\n    \"OBD as defined by the EPA\",\n    \"OBD and OBD-II\",\n    \"OBD-I\",\n    \"Not OBD compliant\",\n    \"EOBD (Europe)\",\n    \"EOBD and OBD-II\",\n    \"EOBD and OBD\",\n    \"EOBD, OBD and OBD II\",\n    \"JOBD (Japan)\",\n    \"JOBD and OBD II\",\n    \"JOBD and EOBD\",\n    \"JOBD, EOBD, and OBD II\",\n    \"Reserved\",\n    \"Reserved\",\n    \"Reserved\",\n    \"Engine Manufacturer Diagnostics (EMD)\",\n    \"Engine Manufacturer Diagnostics Enhanced (EMD+)\",\n    \"Heavy Duty On-Board Diagnostics (Child/Partial) (HD OBD-C)\",\n    \"Heavy Duty On-Board Diagnostics (HD OBD)\",\n    \"World Wide Harmonized OBD (WWH OBD)\",\n    \"Reserved\",\n    \"Heavy Duty Euro OBD Stage I without NOx control (HD EOBD-I)\",\n    \"Heavy Duty Euro OBD Stage I with NOx control (HD EOBD-I N)\",\n    \"Heavy Duty Euro OBD Stage II without NOx control (HD EOBD-II)\",\n    \"Heavy Duty Euro OBD Stage II with NOx control (HD EOBD-II N)\",\n    \"Reserved\",\n    \"Brazil OBD Phase 1 (OBDBr-1)\",\n    \"Brazil OBD Phase 2 (OBDBr-2)\",\n    \"Korean OBD (KOBD)\",\n    \"India OBD I (IOBD I)\",\n    \"India OBD II (IOBD II)\",\n    \"Heavy Duty Euro OBD Stage VI (HD EOBD-IV)\",\n]\nFUEL_TYPES = [\n    \"Not available\",\n    \"Gasoline\",\n    \"Methanol\",\n    \"Ethanol\",\n    \"Diesel\",\n    \"LPG\",\n    \"CNG\",\n    \"Propane\",\n    \"Electric\",\n    \"Bifuel running Gasoline\",\n    \"Bifuel running Methanol\",\n    \"Bifuel running Ethanol\",\n    \"Bifuel running LPG\",\n    \"Bifuel running CNG\",\n    \"Bifuel running Propane\",\n    \"Bifuel running Electricity\",\n    \"Bifuel running electric and combustion engine\",\n    \"Hybrid gasoline\",\n    \"Hybrid Ethanol\",\n    \"Hybrid Diesel\",\n    \"Hybrid Electric\",\n    \"Hybrid running electric and combustion engine\",\n    \"Hybrid Regenerative\",\n    \"Bifuel running diesel\",\n]\nTEST_IDS = {\n    (1): (\"RTL_THRESHOLD_VOLTAGE\", \"Rich to lean sensor threshold voltage\"),\n    (2): (\"LTR_THRESHOLD_VOLTAGE\", \"Lean to rich sensor threshold voltage\"),\n    (3): (\"LOW_VOLTAGE_SWITCH_TIME\", \"Low sensor voltage for switch time calculation\"),\n    (4): (\n        \"HIGH_VOLTAGE_SWITCH_TIME\",\n        \"High sensor voltage for switch time calculation\",\n    ),\n    (5): (\"RTL_SWITCH_TIME\", \"Rich to lean sensor switch time\"),\n    (6): (\"LTR_SWITCH_TIME\", \"Lean to rich sensor switch time\"),\n    (7): (\"MIN_VOLTAGE\", \"Minimum sensor voltage for test cycle\"),\n    (8): (\"MAX_VOLTAGE\", \"Maximum sensor voltage for test cycle\"),\n    (9): (\"TRANSITION_TIME\", \"Time between sensor transitions\"),\n    (10): (\"SENSOR_PERIOD\", \"Sensor period\"),\n    (11): (\"MISFIRE_AVERAGE\", \"Average misfire counts for last ten driving cycles\"),\n    (12): (\"MISFIRE_COUNT\", \"Misfire counts for last/current driving cycles\"),\n}\n```"
    },
    {
        "readme": "# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py",
        "file_path": "obd/commands.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as a file path. Please write a corresponding file sketch.\n\n---\nREADME.md\n---\n# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py\n```\n\n---\nFile Path\n---\nobd/commands.py\n\n---\nFile Sketch\n---\n",
        "input": "",
        "output": "Here is a practicable file sketch.\n\n```python\nimport logging\nfrom .decoders import *\nfrom .OBDCommand import OBDCommand\nfrom .protocols import ECU\n\nlogger = logging.getLogger(__name__)\n\"\"\"\nDefine command tables\n\"\"\"\n__mode1__ = [\n    OBDCommand(\"PIDS_A\", \"Supported PIDs [01-20]\", b\"0100\", 6, pid, ECU.ENGINE, True),\n    OBDCommand(\n        \"STATUS\", \"Status since DTCs cleared\", b\"0101\", 6, status, ECU.ENGINE, True\n    ),\n    OBDCommand(\n        \"FREEZE_DTC\",\n        \"DTC that triggered the freeze frame\",\n        b\"0102\",\n        4,\n        single_dtc,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"FUEL_STATUS\", \"Fuel System Status\", b\"0103\", 4, fuel_status, ECU.ENGINE, True\n    ),\n    OBDCommand(\n        \"ENGINE_LOAD\", \"Calculated Engine Load\", b\"0104\", 3, percent, ECU.ENGINE, True\n    ),\n    OBDCommand(\n        \"COOLANT_TEMP\", \"Engine Coolant Temperature\", b\"0105\", 3, temp, ECU.ENGINE, True\n    ),\n    OBDCommand(\n        \"SHORT_FUEL_TRIM_1\",\n        \"Short Term Fuel Trim - Bank 1\",\n        b\"0106\",\n        3,\n        percent_centered,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"LONG_FUEL_TRIM_1\",\n        \"Long Term Fuel Trim - Bank 1\",\n        b\"0107\",\n        3,\n        percent_centered,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"SHORT_FUEL_TRIM_2\",\n        \"Short Term Fuel Trim - Bank 2\",\n        b\"0108\",\n        3,\n        percent_centered,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"LONG_FUEL_TRIM_2\",\n        \"Long Term Fuel Trim - Bank 2\",\n        b\"0109\",\n        3,\n        percent_centered,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"FUEL_PRESSURE\", \"Fuel Pressure\", b\"010A\", 3, fuel_pressure, ECU.ENGINE, True\n    ),\n    OBDCommand(\n        \"INTAKE_PRESSURE\",\n        \"Intake Manifold Pressure\",\n        b\"010B\",\n        3,\n        pressure,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\"RPM\", \"Engine RPM\", b\"010C\", 4, uas(7), ECU.ENGINE, True),\n    OBDCommand(\"SPEED\", \"Vehicle Speed\", b\"010D\", 3, uas(9), ECU.ENGINE, True),\n    OBDCommand(\n        \"TIMING_ADVANCE\", \"Timing Advance\", b\"010E\", 3, timing_advance, ECU.ENGINE, True\n    ),\n    OBDCommand(\"INTAKE_TEMP\", \"Intake Air Temp\", b\"010F\", 3, temp, ECU.ENGINE, True),\n    OBDCommand(\"MAF\", \"Air Flow Rate (MAF)\", b\"0110\", 4, uas(39), ECU.ENGINE, True),\n    OBDCommand(\n        \"THROTTLE_POS\", \"Throttle Position\", b\"0111\", 3, percent, ECU.ENGINE, True\n    ),\n    OBDCommand(\n        \"AIR_STATUS\", \"Secondary Air Status\", b\"0112\", 3, air_status, ECU.ENGINE, True\n    ),\n    OBDCommand(\n        \"O2_SENSORS\", \"O2 Sensors Present\", b\"0113\", 3, o2_sensors, ECU.ENGINE, True\n    ),\n    OBDCommand(\n        \"O2_B1S1\",\n        \"O2: Bank 1 - Sensor 1 Voltage\",\n        b\"0114\",\n        4,\n        sensor_voltage,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"O2_B1S2\",\n        \"O2: Bank 1 - Sensor 2 Voltage\",\n        b\"0115\",\n        4,\n        sensor_voltage,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"O2_B1S3\",\n        \"O2: Bank 1 - Sensor 3 Voltage\",\n        b\"0116\",\n        4,\n        sensor_voltage,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"O2_B1S4\",\n        \"O2: Bank 1 - Sensor 4 Voltage\",\n        b\"0117\",\n        4,\n        sensor_voltage,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"O2_B2S1\",\n        \"O2: Bank 2 - Sensor 1 Voltage\",\n        b\"0118\",\n        4,\n        sensor_voltage,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"O2_B2S2\",\n        \"O2: Bank 2 - Sensor 2 Voltage\",\n        b\"0119\",\n        4,\n        sensor_voltage,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"O2_B2S3\",\n        \"O2: Bank 2 - Sensor 3 Voltage\",\n        b\"011A\",\n        4,\n        sensor_voltage,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"O2_B2S4\",\n        \"O2: Bank 2 - Sensor 4 Voltage\",\n        b\"011B\",\n        4,\n        sensor_voltage,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"OBD_COMPLIANCE\",\n        \"OBD Standards Compliance\",\n        b\"011C\",\n        3,\n        obd_compliance,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"O2_SENSORS_ALT\",\n        \"O2 Sensors Present (alternate)\",\n        b\"011D\",\n        3,\n        o2_sensors_alt,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"AUX_INPUT_STATUS\",\n        \"Auxiliary input status (power take off)\",\n        b\"011E\",\n        3,\n        aux_input_status,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\"RUN_TIME\", \"Engine Run Time\", b\"011F\", 4, uas(18), ECU.ENGINE, True),\n    OBDCommand(\"PIDS_B\", \"Supported PIDs [21-40]\", b\"0120\", 6, pid, ECU.ENGINE, True),\n    OBDCommand(\n        \"DISTANCE_W_MIL\",\n        \"Distance Traveled with MIL on\",\n        b\"0121\",\n        4,\n        uas(37),\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"FUEL_RAIL_PRESSURE_VAC\",\n        \"Fuel Rail Pressure (relative to vacuum)\",\n        b\"0122\",\n        4,\n        uas(25),\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"FUEL_RAIL_PRESSURE_DIRECT\",\n        \"Fuel Rail Pressure (direct inject)\",\n        b\"0123\",\n        4,\n        uas(27),\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"O2_S1_WR_VOLTAGE\",\n        \"02 Sensor 1 WR Lambda Voltage\",\n        b\"0124\",\n        6,\n        sensor_voltage_big,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"O2_S2_WR_VOLTAGE\",\n        \"02 Sensor 2 WR Lambda Voltage\",\n        b\"0125\",\n        6,\n        sensor_voltage_big,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"O2_S3_WR_VOLTAGE\",\n        \"02 Sensor 3 WR Lambda Voltage\",\n        b\"0126\",\n        6,\n        sensor_voltage_big,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"O2_S4_WR_VOLTAGE\",\n        \"02 Sensor 4 WR Lambda Voltage\",\n        b\"0127\",\n        6,\n        sensor_voltage_big,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"O2_S5_WR_VOLTAGE\",\n        \"02 Sensor 5 WR Lambda Voltage\",\n        b\"0128\",\n        6,\n        sensor_voltage_big,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"O2_S6_WR_VOLTAGE\",\n        \"02 Sensor 6 WR Lambda Voltage\",\n        b\"0129\",\n        6,\n        sensor_voltage_big,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"O2_S7_WR_VOLTAGE\",\n        \"02 Sensor 7 WR Lambda Voltage\",\n        b\"012A\",\n        6,\n        sensor_voltage_big,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"O2_S8_WR_VOLTAGE\",\n        \"02 Sensor 8 WR Lambda Voltage\",\n        b\"012B\",\n        6,\n        sensor_voltage_big,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\"COMMANDED_EGR\", \"Commanded EGR\", b\"012C\", 3, percent, ECU.ENGINE, True),\n    OBDCommand(\n        \"EGR_ERROR\", \"EGR Error\", b\"012D\", 3, percent_centered, ECU.ENGINE, True\n    ),\n    OBDCommand(\n        \"EVAPORATIVE_PURGE\",\n        \"Commanded Evaporative Purge\",\n        b\"012E\",\n        3,\n        percent,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\"FUEL_LEVEL\", \"Fuel Level Input\", b\"012F\", 3, percent, ECU.ENGINE, True),\n    OBDCommand(\n        \"WARMUPS_SINCE_DTC_CLEAR\",\n        \"Number of warm-ups since codes cleared\",\n        b\"0130\",\n        3,\n        uas(1),\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"DISTANCE_SINCE_DTC_CLEAR\",\n        \"Distance traveled since codes cleared\",\n        b\"0131\",\n        4,\n        uas(37),\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"EVAP_VAPOR_PRESSURE\",\n        \"Evaporative system vapor pressure\",\n        b\"0132\",\n        4,\n        evap_pressure,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"BAROMETRIC_PRESSURE\",\n        \"Barometric Pressure\",\n        b\"0133\",\n        3,\n        pressure,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"O2_S1_WR_CURRENT\",\n        \"02 Sensor 1 WR Lambda Current\",\n        b\"0134\",\n        6,\n        current_centered,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"O2_S2_WR_CURRENT\",\n        \"02 Sensor 2 WR Lambda Current\",\n        b\"0135\",\n        6,\n        current_centered,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"O2_S3_WR_CURRENT\",\n        \"02 Sensor 3 WR Lambda Current\",\n        b\"0136\",\n        6,\n        current_centered,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"O2_S4_WR_CURRENT\",\n        \"02 Sensor 4 WR Lambda Current\",\n        b\"0137\",\n        6,\n        current_centered,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"O2_S5_WR_CURRENT\",\n        \"02 Sensor 5 WR Lambda Current\",\n        b\"0138\",\n        6,\n        current_centered,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"O2_S6_WR_CURRENT\",\n        \"02 Sensor 6 WR Lambda Current\",\n        b\"0139\",\n        6,\n        current_centered,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"O2_S7_WR_CURRENT\",\n        \"02 Sensor 7 WR Lambda Current\",\n        b\"013A\",\n        6,\n        current_centered,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"O2_S8_WR_CURRENT\",\n        \"02 Sensor 8 WR Lambda Current\",\n        b\"013B\",\n        6,\n        current_centered,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"CATALYST_TEMP_B1S1\",\n        \"Catalyst Temperature: Bank 1 - Sensor 1\",\n        b\"013C\",\n        4,\n        uas(22),\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"CATALYST_TEMP_B2S1\",\n        \"Catalyst Temperature: Bank 2 - Sensor 1\",\n        b\"013D\",\n        4,\n        uas(22),\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"CATALYST_TEMP_B1S2\",\n        \"Catalyst Temperature: Bank 1 - Sensor 2\",\n        b\"013E\",\n        4,\n        uas(22),\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"CATALYST_TEMP_B2S2\",\n        \"Catalyst Temperature: Bank 2 - Sensor 2\",\n        b\"013F\",\n        4,\n        uas(22),\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\"PIDS_C\", \"Supported PIDs [41-60]\", b\"0140\", 6, pid, ECU.ENGINE, True),\n    OBDCommand(\n        \"STATUS_DRIVE_CYCLE\",\n        \"Monitor status this drive cycle\",\n        b\"0141\",\n        6,\n        status,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"CONTROL_MODULE_VOLTAGE\",\n        \"Control module voltage\",\n        b\"0142\",\n        4,\n        uas(11),\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"ABSOLUTE_LOAD\",\n        \"Absolute load value\",\n        b\"0143\",\n        4,\n        absolute_load,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"COMMANDED_EQUIV_RATIO\",\n        \"Commanded equivalence ratio\",\n        b\"0144\",\n        4,\n        uas(30),\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"RELATIVE_THROTTLE_POS\",\n        \"Relative throttle position\",\n        b\"0145\",\n        3,\n        percent,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"AMBIANT_AIR_TEMP\",\n        \"Ambient air temperature\",\n        b\"0146\",\n        3,\n        temp,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"THROTTLE_POS_B\",\n        \"Absolute throttle position B\",\n        b\"0147\",\n        3,\n        percent,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"THROTTLE_POS_C\",\n        \"Absolute throttle position C\",\n        b\"0148\",\n        3,\n        percent,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"ACCELERATOR_POS_D\",\n        \"Accelerator pedal position D\",\n        b\"0149\",\n        3,\n        percent,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"ACCELERATOR_POS_E\",\n        \"Accelerator pedal position E\",\n        b\"014A\",\n        3,\n        percent,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"ACCELERATOR_POS_F\",\n        \"Accelerator pedal position F\",\n        b\"014B\",\n        3,\n        percent,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"THROTTLE_ACTUATOR\",\n        \"Commanded throttle actuator\",\n        b\"014C\",\n        3,\n        percent,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"RUN_TIME_MIL\", \"Time run with MIL on\", b\"014D\", 4, uas(52), ECU.ENGINE, True\n    ),\n    OBDCommand(\n        \"TIME_SINCE_DTC_CLEARED\",\n        \"Time since trouble codes cleared\",\n        b\"014E\",\n        4,\n        uas(52),\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\"MAX_VALUES\", \"Various Max values\", b\"014F\", 6, drop, ECU.ENGINE, True),\n    OBDCommand(\n        \"MAX_MAF\",\n        \"Maximum value for mass air flow sensor\",\n        b\"0150\",\n        6,\n        max_maf,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\"FUEL_TYPE\", \"Fuel Type\", b\"0151\", 3, fuel_type, ECU.ENGINE, True),\n    OBDCommand(\n        \"ETHANOL_PERCENT\", \"Ethanol Fuel Percent\", b\"0152\", 3, percent, ECU.ENGINE, True\n    ),\n    OBDCommand(\n        \"EVAP_VAPOR_PRESSURE_ABS\",\n        \"Absolute Evap system Vapor Pressure\",\n        b\"0153\",\n        4,\n        abs_evap_pressure,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"EVAP_VAPOR_PRESSURE_ALT\",\n        \"Evap system vapor pressure\",\n        b\"0154\",\n        4,\n        evap_pressure_alt,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"SHORT_O2_TRIM_B1\",\n        \"Short term secondary O2 trim - Bank 1\",\n        b\"0155\",\n        4,\n        percent_centered,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"LONG_O2_TRIM_B1\",\n        \"Long term secondary O2 trim - Bank 1\",\n        b\"0156\",\n        4,\n        percent_centered,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"SHORT_O2_TRIM_B2\",\n        \"Short term secondary O2 trim - Bank 2\",\n        b\"0157\",\n        4,\n        percent_centered,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"LONG_O2_TRIM_B2\",\n        \"Long term secondary O2 trim - Bank 2\",\n        b\"0158\",\n        4,\n        percent_centered,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"FUEL_RAIL_PRESSURE_ABS\",\n        \"Fuel rail pressure (absolute)\",\n        b\"0159\",\n        4,\n        uas(27),\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"RELATIVE_ACCEL_POS\",\n        \"Relative accelerator pedal position\",\n        b\"015A\",\n        3,\n        percent,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"HYBRID_BATTERY_REMAINING\",\n        \"Hybrid battery pack remaining life\",\n        b\"015B\",\n        3,\n        percent,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"OIL_TEMP\", \"Engine oil temperature\", b\"015C\", 3, temp, ECU.ENGINE, True\n    ),\n    OBDCommand(\n        \"FUEL_INJECT_TIMING\",\n        \"Fuel injection timing\",\n        b\"015D\",\n        4,\n        inject_timing,\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"FUEL_RATE\", \"Engine fuel rate\", b\"015E\", 4, fuel_rate, ECU.ENGINE, True\n    ),\n    OBDCommand(\n        \"EMISSION_REQ\",\n        \"Designed emission requirements\",\n        b\"015F\",\n        3,\n        drop,\n        ECU.ENGINE,\n        True,\n    ),\n]\n__mode2__ = []\nfor c in __mode1__:\n    c = c.clone()\n    c.command = b\"02\" + c.command[2:]\n    c.name = \"DTC_\" + c.name\n    c.desc = \"DTC \" + c.desc\n    if c.decode == pid:\n        c.decode = drop\n    __mode2__.append(c)\n__mode3__ = [OBDCommand(\"GET_DTC\", \"Get DTCs\", b\"03\", 0, dtc, ECU.ALL, False)]\n__mode4__ = [\n    OBDCommand(\n        \"CLEAR_DTC\", \"Clear DTCs and Freeze data\", b\"04\", 0, drop, ECU.ALL, False\n    )\n]\n__mode6__ = (\n    [\n        OBDCommand(\"MIDS_A\", \"Supported MIDs [01-20]\", b\"0600\", 0, pid, ECU.ALL, False),\n        OBDCommand(\n            \"MONITOR_O2_B1S1\",\n            \"O2 Sensor Monitor Bank 1 - Sensor 1\",\n            b\"0601\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_O2_B1S2\",\n            \"O2 Sensor Monitor Bank 1 - Sensor 2\",\n            b\"0602\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_O2_B1S3\",\n            \"O2 Sensor Monitor Bank 1 - Sensor 3\",\n            b\"0603\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_O2_B1S4\",\n            \"O2 Sensor Monitor Bank 1 - Sensor 4\",\n            b\"0604\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_O2_B2S1\",\n            \"O2 Sensor Monitor Bank 2 - Sensor 1\",\n            b\"0605\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_O2_B2S2\",\n            \"O2 Sensor Monitor Bank 2 - Sensor 2\",\n            b\"0606\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_O2_B2S3\",\n            \"O2 Sensor Monitor Bank 2 - Sensor 3\",\n            b\"0607\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_O2_B2S4\",\n            \"O2 Sensor Monitor Bank 2 - Sensor 4\",\n            b\"0608\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_O2_B3S1\",\n            \"O2 Sensor Monitor Bank 3 - Sensor 1\",\n            b\"0609\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_O2_B3S2\",\n            \"O2 Sensor Monitor Bank 3 - Sensor 2\",\n            b\"060A\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_O2_B3S3\",\n            \"O2 Sensor Monitor Bank 3 - Sensor 3\",\n            b\"060B\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_O2_B3S4\",\n            \"O2 Sensor Monitor Bank 3 - Sensor 4\",\n            b\"060C\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_O2_B4S1\",\n            \"O2 Sensor Monitor Bank 4 - Sensor 1\",\n            b\"060D\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_O2_B4S2\",\n            \"O2 Sensor Monitor Bank 4 - Sensor 2\",\n            b\"060E\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_O2_B4S3\",\n            \"O2 Sensor Monitor Bank 4 - Sensor 3\",\n            b\"060F\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_O2_B4S4\",\n            \"O2 Sensor Monitor Bank 4 - Sensor 4\",\n            b\"0610\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n    ]\n    + [None] * 15\n    + [\n        OBDCommand(\"MIDS_B\", \"Supported MIDs [21-40]\", b\"0620\", 0, pid, ECU.ALL, False),\n        OBDCommand(\n            \"MONITOR_CATALYST_B1\",\n            \"Catalyst Monitor Bank 1\",\n            b\"0621\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_CATALYST_B2\",\n            \"Catalyst Monitor Bank 2\",\n            b\"0622\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_CATALYST_B3\",\n            \"Catalyst Monitor Bank 3\",\n            b\"0623\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_CATALYST_B4\",\n            \"Catalyst Monitor Bank 4\",\n            b\"0624\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n    ]\n    + [None] * 12\n    + [\n        OBDCommand(\n            \"MONITOR_EGR_B1\", \"EGR Monitor Bank 1\", b\"0631\", 0, monitor, ECU.ALL, False\n        ),\n        OBDCommand(\n            \"MONITOR_EGR_B2\", \"EGR Monitor Bank 2\", b\"0632\", 0, monitor, ECU.ALL, False\n        ),\n        OBDCommand(\n            \"MONITOR_EGR_B3\", \"EGR Monitor Bank 3\", b\"0633\", 0, monitor, ECU.ALL, False\n        ),\n        OBDCommand(\n            \"MONITOR_EGR_B4\", \"EGR Monitor Bank 4\", b\"0634\", 0, monitor, ECU.ALL, False\n        ),\n        OBDCommand(\n            \"MONITOR_VVT_B1\", \"VVT Monitor Bank 1\", b\"0635\", 0, monitor, ECU.ALL, False\n        ),\n        OBDCommand(\n            \"MONITOR_VVT_B2\", \"VVT Monitor Bank 2\", b\"0636\", 0, monitor, ECU.ALL, False\n        ),\n        OBDCommand(\n            \"MONITOR_VVT_B3\", \"VVT Monitor Bank 3\", b\"0637\", 0, monitor, ECU.ALL, False\n        ),\n        OBDCommand(\n            \"MONITOR_VVT_B4\", \"VVT Monitor Bank 4\", b\"0638\", 0, monitor, ECU.ALL, False\n        ),\n        OBDCommand(\n            \"MONITOR_EVAP_150\",\n            'EVAP Monitor (Cap Off / 0.150\")',\n            b\"0639\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_EVAP_090\",\n            'EVAP Monitor (0.090\")',\n            b\"063A\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_EVAP_040\",\n            'EVAP Monitor (0.040\")',\n            b\"063B\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_EVAP_020\",\n            'EVAP Monitor (0.020\")',\n            b\"063C\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_PURGE_FLOW\",\n            \"Purge Flow Monitor\",\n            b\"063D\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n    ]\n    + [None] * 2\n    + [\n        OBDCommand(\"MIDS_C\", \"Supported MIDs [41-60]\", b\"0640\", 0, pid, ECU.ALL, False),\n        OBDCommand(\n            \"MONITOR_O2_HEATER_B1S1\",\n            \"O2 Sensor Heater Monitor Bank 1 - Sensor 1\",\n            b\"0641\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_O2_HEATER_B1S2\",\n            \"O2 Sensor Heater Monitor Bank 1 - Sensor 2\",\n            b\"0642\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_O2_HEATER_B1S3\",\n            \"O2 Sensor Heater Monitor Bank 1 - Sensor 3\",\n            b\"0643\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_O2_HEATER_B1S4\",\n            \"O2 Sensor Heater Monitor Bank 1 - Sensor 4\",\n            b\"0644\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_O2_HEATER_B2S1\",\n            \"O2 Sensor Heater Monitor Bank 2 - Sensor 1\",\n            b\"0645\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_O2_HEATER_B2S2\",\n            \"O2 Sensor Heater Monitor Bank 2 - Sensor 2\",\n            b\"0646\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_O2_HEATER_B2S3\",\n            \"O2 Sensor Heater Monitor Bank 2 - Sensor 3\",\n            b\"0647\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_O2_HEATER_B2S4\",\n            \"O2 Sensor Heater Monitor Bank 2 - Sensor 4\",\n            b\"0648\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_O2_HEATER_B3S1\",\n            \"O2 Sensor Heater Monitor Bank 3 - Sensor 1\",\n            b\"0649\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_O2_HEATER_B3S2\",\n            \"O2 Sensor Heater Monitor Bank 3 - Sensor 2\",\n            b\"064A\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_O2_HEATER_B3S3\",\n            \"O2 Sensor Heater Monitor Bank 3 - Sensor 3\",\n            b\"064B\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_O2_HEATER_B3S4\",\n            \"O2 Sensor Heater Monitor Bank 3 - Sensor 4\",\n            b\"064C\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_O2_HEATER_B4S1\",\n            \"O2 Sensor Heater Monitor Bank 4 - Sensor 1\",\n            b\"064D\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_O2_HEATER_B4S2\",\n            \"O2 Sensor Heater Monitor Bank 4 - Sensor 2\",\n            b\"064E\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_O2_HEATER_B4S3\",\n            \"O2 Sensor Heater Monitor Bank 4 - Sensor 3\",\n            b\"064F\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_O2_HEATER_B4S4\",\n            \"O2 Sensor Heater Monitor Bank 4 - Sensor 4\",\n            b\"0650\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n    ]\n    + [None] * 15\n    + [\n        OBDCommand(\"MIDS_D\", \"Supported MIDs [61-80]\", b\"0660\", 0, pid, ECU.ALL, False),\n        OBDCommand(\n            \"MONITOR_HEATED_CATALYST_B1\",\n            \"Heated Catalyst Monitor Bank 1\",\n            b\"0661\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_HEATED_CATALYST_B2\",\n            \"Heated Catalyst Monitor Bank 2\",\n            b\"0662\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_HEATED_CATALYST_B3\",\n            \"Heated Catalyst Monitor Bank 3\",\n            b\"0663\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_HEATED_CATALYST_B4\",\n            \"Heated Catalyst Monitor Bank 4\",\n            b\"0664\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n    ]\n    + [None] * 12\n    + [\n        OBDCommand(\n            \"MONITOR_SECONDARY_AIR_1\",\n            \"Secondary Air Monitor 1\",\n            b\"0671\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_SECONDARY_AIR_2\",\n            \"Secondary Air Monitor 2\",\n            b\"0672\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_SECONDARY_AIR_3\",\n            \"Secondary Air Monitor 3\",\n            b\"0673\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_SECONDARY_AIR_4\",\n            \"Secondary Air Monitor 4\",\n            b\"0674\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n    ]\n    + [None] * 11\n    + [\n        OBDCommand(\"MIDS_E\", \"Supported MIDs [81-A0]\", b\"0680\", 0, pid, ECU.ALL, False),\n        OBDCommand(\n            \"MONITOR_FUEL_SYSTEM_B1\",\n            \"Fuel System Monitor Bank 1\",\n            b\"0681\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_FUEL_SYSTEM_B2\",\n            \"Fuel System Monitor Bank 2\",\n            b\"0682\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_FUEL_SYSTEM_B3\",\n            \"Fuel System Monitor Bank 3\",\n            b\"0683\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_FUEL_SYSTEM_B4\",\n            \"Fuel System Monitor Bank 4\",\n            b\"0684\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_BOOST_PRESSURE_B1\",\n            \"Boost Pressure Control Monitor Bank 1\",\n            b\"0685\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_BOOST_PRESSURE_B2\",\n            \"Boost Pressure Control Monitor Bank 1\",\n            b\"0686\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n    ]\n    + [None] * 9\n    + [\n        OBDCommand(\n            \"MONITOR_NOX_ABSORBER_B1\",\n            \"NOx Absorber Monitor Bank 1\",\n            b\"0690\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_NOX_ABSORBER_B2\",\n            \"NOx Absorber Monitor Bank 2\",\n            b\"0691\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n    ]\n    + [None] * 6\n    + [\n        OBDCommand(\n            \"MONITOR_NOX_CATALYST_B1\",\n            \"NOx Catalyst Monitor Bank 1\",\n            b\"0698\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_NOX_CATALYST_B2\",\n            \"NOx Catalyst Monitor Bank 2\",\n            b\"0699\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n    ]\n    + [None] * 6\n    + [\n        OBDCommand(\"MIDS_F\", \"Supported MIDs [A1-C0]\", b\"06A0\", 0, pid, ECU.ALL, False),\n        OBDCommand(\n            \"MONITOR_MISFIRE_GENERAL\",\n            \"Misfire Monitor General Data\",\n            b\"06A1\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_MISFIRE_CYLINDER_1\",\n            \"Misfire Cylinder 1 Data\",\n            b\"06A2\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_MISFIRE_CYLINDER_2\",\n            \"Misfire Cylinder 2 Data\",\n            b\"06A3\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_MISFIRE_CYLINDER_3\",\n            \"Misfire Cylinder 3 Data\",\n            b\"06A4\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_MISFIRE_CYLINDER_4\",\n            \"Misfire Cylinder 4 Data\",\n            b\"06A5\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_MISFIRE_CYLINDER_5\",\n            \"Misfire Cylinder 5 Data\",\n            b\"06A6\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_MISFIRE_CYLINDER_6\",\n            \"Misfire Cylinder 6 Data\",\n            b\"06A7\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_MISFIRE_CYLINDER_7\",\n            \"Misfire Cylinder 7 Data\",\n            b\"06A8\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_MISFIRE_CYLINDER_8\",\n            \"Misfire Cylinder 8 Data\",\n            b\"06A9\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_MISFIRE_CYLINDER_9\",\n            \"Misfire Cylinder 9 Data\",\n            b\"06AA\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_MISFIRE_CYLINDER_10\",\n            \"Misfire Cylinder 10 Data\",\n            b\"06AB\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_MISFIRE_CYLINDER_11\",\n            \"Misfire Cylinder 11 Data\",\n            b\"06AC\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_MISFIRE_CYLINDER_12\",\n            \"Misfire Cylinder 12 Data\",\n            b\"06AD\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n    ]\n    + [None] * 2\n    + [\n        OBDCommand(\n            \"MONITOR_PM_FILTER_B1\",\n            \"PM Filter Monitor Bank 1\",\n            b\"06B0\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n        OBDCommand(\n            \"MONITOR_PM_FILTER_B2\",\n            \"PM Filter Monitor Bank 2\",\n            b\"06B1\",\n            0,\n            monitor,\n            ECU.ALL,\n            False,\n        ),\n    ]\n)\n__mode7__ = [\n    OBDCommand(\n        \"GET_CURRENT_DTC\",\n        \"Get DTCs from the current/last driving cycle\",\n        b\"07\",\n        0,\n        dtc,\n        ECU.ALL,\n        False,\n    )\n]\n__mode9__ = [\n    OBDCommand(\"PIDS_9A\", \"Supported PIDs [01-20]\", b\"0900\", 7, pid, ECU.ALL, True),\n    OBDCommand(\n        \"VIN_MESSAGE_COUNT\", \"VIN Message Count\", b\"0901\", 3, count, ECU.ENGINE, True\n    ),\n    OBDCommand(\n        \"VIN\",\n        \"Vehicle Identification Number\",\n        b\"0902\",\n        22,\n        encoded_string(17),\n        ECU.ENGINE,\n        True,\n    ),\n    OBDCommand(\n        \"CALIBRATION_ID_MESSAGE_COUNT\",\n        \"Calibration ID message count for PID 04\",\n        b\"0903\",\n        3,\n        count,\n        ECU.ALL,\n        True,\n    ),\n    OBDCommand(\n        \"CALIBRATION_ID\",\n        \"Calibration ID\",\n        b\"0904\",\n        18,\n        encoded_string(16),\n        ECU.ALL,\n        True,\n    ),\n    OBDCommand(\n        \"CVN_MESSAGE_COUNT\",\n        \"CVN Message Count for PID 06\",\n        b\"0905\",\n        3,\n        count,\n        ECU.ALL,\n        True,\n    ),\n    OBDCommand(\n        \"CVN\", \"Calibration Verification Numbers\", b\"0906\", 10, cvn, ECU.ALL, True\n    ),\n]\n__misc__ = [\n    OBDCommand(\n        \"ELM_VERSION\",\n        \"ELM327 version string\",\n        b\"ATI\",\n        0,\n        raw_string,\n        ECU.UNKNOWN,\n        False,\n    ),\n    OBDCommand(\n        \"ELM_VOLTAGE\",\n        \"Voltage detected by OBD-II adapter\",\n        b\"ATRV\",\n        0,\n        elm_voltage,\n        ECU.UNKNOWN,\n        False,\n    ),\n]\n\"\"\"\nAssemble the command tables by mode, and allow access by name\n\"\"\"\n\n\nclass Commands:\n    def __init__(self):\n        pass\n\n    def __getitem__(self, key):\n        \"\"\"\n        commands can be accessed by name, or by mode/pid\n\n        obd.commands.RPM\n        obd.commands[\"RPM\"]\n        obd.commands[1][12] # mode 1, PID 12 (RPM)\n        \"\"\"\n        pass\n\n    def __len__(self):\n        \"\"\"returns the number of commands supported by python-OBD\"\"\"\n        pass\n\n    def __contains__(self, name):\n        \"\"\"calls has_name(s)\"\"\"\n        pass\n\n    def base_commands(self):\n        \"\"\"\n        returns the list of commands that should always be\n        supported by the ELM327\n        \"\"\"\n        pass\n\n    def pid_getters(self):\n        \"\"\"returns a list of PID GET commands\"\"\"\n        pass\n\n    def has_command(self, c):\n        \"\"\"checks for existance of a command by OBDCommand object\"\"\"\n        pass\n\n    def has_name(self, name):\n        \"\"\"checks for existance of a command by name\"\"\"\n        pass\n\n    def has_pid(self, mode, pid):\n        \"\"\"checks for existance of a command by int mode and int pid\"\"\"\n        pass\n\n\ncommands = Commands()\n```"
    },
    {
        "readme": "# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py",
        "file_path": "obd/decoders.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as a file path. Please write a corresponding file sketch.\n\n---\nREADME.md\n---\n# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py\n```\n\n---\nFile Path\n---\nobd/decoders.py\n\n---\nFile Sketch\n---\n",
        "input": "",
        "output": "Here is a practicable file sketch.\n\n```python\nimport functools\nimport logging\nimport math\nfrom .codes import *\nfrom .OBDResponse import Monitor, MonitorTest, Status, StatusTest\nfrom .UnitsAndScaling import UAS_IDS, Unit\nfrom .utils import *\n\nlogger = logging.getLogger(__name__)\n\"\"\"\nAll decoders take the form:\n\ndef <name>(<list_of_messages>):\n    ...\n    return <value>\n\n\"\"\"\n\n\ndef drop(_):\n    pass\n\n\ndef noop(messages):\n    pass\n\n\ndef pid(messages):\n    pass\n\n\ndef raw_string(messages):\n    pass\n\n\n\"\"\"\nSome decoders are simple and are already implemented in the Units And Scaling\ntables (used mainly for Mode 06). The uas() decoder is a wrapper for any\nUnit/Scaling in that table, simply to avoid redundant code.\n\"\"\"\n\n\ndef uas(id_):\n    \"\"\"get the corresponding decoder for this UAS ID\"\"\"\n    pass\n\n\ndef decode_uas(messages, id_):\n    pass\n\n\n\"\"\"\nGeneral sensor decoders\nReturn pint Quantities\n\"\"\"\n\n\ndef count(messages):\n    pass\n\n\ndef percent(messages):\n    pass\n\n\ndef percent_centered(messages):\n    pass\n\n\ndef temp(messages):\n    pass\n\n\ndef current_centered(messages):\n    pass\n\n\ndef sensor_voltage(messages):\n    pass\n\n\ndef sensor_voltage_big(messages):\n    pass\n\n\ndef fuel_pressure(messages):\n    pass\n\n\ndef pressure(messages):\n    pass\n\n\ndef evap_pressure(messages):\n    pass\n\n\ndef abs_evap_pressure(messages):\n    pass\n\n\ndef evap_pressure_alt(messages):\n    pass\n\n\ndef timing_advance(messages):\n    pass\n\n\ndef inject_timing(messages):\n    pass\n\n\ndef max_maf(messages):\n    pass\n\n\ndef fuel_rate(messages):\n    pass\n\n\ndef o2_sensors(messages):\n    pass\n\n\ndef aux_input_status(messages):\n    pass\n\n\ndef o2_sensors_alt(messages):\n    pass\n\n\ndef absolute_load(messages):\n    pass\n\n\ndef elm_voltage(messages):\n    pass\n\n\n\"\"\"\nSpecial decoders\nReturn objects, lists, etc\n\"\"\"\n\n\ndef status(messages):\n    pass\n\n\ndef fuel_status(messages):\n    pass\n\n\ndef air_status(messages):\n    pass\n\n\ndef obd_compliance(messages):\n    pass\n\n\ndef fuel_type(messages):\n    pass\n\n\ndef parse_dtc(_bytes):\n    \"\"\"converts 2 bytes into a DTC code\"\"\"\n    pass\n\n\ndef single_dtc(messages):\n    \"\"\"parses a single DTC from a message\"\"\"\n    pass\n\n\ndef dtc(messages):\n    \"\"\"converts a frame of 2-byte DTCs into a list of DTCs\"\"\"\n    pass\n\n\ndef parse_monitor_test(d, mon):\n    pass\n\n\ndef monitor(messages):\n    pass\n\n\ndef encoded_string(length):\n    \"\"\"Extract an encoded string from multi-part messages\"\"\"\n    pass\n\n\ndef decode_encoded_string(messages, length):\n    pass\n\n\ndef cvn(messages):\n    pass\n```"
    },
    {
        "readme": "# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py",
        "file_path": "obd/elm327.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as a file path. Please write a corresponding file sketch.\n\n---\nREADME.md\n---\n# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py\n```\n\n---\nFile Path\n---\nobd/elm327.py\n\n---\nFile Sketch\n---\n",
        "input": "",
        "output": "Here is a practicable file sketch.\n\n```python\nimport logging\nimport re\nimport time\nimport serial\nfrom .protocols import *\nfrom .utils import OBDStatus\n\nlogger = logging.getLogger(__name__)\n\n\nclass ELM327:\n    \"\"\"\n    Handles communication with the ELM327 adapter.\n\n    After instantiation with a portname (/dev/ttyUSB0, etc...),\n    the following functions become available:\n\n        send_and_parse()\n        close()\n        status()\n        port_name()\n        protocol_name()\n        ecus()\n    \"\"\"\n\n    ELM_PROMPT = b\">\"\n    ELM_LP_ACTIVE = b\"OK\"\n    _SUPPORTED_PROTOCOLS = {\n        \"1\": SAE_J1850_PWM,\n        \"2\": SAE_J1850_VPW,\n        \"3\": ISO_9141_2,\n        \"4\": ISO_14230_4_5baud,\n        \"5\": ISO_14230_4_fast,\n        \"6\": ISO_15765_4_11bit_500k,\n        \"7\": ISO_15765_4_29bit_500k,\n        \"8\": ISO_15765_4_11bit_250k,\n        \"9\": ISO_15765_4_29bit_250k,\n        \"A\": SAE_J1939,\n    }\n    _TRY_PROTOCOL_ORDER = [\"6\", \"8\", \"1\", \"7\", \"9\", \"2\", \"3\", \"4\", \"5\", \"A\"]\n    _TRY_BAUDS = [\n        38400,\n        9600,\n        230400,\n        115200,\n        57600,\n        19200,\n        128000,\n        14400,\n        250000,\n        500000,\n        1000000,\n        2000000,\n        3000000,\n    ]\n\n    def __init__(\n        self,\n        portname,\n        baudrate,\n        protocol,\n        timeout,\n        check_voltage=True,\n        start_low_power=False,\n    ):\n        \"\"\"Initializes port by resetting device and gettings supported PIDs.\"\"\"\n        pass\n\n    def set_protocol(self, protocol_):\n        pass\n\n    def manual_protocol(self, protocol_):\n        pass\n\n    def auto_protocol(self):\n        \"\"\"\n        Attempts communication with the car.\n\n        If no protocol is specified, then protocols at tried with `ATTP`\n\n        Upon success, the appropriate protocol parser is loaded,\n        and this function returns True\n        \"\"\"\n        pass\n\n    def set_baudrate(self, baud):\n        pass\n\n    def auto_baudrate(self):\n        \"\"\"\n        Detect the baud rate at which a connected ELM32x interface is operating.\n        Returns boolean for success.\n        \"\"\"\n        pass\n\n    def __isok(self, lines, expectEcho=False):\n        pass\n\n    def __has_message(self, lines, text):\n        pass\n\n    def __error(self, msg):\n        \"\"\"handles fatal failures, print logger.info info and closes serial\"\"\"\n        pass\n\n    def port_name(self):\n        pass\n\n    def status(self):\n        pass\n\n    def baudrate(self):\n        pass\n\n    def ecus(self):\n        pass\n\n    def protocol_name(self):\n        pass\n\n    def protocol_id(self):\n        pass\n\n    def low_power(self):\n        \"\"\"\n        Enter Low Power mode\n\n        This command causes the ELM327 to shut off all but essential\n        services.\n\n        The ELM327 can be woken up by a message to the RS232 bus as\n        well as a few other ways. See the Power Control section in\n        the ELM327 datasheet for details on other ways to wake up\n        the chip.\n\n        Returns the status from the ELM327, 'OK' means low power mode\n        is going to become active.\n        \"\"\"\n        pass\n\n    def normal_power(self):\n        \"\"\"\n        Exit Low Power mode\n\n        Send a space to trigger the RS232 to wakeup.\n\n        This will send a space even if we aren't in low power mode as\n        we want to ensure that we will be able to leave low power mode.\n\n        See the Power Control section in the ELM327 datasheet for details\n        on other ways to wake up the chip.\n\n        Returns the status from the ELM327.\n        \"\"\"\n        pass\n\n    def close(self):\n        \"\"\"\n        Resets the device, and sets all\n        attributes to unconnected states.\n        \"\"\"\n        pass\n\n    def send_and_parse(self, cmd):\n        \"\"\"\n        send() function used to service all OBDCommands\n\n        Sends the given command string, and parses the\n        response lines with the protocol object.\n\n        An empty command string will re-trigger the previous command\n\n        Returns a list of Message objects\n        \"\"\"\n        pass\n\n    def __send(self, cmd, delay=None, end_marker=ELM_PROMPT):\n        \"\"\"\n        unprotected send() function\n\n        will __write() the given string, no questions asked.\n        returns result of __read() (a list of line strings)\n        after an optional delay, until the end marker (by\n        default, the prompt) is seen\n        \"\"\"\n        pass\n\n    def __write(self, cmd):\n        \"\"\"\n        \"low-level\" function to write a string to the port\n        \"\"\"\n        pass\n\n    def __read(self, end_marker=ELM_PROMPT):\n        \"\"\"\n        \"low-level\" read function\n\n        accumulates characters until the end marker (by\n        default, the prompt character) is seen\n        returns a list of [/r/n] delimited strings\n        \"\"\"\n        pass\n```"
    },
    {
        "readme": "# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py",
        "file_path": "obd/obd.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as a file path. Please write a corresponding file sketch.\n\n---\nREADME.md\n---\n# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py\n```\n\n---\nFile Path\n---\nobd/obd.py\n\n---\nFile Sketch\n---\n",
        "input": "",
        "output": "Here is a practicable file sketch.\n\n```python\nimport logging\nfrom .__version__ import __version__\nfrom .commands import commands\nfrom .elm327 import ELM327\nfrom .OBDResponse import OBDResponse\nfrom .protocols import ECU_HEADER\nfrom .utils import OBDStatus, scan_serial\n\nlogger = logging.getLogger(__name__)\n\n\nclass OBD(object):\n    \"\"\"\n    Class representing an OBD-II connection\n    with it's assorted commands/sensors.\n    \"\"\"\n\n    def __init__(\n        self,\n        portstr=None,\n        baudrate=None,\n        protocol=None,\n        fast=True,\n        timeout=0.1,\n        check_voltage=True,\n        start_low_power=False,\n    ):\n        pass\n\n    def __connect(self, portstr, baudrate, protocol, check_voltage, start_low_power):\n        \"\"\"\n        Attempts to instantiate an ELM327 connection object.\n        \"\"\"\n        pass\n\n    def __load_commands(self):\n        \"\"\"\n        Queries for available PIDs, sets their support status,\n        and compiles a list of command objects.\n        \"\"\"\n        pass\n\n    def __set_header(self, header):\n        pass\n\n    def close(self):\n        \"\"\"\n        Closes the connection, and clears supported_commands\n        \"\"\"\n        pass\n\n    def status(self):\n        \"\"\"returns the OBD connection status\"\"\"\n        pass\n\n    def low_power(self):\n        \"\"\"Enter low power mode\"\"\"\n        pass\n\n    def normal_power(self):\n        \"\"\"Exit low power mode\"\"\"\n        pass\n\n    def protocol_name(self):\n        \"\"\"returns the name of the protocol being used by the ELM327\"\"\"\n        pass\n\n    def protocol_id(self):\n        \"\"\"returns the ID of the protocol being used by the ELM327\"\"\"\n        pass\n\n    def port_name(self):\n        \"\"\"Returns the name of the currently connected port\"\"\"\n        pass\n\n    def is_connected(self):\n        \"\"\"\n        Returns a boolean for whether a connection with the car was made.\n\n        Note: this function returns False when:\n        obd.status = OBDStatus.ELM_CONNECTED\n        \"\"\"\n        pass\n\n    def print_commands(self):\n        \"\"\"\n        Utility function meant for working in interactive mode.\n        Prints all commands supported by the car.\n        \"\"\"\n        pass\n\n    def supports(self, cmd):\n        \"\"\"\n        Returns a boolean for whether the given command\n        is supported by the car\n        \"\"\"\n        pass\n\n    def test_cmd(self, cmd, warn=True):\n        \"\"\"\n        Returns a boolean for whether a command will\n        be sent without using force=True.\n        \"\"\"\n        pass\n\n    def query(self, cmd, force=False):\n        \"\"\"\n        primary API function. Sends commands to the car, and\n        protects against sending unsupported commands.\n        \"\"\"\n        pass\n\n    def __build_command_string(self, cmd):\n        \"\"\"assembles the appropriate command string\"\"\"\n        pass\n```"
    },
    {
        "readme": "# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py",
        "file_path": "obd/utils.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as a file path. Please write a corresponding file sketch.\n\n---\nREADME.md\n---\n# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py\n```\n\n---\nFile Path\n---\nobd/utils.py\n\n---\nFile Sketch\n---\n",
        "input": "",
        "output": "Here is a practicable file sketch.\n\n```python\nimport errno\nimport glob\nimport logging\nimport string\nimport sys\nimport serial\n\nlogger = logging.getLogger(__name__)\n\n\nclass OBDStatus:\n    \"\"\"Values for the connection status flags\"\"\"\n\n    NOT_CONNECTED = \"Not Connected\"\n    ELM_CONNECTED = \"ELM Connected\"\n    OBD_CONNECTED = \"OBD Connected\"\n    CAR_CONNECTED = \"Car Connected\"\n\n\nclass BitArray:\n    \"\"\"\n    Class for representing bitarrays (inefficiently)\n\n    There's a nice C-optimized lib for this: https://github.com/ilanschnell/bitarray\n    but python-OBD doesn't use it enough to be worth adding the dependency.\n    But, if this class starts getting used too much, we should switch to that lib.\n    \"\"\"\n\n    def __init__(self, _bytearray):\n        pass\n\n    def __getitem__(self, key):\n        pass\n\n    def num_set(self):\n        pass\n\n    def num_cleared(self):\n        pass\n\n    def value(self, start, stop):\n        pass\n\n    def __len__(self):\n        pass\n\n    def __str__(self):\n        pass\n\n    def __iter__(self):\n        pass\n\n\ndef bytes_to_int(bs):\n    \"\"\"converts a big-endian byte array into a single integer\"\"\"\n    pass\n\n\ndef bytes_to_hex(bs):\n    pass\n\n\ndef twos_comp(val, num_bits):\n    \"\"\"compute the 2's compliment of int value val\"\"\"\n    pass\n\n\ndef isHex(_hex):\n    pass\n\n\ndef contiguous(l, start, end):\n    \"\"\"checks that a list of integers are consequtive\"\"\"\n    pass\n\n\ndef try_port(portStr):\n    \"\"\"returns boolean for port availability\"\"\"\n    pass\n\n\ndef scan_serial():\n    \"\"\"scan for available ports. return a list of serial names\"\"\"\n    pass\n```"
    },
    {
        "readme": "# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py",
        "file_path": "obd/protocols/__init__.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as a file path. Please write a corresponding file sketch.\n\n---\nREADME.md\n---\n# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py\n```\n\n---\nFile Path\n---\nobd/protocols/__init__.py\n\n---\nFile Sketch\n---\n",
        "input": "",
        "output": "Here is a practicable file sketch.\n\n```python\nfrom .protocol import ECU, ECU_HEADER\nfrom .protocol_can import (\n    SAE_J1939,\n    ISO_15765_4_11bit_250k,\n    ISO_15765_4_11bit_500k,\n    ISO_15765_4_29bit_250k,\n    ISO_15765_4_29bit_500k,\n)\nfrom .protocol_legacy import (\n    ISO_9141_2,\n    SAE_J1850_PWM,\n    SAE_J1850_VPW,\n    ISO_14230_4_5baud,\n    ISO_14230_4_fast,\n)\nfrom .protocol_unknown import UnknownProtocol\n```"
    },
    {
        "readme": "# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py",
        "file_path": "obd/protocols/protocol.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as a file path. Please write a corresponding file sketch.\n\n---\nREADME.md\n---\n# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py\n```\n\n---\nFile Path\n---\nobd/protocols/protocol.py\n\n---\nFile Sketch\n---\n",
        "input": "",
        "output": "Here is a practicable file sketch.\n\n```python\nimport logging\nfrom binascii import hexlify\nfrom obd.utils import BitArray, isHex\n\nlogger = logging.getLogger(__name__)\n\"\"\"\n\nBasic data models for all protocols to use\n\n\"\"\"\n\n\nclass ECU_HEADER:\n    \"\"\"Values for the ECU headers\"\"\"\n\n    ENGINE = b\"7E0\"\n\n\nclass ECU:\n    \"\"\"constant flags used for marking and filtering messages\"\"\"\n\n    ALL = 255\n    ALL_KNOWN = 254\n    UNKNOWN = 1\n    ENGINE = 2\n    TRANSMISSION = 4\n\n\nclass Frame(object):\n    \"\"\"represents a single parsed line of OBD output\"\"\"\n\n    def __init__(self, raw):\n        pass\n\n\nclass Message(object):\n    \"\"\"represents a fully parsed OBD message of one or more Frames (lines)\"\"\"\n\n    def __init__(self, frames):\n        pass\n\n    @property\n    def tx_id(self):\n        pass\n\n    def hex(self):\n        pass\n\n    def raw(self):\n        \"\"\"returns the original raw input string from the adapter\"\"\"\n        pass\n\n    def parsed(self):\n        \"\"\"boolean for whether this message was successfully parsed\"\"\"\n        pass\n\n    def __eq__(self, other):\n        pass\n\n\n\"\"\"\n\nProtocol objects are factories for Frame and Message objects. They are\nlargely stateless, with the exception of an ECU tagging system, which\nis initialized by passing the response to an \"0100\" command.\n\nProtocols are __called__ with a list of string responses, and return a\nlist of Messages.\n\n\"\"\"\n\n\nclass Protocol(object):\n    ELM_NAME = \"\"\n    ELM_ID = \"\"\n    TX_ID_ENGINE = None\n    TX_ID_TRANSMISSION = None\n\n    def __init__(self, lines_0100):\n        \"\"\"\n        constructs a protocol object\n\n        uses a list of raw strings from the\n        car to determine the ECU layout.\n        \"\"\"\n        pass\n\n    def __call__(self, lines):\n        \"\"\"\n        Main function\n\n        accepts a list of raw strings from the car, split by lines\n        \"\"\"\n        pass\n\n    def populate_ecu_map(self, messages):\n        \"\"\"\n        Given a list of messages from different ECUS,\n        (in response to the 0100 PID listing command)\n        associate each tx_id to an ECU ID constant.\n\n        This is mostly concerned with finding the engine.\n        \"\"\"\n        pass\n\n    def parse_frame(self, frame):\n        \"\"\"\n        override in subclass for each protocol\n\n        Function recieves a Frame object preloaded\n        with the raw string line from the car.\n\n        Function should return a boolean. If fatal errors were\n        found, this function should return False, and the Frame will be dropped.\n        \"\"\"\n        pass\n\n    def parse_message(self, message):\n        \"\"\"\n        override in subclass for each protocol\n\n        Function recieves a Message object\n        preloaded with a list of Frame objects.\n\n        Function should return a boolean. If fatal errors were\n        found, this function should return False, and the Message will be dropped.\n        \"\"\"\n        pass\n```"
    },
    {
        "readme": "# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py",
        "file_path": "obd/protocols/protocol_can.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as a file path. Please write a corresponding file sketch.\n\n---\nREADME.md\n---\n# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py\n```\n\n---\nFile Path\n---\nobd/protocols/protocol_can.py\n\n---\nFile Sketch\n---\n",
        "input": "",
        "output": "Here is a practicable file sketch.\n\n```python\nimport logging\nfrom binascii import unhexlify\nfrom obd.utils import contiguous\nfrom .protocol import Protocol\n\nlogger = logging.getLogger(__name__)\n\n\nclass CANProtocol(Protocol):\n    TX_ID_ENGINE = 0\n    TX_ID_TRANSMISSION = 1\n    FRAME_TYPE_SF = 0\n    FRAME_TYPE_FF = 16\n    FRAME_TYPE_CF = 32\n\n    def __init__(self, lines_0100, id_bits):\n        pass\n\n    def parse_frame(self, frame):\n        pass\n\n    def parse_message(self, message):\n        pass\n\n\nclass ISO_15765_4_11bit_500k(CANProtocol):\n    ELM_NAME = \"ISO 15765-4 (CAN 11/500)\"\n    ELM_ID = \"6\"\n\n    def __init__(self, lines_0100):\n        pass\n\n\nclass ISO_15765_4_29bit_500k(CANProtocol):\n    ELM_NAME = \"ISO 15765-4 (CAN 29/500)\"\n    ELM_ID = \"7\"\n\n    def __init__(self, lines_0100):\n        pass\n\n\nclass ISO_15765_4_11bit_250k(CANProtocol):\n    ELM_NAME = \"ISO 15765-4 (CAN 11/250)\"\n    ELM_ID = \"8\"\n\n    def __init__(self, lines_0100):\n        pass\n\n\nclass ISO_15765_4_29bit_250k(CANProtocol):\n    ELM_NAME = \"ISO 15765-4 (CAN 29/250)\"\n    ELM_ID = \"9\"\n\n    def __init__(self, lines_0100):\n        pass\n\n\nclass SAE_J1939(CANProtocol):\n    ELM_NAME = \"SAE J1939 (CAN 29/250)\"\n    ELM_ID = \"A\"\n\n    def __init__(self, lines_0100):\n        pass\n```"
    },
    {
        "readme": "# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py",
        "file_path": "obd/protocols/protocol_legacy.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as a file path. Please write a corresponding file sketch.\n\n---\nREADME.md\n---\n# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py\n```\n\n---\nFile Path\n---\nobd/protocols/protocol_legacy.py\n\n---\nFile Sketch\n---\n",
        "input": "",
        "output": "Here is a practicable file sketch.\n\n```python\nimport logging\nfrom binascii import unhexlify\nfrom obd.utils import contiguous\nfrom .protocol import Protocol\n\nlogger = logging.getLogger(__name__)\n\n\nclass LegacyProtocol(Protocol):\n    TX_ID_ENGINE = 16\n\n    def __init__(self, lines_0100):\n        pass\n\n    def parse_frame(self, frame):\n        pass\n\n    def parse_message(self, message):\n        pass\n\n\nclass SAE_J1850_PWM(LegacyProtocol):\n    ELM_NAME = \"SAE J1850 PWM\"\n    ELM_ID = \"1\"\n\n\nclass SAE_J1850_VPW(LegacyProtocol):\n    ELM_NAME = \"SAE J1850 VPW\"\n    ELM_ID = \"2\"\n\n\nclass ISO_9141_2(LegacyProtocol):\n    ELM_NAME = \"ISO 9141-2\"\n    ELM_ID = \"3\"\n\n\nclass ISO_14230_4_5baud(LegacyProtocol):\n    ELM_NAME = \"ISO 14230-4 (KWP 5BAUD)\"\n    ELM_ID = \"4\"\n\n\nclass ISO_14230_4_fast(LegacyProtocol):\n    ELM_NAME = \"ISO 14230-4 (KWP FAST)\"\n    ELM_ID = \"5\"\n```"
    },
    {
        "readme": "# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py",
        "file_path": "obd/protocols/protocol_unknown.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as a file path. Please write a corresponding file sketch.\n\n---\nREADME.md\n---\n# PYOBD \nThis is the remake of the program pyobd, a free and open-source program for car diagnostics. The program was originally made by Donour Sizemore a long time ago, but it wasn't operational for the last 15 years, so I upgraded it from Python 2 to Python 3 and all the new libraries to make it work again. After that, I deleted the fixed commands and used the Python-OBD library, which supports a lot more commands and auto-detects what a cars computer supports, so it displays much more data than before.\n\n## Prerequisites:\nYou need an ELM327 adapter, a laptop, and a car that supports OBD2 to use this program. All cars in Europe made since 2001 should support it. And in the USA, all cars made since 1996.\n\n**Which ELM327 adapters have been reported to work? Most if not all adapters for $10 or more should work.**<br/>\nThis is the list of the ones I tried and worked:<br/>\n* [OBDPro USB Scantool](http://www.obdpros.com/product_info.php?products_id=133)<br/>\n* [OBDLink SX USB](https://www.obdlink.com/products/obdlink-sx/)<br/>\n* Chinese OBD2 1.5 USB<br/>\n* VGate iCar Pro BLE (Bluetooth 4.0). \n\n\n**Please write to me which adapters you have tested working with the app, so I can include it in the list. My e-mail is at the bottom of this readme.**\n\n**NOTE: Both USB and bluetooth adapters work with this app, but under Linux I had to pair the bluetooth adapter manually via command line and then manually connect to it. It's probably because bluetooth GUI managers under Linux are buggy.**\n\n**Which adapters are good?**</br>\n* These may work, but not fully, and the ones that work (at least mostly) properly are $10 or more. There are multiple reasons why a good adapter is not the cheapest. OBDLink makes good adapters, as does VGate; their adapters also receive firmware updates, so while they are already very good, they keep improving. This is what I found out after googling and reading about it for 3 days.\n* USB Adapters\n    * I recommend USB adapters for a stable and fast connection.\n    * USB vLinker FS USB\n        * If you want a trusted, good adapter, then I think the current USB vLinker FS USB is the best and has a good price.\n* Blutetooth Adapters\n    * Bluetooth is slower and less reliable, and wireless has been reported as worse.\n    * Vgate iCAR Pro\n        * My reccomended choice of bluetooth adapter.\n* Chinese clones \n    * If you really want to go buy a Chinese clone, I recommend one that has a **PIC18F25K80 chip and FTDI chip (for USB)**, but even then, the firmware is also a factor; 1.5 should be best (for a Chinese clone), but who knows what you will get. I.  If you want an affordable Chinese Elm327 that is branded, then go with the Konnwei KW903. It's about $15 with postage included. But iCar Pro is better.<br/>\n\n## Usage\nFor bluetooth adapters, you will need to pair the adapter once and then connect to it(for some reason on Linux I had to connect to it manually via command line).\n\nRun the executable or the script, connect the ELM327 to the computer and the car's OBD port, set the iginition on the car to on(you don't have to start the engine) and click CONNECT in the app. To connect, go to Configure, select the right port and the right baudrate and click connect. You can leave it at AUTO and connect, but it will take longer to connect and in some cases it will not connect. Manual is safest and fastest, but AUTO works in most cases.\\\n**UPDATE: automatic port and baud detection should now work every time!**\n\nThe data will display once you are connected, although most of the sensors display data only when the engine is running. If you connected and then turn the engine on, you have to wait a bit so that the program reconnects.\n\nThe program was made with ease of use in mind. With it you can view TESTS data, SENSORS data, FREEZE FRAME data, display and clear the TROUBLE CODES and view live GRAPHS. Currently it only displays live data - no recording and replay is possible.\n\n**NOTE: The program only displays the engine data, not airbags, ABS and body control systems. Even if your adapter supports that, you will need a more specialized program for that.**\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 debugEvent.py\n\u251c\u2500\u2500 obd2_codes.py\n\u251c\u2500\u2500 obd_io.py # import obd; import obd_sensors; from obd_sensors import hex_to_int; from debugEvent import *;\n\u251c\u2500\u2500 obd_sensors.py\n\u251c\u2500\u2500 pyobd.py # import obd; import obd_io  # OBD2 funcs; from obd2_codes import pcodes; from debugEvent import *;\n\u2514\u2500\u2500 obd\n    \u251c\u2500\u2500 OBDCommand.py\n    \u251c\u2500\u2500 OBDResponse.py\n    \u251c\u2500\u2500 UnitsAndScaling.py\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 __version__.py\n    \u251c\u2500\u2500 asynchronous.py\n    \u251c\u2500\u2500 codes.py\n    \u251c\u2500\u2500 commands.py\n    \u251c\u2500\u2500 decoders.py\n    \u251c\u2500\u2500 elm327.py\n    \u251c\u2500\u2500 obd.py\n    \u251c\u2500\u2500 utils.py\n    \u2514\u2500\u2500 protocols\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 protocol.py\n        \u251c\u2500\u2500 protocol_can.py\n        \u251c\u2500\u2500 protocol_legacy.py\n        \u2514\u2500\u2500 protocol_unknown.py\n```\n\n---\nFile Path\n---\nobd/protocols/protocol_unknown.py\n\n---\nFile Sketch\n---\n",
        "input": "",
        "output": "Here is a practicable file sketch.\n\n```python\nfrom .protocol import *\n\n\nclass UnknownProtocol(Protocol):\n    \"\"\"\n    Class representing an unknown protocol.\n\n    Used for when a connection to the ELM has\n    been made, but the car hasn't responded.\n    \"\"\"\n\n    def parse_frame(self, frame):\n        pass\n\n    def parse_message(self, message):\n        pass\n```"
    }
]