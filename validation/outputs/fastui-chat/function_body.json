[
    {
        "readme": "# fastui-chat\n\nA minimalistic ChatBot Interface in pure python. </br>\nBuild on top of [FastUI](https://github.com/pydantic/FastUI) and [LangChain Core](https://github.com/langchain-ai/langchain).",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 dev-install.sh\n\u251c\u2500\u2500 examples\n|   \u2514\u2500\u2500 simple_chatbot.py # from fastui_chat import ChatUI, basic_chat_handler;\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 fastui_chat\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 app.py\n        \u251c\u2500\u2500 chat.py # from fastui import AnyComponent, FastUI; from fastui import components as c;\n        \u251c\u2500\u2500 components.py # from fastui import components as c; from fastui import events as e;\n        \u251c\u2500\u2500 db.py\n        \u251c\u2500\u2500 fastui_core.py # from fastui import prebuilt_html;\n        \u2514\u2500\u2500 session.py",
        "relevant_file_paths": [],
        "relevant_file_sketches": "---\nCurrent File Sketch/1\n---\nHere is the file sketch of `src/fastui_chat/app.py`.\n\n```python\nfrom typing import Any\nfrom fastapi import FastAPI\nfrom langchain_core.chat_history import BaseChatMessageHistory\nfrom langchain_core.messages import AIMessage, HumanMessage\nfrom langchain_core.runnables import Runnable\nfrom .chat import router as chat_router\nfrom .db import init_database\nfrom .fastui_core import router as core_router\n\n\nclass ChatUI(FastAPI):\n    def __init__(\n        self,\n        chat_history: BaseChatMessageHistory,\n        chat_handler: Runnable[HumanMessage, AIMessage],\n        *args: Any,\n        **kwargs: Any\n    ) -> None:\n        \"\"\"TODO\"\"\"\n\n    def start_with_uvicorn(self) -> None:\n        pass\n```",
        "current_file_path": "src/fastui_chat/app.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as some relevant file sketches. Please fill the function body for the given function header.\n\n---\nREADME.md\n---\n# fastui-chat\n\nA minimalistic ChatBot Interface in pure python. </br>\nBuild on top of [FastUI](https://github.com/pydantic/FastUI) and [LangChain Core](https://github.com/langchain-ai/langchain).\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 dev-install.sh\n\u251c\u2500\u2500 examples\n|   \u2514\u2500\u2500 simple_chatbot.py # from fastui_chat import ChatUI, basic_chat_handler;\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 fastui_chat\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 app.py\n        \u251c\u2500\u2500 chat.py # from fastui import AnyComponent, FastUI; from fastui import components as c;\n        \u251c\u2500\u2500 components.py # from fastui import components as c; from fastui import events as e;\n        \u251c\u2500\u2500 db.py\n        \u251c\u2500\u2500 fastui_core.py # from fastui import prebuilt_html;\n        \u2514\u2500\u2500 session.py\n```\n\n---\nCurrent File Sketch/1\n---\nHere is the file sketch of `src/fastui_chat/app.py`.\n\n```python\nfrom typing import Any\nfrom fastapi import FastAPI\nfrom langchain_core.chat_history import BaseChatMessageHistory\nfrom langchain_core.messages import AIMessage, HumanMessage\nfrom langchain_core.runnables import Runnable\nfrom .chat import router as chat_router\nfrom .db import init_database\nfrom .fastui_core import router as core_router\n\n\nclass ChatUI(FastAPI):\n    def __init__(\n        self,\n        chat_history: BaseChatMessageHistory,\n        chat_handler: Runnable[HumanMessage, AIMessage],\n        *args: Any,\n        **kwargs: Any\n    ) -> None:\n        \"\"\"TODO\"\"\"\n\n    def start_with_uvicorn(self) -> None:\n        pass\n```\n\n---\nFunction Complement\n---\ndef __init__(\n        self,\n        chat_history: BaseChatMessageHistory,\n",
        "input": "",
        "output": "Here is a complete function body.\n\n```python\ndef __init__(\n        self,\n        chat_history: BaseChatMessageHistory,\n    super().__init__(*args, **kwargs)\n    init_database(chat_history, chat_handler)\n    self.include_router(chat_router, prefix=\"/api\")\n    self.include_router(core_router)\n    \n\n```"
    },
    {
        "readme": "# fastui-chat\n\nA minimalistic ChatBot Interface in pure python. </br>\nBuild on top of [FastUI](https://github.com/pydantic/FastUI) and [LangChain Core](https://github.com/langchain-ai/langchain).",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 dev-install.sh\n\u251c\u2500\u2500 examples\n|   \u2514\u2500\u2500 simple_chatbot.py # from fastui_chat import ChatUI, basic_chat_handler;\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 fastui_chat\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 app.py\n        \u251c\u2500\u2500 chat.py # from fastui import AnyComponent, FastUI; from fastui import components as c;\n        \u251c\u2500\u2500 components.py # from fastui import components as c; from fastui import events as e;\n        \u251c\u2500\u2500 db.py\n        \u251c\u2500\u2500 fastui_core.py # from fastui import prebuilt_html;\n        \u2514\u2500\u2500 session.py",
        "relevant_file_paths": [],
        "relevant_file_sketches": "---\nCurrent File Sketch/1\n---\nHere is the file sketch of `src/fastui_chat/app.py`.\n\n```python\nfrom typing import Any\nfrom fastapi import FastAPI\nfrom langchain_core.chat_history import BaseChatMessageHistory\nfrom langchain_core.messages import AIMessage, HumanMessage\nfrom langchain_core.runnables import Runnable\nfrom .chat import router as chat_router\nfrom .db import init_database\nfrom .fastui_core import router as core_router\n\n\nclass ChatUI(FastAPI):\n    def __init__(\n        self,\n        chat_history: BaseChatMessageHistory,\n        chat_handler: Runnable[HumanMessage, AIMessage],\n        *args: Any,\n        **kwargs: Any\n    ) -> None:\n        pass\n\n    def start_with_uvicorn(self) -> None:\n        \"\"\"TODO\"\"\"\n```",
        "current_file_path": "src/fastui_chat/app.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as some relevant file sketches. Please fill the function body for the given function header.\n\n---\nREADME.md\n---\n# fastui-chat\n\nA minimalistic ChatBot Interface in pure python. </br>\nBuild on top of [FastUI](https://github.com/pydantic/FastUI) and [LangChain Core](https://github.com/langchain-ai/langchain).\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 dev-install.sh\n\u251c\u2500\u2500 examples\n|   \u2514\u2500\u2500 simple_chatbot.py # from fastui_chat import ChatUI, basic_chat_handler;\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 fastui_chat\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 app.py\n        \u251c\u2500\u2500 chat.py # from fastui import AnyComponent, FastUI; from fastui import components as c;\n        \u251c\u2500\u2500 components.py # from fastui import components as c; from fastui import events as e;\n        \u251c\u2500\u2500 db.py\n        \u251c\u2500\u2500 fastui_core.py # from fastui import prebuilt_html;\n        \u2514\u2500\u2500 session.py\n```\n\n---\nCurrent File Sketch/1\n---\nHere is the file sketch of `src/fastui_chat/app.py`.\n\n```python\nfrom typing import Any\nfrom fastapi import FastAPI\nfrom langchain_core.chat_history import BaseChatMessageHistory\nfrom langchain_core.messages import AIMessage, HumanMessage\nfrom langchain_core.runnables import Runnable\nfrom .chat import router as chat_router\nfrom .db import init_database\nfrom .fastui_core import router as core_router\n\n\nclass ChatUI(FastAPI):\n    def __init__(\n        self,\n        chat_history: BaseChatMessageHistory,\n        chat_handler: Runnable[HumanMessage, AIMessage],\n        *args: Any,\n        **kwargs: Any\n    ) -> None:\n        pass\n\n    def start_with_uvicorn(self) -> None:\n        \"\"\"TODO\"\"\"\n```\n\n---\nFunction Complement\n---\ndef start_with_uvicorn(self) -> None:\n",
        "input": "",
        "output": "Here is a complete function body.\n\n```python\ndef start_with_uvicorn(self) -> None:\n    try:\n        import uvicorn\n    except ImportError:\n        print(\"Please install uvicorn with `pip install uvicorn`\")\n        exit(1)\n    else:\n        uvicorn.run(self)\n```"
    },
    {
        "readme": "# fastui-chat\n\nA minimalistic ChatBot Interface in pure python. </br>\nBuild on top of [FastUI](https://github.com/pydantic/FastUI) and [LangChain Core](https://github.com/langchain-ai/langchain).",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 dev-install.sh\n\u251c\u2500\u2500 examples\n|   \u2514\u2500\u2500 simple_chatbot.py # from fastui_chat import ChatUI, basic_chat_handler;\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 fastui_chat\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 app.py\n        \u251c\u2500\u2500 chat.py # from fastui import AnyComponent, FastUI; from fastui import components as c;\n        \u251c\u2500\u2500 components.py # from fastui import components as c; from fastui import events as e;\n        \u251c\u2500\u2500 db.py\n        \u251c\u2500\u2500 fastui_core.py # from fastui import prebuilt_html;\n        \u2514\u2500\u2500 session.py",
        "relevant_file_paths": [],
        "relevant_file_sketches": "---\nCurrent File Sketch/1\n---\nHere is the file sketch of `src/fastui_chat/components.py`.\n\n```python\nfrom typing import Any, Literal, Union\nfrom fastui import components as c\nfrom fastui import events as e\nfrom typing_extensions import TypedDict\n\n\nclass DisplayAlias(TypedDict):\n    human: str\n    ai: str\n\n\nclass ChatMessage(c.Div):\n    \"\"\"\n    Component for displaying a chat message.\n    \"\"\"\n\n    content: Union[str, list[Union[str, dict]]]\n    msg_type: Literal[\"human\", \"ai\"]\n    class_name: str = \"container col-sm-4 my-4\"\n    display_alias: DisplayAlias = {\"human\": \"You\", \"ai\": \"ChatBot\"}\n\n    @property\n    def images(self) -> list[str]:\n        \"\"\"Return a list of image URLs in the message content.\"\"\"\n        \"\"\"TODO\"\"\"\n\n    @property\n    def message(self) -> str:\n        \"\"\"Return the message content.\"\"\"\n        pass\n\n    def __init__(\n        self,\n        msg_type: Literal[\"human\", \"ai\"],\n        content: Union[str, list[Union[str, dict]]],\n        **data: Any\n    ) -> None:\n        pass\n\n\nclass ChatInputForm(c.Form):\n    \"\"\"\n    Component for displaying a chat input form.\n    \"\"\"\n\n    fire_page_event: str\n    display_mode: str = \"inline\"\n    class_name: str = \"row row-cols-lg-3 justify-content-center\"\n    form_fields: list[c.FormFieldInput] = [\n        c.FormFieldInput(\n            title=\"\",\n            name=\"user_msg\",\n            placeholder=\"Message ChatBot...\",\n            class_name=\"py-4\",\n        )\n    ]\n\n    def __init__(self, *, submit_url: str, fire_page_event: str, **data: Any) -> None:\n        pass\n```",
        "current_file_path": "src/fastui_chat/components.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as some relevant file sketches. Please fill the function body for the given function header.\n\n---\nREADME.md\n---\n# fastui-chat\n\nA minimalistic ChatBot Interface in pure python. </br>\nBuild on top of [FastUI](https://github.com/pydantic/FastUI) and [LangChain Core](https://github.com/langchain-ai/langchain).\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 dev-install.sh\n\u251c\u2500\u2500 examples\n|   \u2514\u2500\u2500 simple_chatbot.py # from fastui_chat import ChatUI, basic_chat_handler;\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 fastui_chat\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 app.py\n        \u251c\u2500\u2500 chat.py # from fastui import AnyComponent, FastUI; from fastui import components as c;\n        \u251c\u2500\u2500 components.py # from fastui import components as c; from fastui import events as e;\n        \u251c\u2500\u2500 db.py\n        \u251c\u2500\u2500 fastui_core.py # from fastui import prebuilt_html;\n        \u2514\u2500\u2500 session.py\n```\n\n---\nCurrent File Sketch/1\n---\nHere is the file sketch of `src/fastui_chat/components.py`.\n\n```python\nfrom typing import Any, Literal, Union\nfrom fastui import components as c\nfrom fastui import events as e\nfrom typing_extensions import TypedDict\n\n\nclass DisplayAlias(TypedDict):\n    human: str\n    ai: str\n\n\nclass ChatMessage(c.Div):\n    \"\"\"\n    Component for displaying a chat message.\n    \"\"\"\n\n    content: Union[str, list[Union[str, dict]]]\n    msg_type: Literal[\"human\", \"ai\"]\n    class_name: str = \"container col-sm-4 my-4\"\n    display_alias: DisplayAlias = {\"human\": \"You\", \"ai\": \"ChatBot\"}\n\n    @property\n    def images(self) -> list[str]:\n        \"\"\"Return a list of image URLs in the message content.\"\"\"\n        \"\"\"TODO\"\"\"\n\n    @property\n    def message(self) -> str:\n        \"\"\"Return the message content.\"\"\"\n        pass\n\n    def __init__(\n        self,\n        msg_type: Literal[\"human\", \"ai\"],\n        content: Union[str, list[Union[str, dict]]],\n        **data: Any\n    ) -> None:\n        pass\n\n\nclass ChatInputForm(c.Form):\n    \"\"\"\n    Component for displaying a chat input form.\n    \"\"\"\n\n    fire_page_event: str\n    display_mode: str = \"inline\"\n    class_name: str = \"row row-cols-lg-3 justify-content-center\"\n    form_fields: list[c.FormFieldInput] = [\n        c.FormFieldInput(\n            title=\"\",\n            name=\"user_msg\",\n            placeholder=\"Message ChatBot...\",\n            class_name=\"py-4\",\n        )\n    ]\n\n    def __init__(self, *, submit_url: str, fire_page_event: str, **data: Any) -> None:\n        pass\n```\n\n---\nFunction Complement\n---\ndef images(self) -> list[str]:\n",
        "input": "",
        "output": "Here is a complete function body.\n\n```python\ndef images(self) -> list[str]:\n    \"\"\"Return a list of image URLs in the message content.\"\"\"\n    if isinstance(self.content, str):\n        return []\n    return [\n        (\n            item[\"image_url\"][\"url\"]\n            if isinstance(item[\"image_url\"], dict)\n            else item[\"image_url\"]\n        )\n        for item in self.content\n        if isinstance(item, dict) and item[\"type\"] == \"image_url\"\n    ]\n```"
    },
    {
        "readme": "# fastui-chat\n\nA minimalistic ChatBot Interface in pure python. </br>\nBuild on top of [FastUI](https://github.com/pydantic/FastUI) and [LangChain Core](https://github.com/langchain-ai/langchain).",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 dev-install.sh\n\u251c\u2500\u2500 examples\n|   \u2514\u2500\u2500 simple_chatbot.py # from fastui_chat import ChatUI, basic_chat_handler;\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 fastui_chat\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 app.py\n        \u251c\u2500\u2500 chat.py # from fastui import AnyComponent, FastUI; from fastui import components as c;\n        \u251c\u2500\u2500 components.py # from fastui import components as c; from fastui import events as e;\n        \u251c\u2500\u2500 db.py\n        \u251c\u2500\u2500 fastui_core.py # from fastui import prebuilt_html;\n        \u2514\u2500\u2500 session.py",
        "relevant_file_paths": [],
        "relevant_file_sketches": "---\nCurrent File Sketch/1\n---\nHere is the file sketch of `src/fastui_chat/components.py`.\n\n```python\nfrom typing import Any, Literal, Union\nfrom fastui import components as c\nfrom fastui import events as e\nfrom typing_extensions import TypedDict\n\n\nclass DisplayAlias(TypedDict):\n    human: str\n    ai: str\n\n\nclass ChatMessage(c.Div):\n    \"\"\"\n    Component for displaying a chat message.\n    \"\"\"\n\n    content: Union[str, list[Union[str, dict]]]\n    msg_type: Literal[\"human\", \"ai\"]\n    class_name: str = \"container col-sm-4 my-4\"\n    display_alias: DisplayAlias = {\"human\": \"You\", \"ai\": \"ChatBot\"}\n\n    @property\n    def images(self) -> list[str]:\n        \"\"\"Return a list of image URLs in the message content.\"\"\"\n        pass\n\n    @property\n    def message(self) -> str:\n        \"\"\"Return the message content.\"\"\"\n        \"\"\"TODO\"\"\"\n\n    def __init__(\n        self,\n        msg_type: Literal[\"human\", \"ai\"],\n        content: Union[str, list[Union[str, dict]]],\n        **data: Any\n    ) -> None:\n        pass\n\n\nclass ChatInputForm(c.Form):\n    \"\"\"\n    Component for displaying a chat input form.\n    \"\"\"\n\n    fire_page_event: str\n    display_mode: str = \"inline\"\n    class_name: str = \"row row-cols-lg-3 justify-content-center\"\n    form_fields: list[c.FormFieldInput] = [\n        c.FormFieldInput(\n            title=\"\",\n            name=\"user_msg\",\n            placeholder=\"Message ChatBot...\",\n            class_name=\"py-4\",\n        )\n    ]\n\n    def __init__(self, *, submit_url: str, fire_page_event: str, **data: Any) -> None:\n        pass\n```",
        "current_file_path": "src/fastui_chat/components.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as some relevant file sketches. Please fill the function body for the given function header.\n\n---\nREADME.md\n---\n# fastui-chat\n\nA minimalistic ChatBot Interface in pure python. </br>\nBuild on top of [FastUI](https://github.com/pydantic/FastUI) and [LangChain Core](https://github.com/langchain-ai/langchain).\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 dev-install.sh\n\u251c\u2500\u2500 examples\n|   \u2514\u2500\u2500 simple_chatbot.py # from fastui_chat import ChatUI, basic_chat_handler;\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 fastui_chat\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 app.py\n        \u251c\u2500\u2500 chat.py # from fastui import AnyComponent, FastUI; from fastui import components as c;\n        \u251c\u2500\u2500 components.py # from fastui import components as c; from fastui import events as e;\n        \u251c\u2500\u2500 db.py\n        \u251c\u2500\u2500 fastui_core.py # from fastui import prebuilt_html;\n        \u2514\u2500\u2500 session.py\n```\n\n---\nCurrent File Sketch/1\n---\nHere is the file sketch of `src/fastui_chat/components.py`.\n\n```python\nfrom typing import Any, Literal, Union\nfrom fastui import components as c\nfrom fastui import events as e\nfrom typing_extensions import TypedDict\n\n\nclass DisplayAlias(TypedDict):\n    human: str\n    ai: str\n\n\nclass ChatMessage(c.Div):\n    \"\"\"\n    Component for displaying a chat message.\n    \"\"\"\n\n    content: Union[str, list[Union[str, dict]]]\n    msg_type: Literal[\"human\", \"ai\"]\n    class_name: str = \"container col-sm-4 my-4\"\n    display_alias: DisplayAlias = {\"human\": \"You\", \"ai\": \"ChatBot\"}\n\n    @property\n    def images(self) -> list[str]:\n        \"\"\"Return a list of image URLs in the message content.\"\"\"\n        pass\n\n    @property\n    def message(self) -> str:\n        \"\"\"Return the message content.\"\"\"\n        \"\"\"TODO\"\"\"\n\n    def __init__(\n        self,\n        msg_type: Literal[\"human\", \"ai\"],\n        content: Union[str, list[Union[str, dict]]],\n        **data: Any\n    ) -> None:\n        pass\n\n\nclass ChatInputForm(c.Form):\n    \"\"\"\n    Component for displaying a chat input form.\n    \"\"\"\n\n    fire_page_event: str\n    display_mode: str = \"inline\"\n    class_name: str = \"row row-cols-lg-3 justify-content-center\"\n    form_fields: list[c.FormFieldInput] = [\n        c.FormFieldInput(\n            title=\"\",\n            name=\"user_msg\",\n            placeholder=\"Message ChatBot...\",\n            class_name=\"py-4\",\n        )\n    ]\n\n    def __init__(self, *, submit_url: str, fire_page_event: str, **data: Any) -> None:\n        pass\n```\n\n---\nFunction Complement\n---\ndef message(self) -> str:\n",
        "input": "",
        "output": "Here is a complete function body.\n\n```python\ndef message(self) -> str:\n    \"\"\"Return the message content.\"\"\"\n    return (\n        self.content\n        if isinstance(self.content, str)\n        else self.content[0]\n        if isinstance(self.content[0], str)\n        else self.content[0][\"text\"]\n    )\n```"
    },
    {
        "readme": "# fastui-chat\n\nA minimalistic ChatBot Interface in pure python. </br>\nBuild on top of [FastUI](https://github.com/pydantic/FastUI) and [LangChain Core](https://github.com/langchain-ai/langchain).",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 dev-install.sh\n\u251c\u2500\u2500 examples\n|   \u2514\u2500\u2500 simple_chatbot.py # from fastui_chat import ChatUI, basic_chat_handler;\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 fastui_chat\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 app.py\n        \u251c\u2500\u2500 chat.py # from fastui import AnyComponent, FastUI; from fastui import components as c;\n        \u251c\u2500\u2500 components.py # from fastui import components as c; from fastui import events as e;\n        \u251c\u2500\u2500 db.py\n        \u251c\u2500\u2500 fastui_core.py # from fastui import prebuilt_html;\n        \u2514\u2500\u2500 session.py",
        "relevant_file_paths": [],
        "relevant_file_sketches": "---\nCurrent File Sketch/1\n---\nHere is the file sketch of `src/fastui_chat/db.py`.\n\n```python\nfrom typing import AsyncGenerator\nfrom langchain_core.chat_history import BaseChatMessageHistory\nfrom langchain_core.messages import AIMessage, HumanMessage\nfrom langchain_core.runnables import Runnable\nfrom typing_extensions import TypedDict\nfrom .session import ChatSession\n\n\nclass FakeDatabase(TypedDict, total=(False)):\n    chat_history: BaseChatMessageHistory\n    chat_handler: Runnable[HumanMessage, AIMessage]\n\n\ndatabase: FakeDatabase = {}\n\n\ndef init_database(\n    chat_history: BaseChatMessageHistory,\n    chat_handler: Runnable[HumanMessage, AIMessage],\n) -> None:\n    \"\"\"TODO\"\"\"\n\n\nasync def get_history() -> AsyncGenerator[BaseChatMessageHistory, None]:\n    if \"chat_history\" not in database:\n        raise RuntimeError(\"Database not initialized\")\n    yield database[\"chat_history\"]\n\n\nasync def get_session() -> AsyncGenerator[ChatSession, None]:\n    if \"chat_history\" not in database or \"chat_handler\" not in database:\n        raise RuntimeError(\"Database not initialized\")\n    yield ChatSession(\n        history=database[\"chat_history\"], chat_handler=database[\"chat_handler\"]\n    )\n```",
        "current_file_path": "src/fastui_chat/db.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as some relevant file sketches. Please fill the function body for the given function header.\n\n---\nREADME.md\n---\n# fastui-chat\n\nA minimalistic ChatBot Interface in pure python. </br>\nBuild on top of [FastUI](https://github.com/pydantic/FastUI) and [LangChain Core](https://github.com/langchain-ai/langchain).\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 dev-install.sh\n\u251c\u2500\u2500 examples\n|   \u2514\u2500\u2500 simple_chatbot.py # from fastui_chat import ChatUI, basic_chat_handler;\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 fastui_chat\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 app.py\n        \u251c\u2500\u2500 chat.py # from fastui import AnyComponent, FastUI; from fastui import components as c;\n        \u251c\u2500\u2500 components.py # from fastui import components as c; from fastui import events as e;\n        \u251c\u2500\u2500 db.py\n        \u251c\u2500\u2500 fastui_core.py # from fastui import prebuilt_html;\n        \u2514\u2500\u2500 session.py\n```\n\n---\nCurrent File Sketch/1\n---\nHere is the file sketch of `src/fastui_chat/db.py`.\n\n```python\nfrom typing import AsyncGenerator\nfrom langchain_core.chat_history import BaseChatMessageHistory\nfrom langchain_core.messages import AIMessage, HumanMessage\nfrom langchain_core.runnables import Runnable\nfrom typing_extensions import TypedDict\nfrom .session import ChatSession\n\n\nclass FakeDatabase(TypedDict, total=(False)):\n    chat_history: BaseChatMessageHistory\n    chat_handler: Runnable[HumanMessage, AIMessage]\n\n\ndatabase: FakeDatabase = {}\n\n\ndef init_database(\n    chat_history: BaseChatMessageHistory,\n    chat_handler: Runnable[HumanMessage, AIMessage],\n) -> None:\n    \"\"\"TODO\"\"\"\n\n\nasync def get_history() -> AsyncGenerator[BaseChatMessageHistory, None]:\n    if \"chat_history\" not in database:\n        raise RuntimeError(\"Database not initialized\")\n    yield database[\"chat_history\"]\n\n\nasync def get_session() -> AsyncGenerator[ChatSession, None]:\n    if \"chat_history\" not in database or \"chat_handler\" not in database:\n        raise RuntimeError(\"Database not initialized\")\n    yield ChatSession(\n        history=database[\"chat_history\"], chat_handler=database[\"chat_handler\"]\n    )\n```\n\n---\nFunction Complement\n---\ndef init_database(\n    chat_history: BaseChatMessageHistory,\n",
        "input": "",
        "output": "Here is a complete function body.\n\n```python\ndef init_database(\n    chat_history: BaseChatMessageHistory,\n    database[\"chat_history\"] = chat_history\n    database[\"chat_handler\"] = chat_handler\n    \n\n```"
    },
    {
        "readme": "# fastui-chat\n\nA minimalistic ChatBot Interface in pure python. </br>\nBuild on top of [FastUI](https://github.com/pydantic/FastUI) and [LangChain Core](https://github.com/langchain-ai/langchain).",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 dev-install.sh\n\u251c\u2500\u2500 examples\n|   \u2514\u2500\u2500 simple_chatbot.py # from fastui_chat import ChatUI, basic_chat_handler;\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 fastui_chat\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 app.py\n        \u251c\u2500\u2500 chat.py # from fastui import AnyComponent, FastUI; from fastui import components as c;\n        \u251c\u2500\u2500 components.py # from fastui import components as c; from fastui import events as e;\n        \u251c\u2500\u2500 db.py\n        \u251c\u2500\u2500 fastui_core.py # from fastui import prebuilt_html;\n        \u2514\u2500\u2500 session.py",
        "relevant_file_paths": [],
        "relevant_file_sketches": "---\nCurrent File Sketch/1\n---\nHere is the file sketch of `src/fastui_chat/session.py`.\n\n```python\nfrom langchain_core.chat_history import BaseChatMessageHistory\nfrom langchain_core.language_models import BaseChatModel\nfrom langchain_core.messages import AIMessage, HumanMessage\nfrom langchain_core.prompts import ChatPromptTemplate, MessagesPlaceholder\nfrom langchain_core.runnables import Runnable\nfrom langchain_core.runnables.history import RunnableWithMessageHistory\n\n\nclass ChatSession:\n    def __init__(\n        self,\n        *,\n        chat_handler: Runnable[HumanMessage, AIMessage],\n        history: BaseChatMessageHistory\n    ) -> None:\n        \"\"\"TODO\"\"\"\n\n    async def astream(self, user_msg: str):\n        async for message in self.chat_handler.astream(\n            HumanMessage(content=user_msg),\n            config={\"run_name\": \"ChatMessage\", \"configurable\": {\"session_id\": \"\"}},\n        ):\n            yield message\n\n\ndef basic_chat_handler(\n    llm: BaseChatModel, chat_history: BaseChatMessageHistory, system_message: str = \"\"\n) -> Runnable[HumanMessage, AIMessage]:\n    pass\n```",
        "current_file_path": "src/fastui_chat/session.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as some relevant file sketches. Please fill the function body for the given function header.\n\n---\nREADME.md\n---\n# fastui-chat\n\nA minimalistic ChatBot Interface in pure python. </br>\nBuild on top of [FastUI](https://github.com/pydantic/FastUI) and [LangChain Core](https://github.com/langchain-ai/langchain).\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 dev-install.sh\n\u251c\u2500\u2500 examples\n|   \u2514\u2500\u2500 simple_chatbot.py # from fastui_chat import ChatUI, basic_chat_handler;\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 fastui_chat\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 app.py\n        \u251c\u2500\u2500 chat.py # from fastui import AnyComponent, FastUI; from fastui import components as c;\n        \u251c\u2500\u2500 components.py # from fastui import components as c; from fastui import events as e;\n        \u251c\u2500\u2500 db.py\n        \u251c\u2500\u2500 fastui_core.py # from fastui import prebuilt_html;\n        \u2514\u2500\u2500 session.py\n```\n\n---\nCurrent File Sketch/1\n---\nHere is the file sketch of `src/fastui_chat/session.py`.\n\n```python\nfrom langchain_core.chat_history import BaseChatMessageHistory\nfrom langchain_core.language_models import BaseChatModel\nfrom langchain_core.messages import AIMessage, HumanMessage\nfrom langchain_core.prompts import ChatPromptTemplate, MessagesPlaceholder\nfrom langchain_core.runnables import Runnable\nfrom langchain_core.runnables.history import RunnableWithMessageHistory\n\n\nclass ChatSession:\n    def __init__(\n        self,\n        *,\n        chat_handler: Runnable[HumanMessage, AIMessage],\n        history: BaseChatMessageHistory\n    ) -> None:\n        \"\"\"TODO\"\"\"\n\n    async def astream(self, user_msg: str):\n        async for message in self.chat_handler.astream(\n            HumanMessage(content=user_msg),\n            config={\"run_name\": \"ChatMessage\", \"configurable\": {\"session_id\": \"\"}},\n        ):\n            yield message\n\n\ndef basic_chat_handler(\n    llm: BaseChatModel, chat_history: BaseChatMessageHistory, system_message: str = \"\"\n) -> Runnable[HumanMessage, AIMessage]:\n    pass\n```\n\n---\nFunction Complement\n---\ndef __init__(\n        self,\n        *,\n        chat_handler: Runnable[HumanMessage, AIMessage],\n",
        "input": "",
        "output": "Here is a complete function body.\n\n```python\ndef __init__(\n        self,\n        *,\n        chat_handler: Runnable[HumanMessage, AIMessage],\n    self.history = history\n    self.chat_handler = chat_handler\n    \n\n```"
    },
    {
        "readme": "# fastui-chat\n\nA minimalistic ChatBot Interface in pure python. </br>\nBuild on top of [FastUI](https://github.com/pydantic/FastUI) and [LangChain Core](https://github.com/langchain-ai/langchain).",
        "repo_sketch": ".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 dev-install.sh\n\u251c\u2500\u2500 examples\n|   \u2514\u2500\u2500 simple_chatbot.py # from fastui_chat import ChatUI, basic_chat_handler;\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 fastui_chat\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 app.py\n        \u251c\u2500\u2500 chat.py # from fastui import AnyComponent, FastUI; from fastui import components as c;\n        \u251c\u2500\u2500 components.py # from fastui import components as c; from fastui import events as e;\n        \u251c\u2500\u2500 db.py\n        \u251c\u2500\u2500 fastui_core.py # from fastui import prebuilt_html;\n        \u2514\u2500\u2500 session.py",
        "relevant_file_paths": [],
        "relevant_file_sketches": "---\nCurrent File Sketch/1\n---\nHere is the file sketch of `src/fastui_chat/session.py`.\n\n```python\nfrom langchain_core.chat_history import BaseChatMessageHistory\nfrom langchain_core.language_models import BaseChatModel\nfrom langchain_core.messages import AIMessage, HumanMessage\nfrom langchain_core.prompts import ChatPromptTemplate, MessagesPlaceholder\nfrom langchain_core.runnables import Runnable\nfrom langchain_core.runnables.history import RunnableWithMessageHistory\n\n\nclass ChatSession:\n    def __init__(\n        self,\n        *,\n        chat_handler: Runnable[HumanMessage, AIMessage],\n        history: BaseChatMessageHistory\n    ) -> None:\n        pass\n\n    async def astream(self, user_msg: str):\n        async for message in self.chat_handler.astream(\n            HumanMessage(content=user_msg),\n            config={\"run_name\": \"ChatMessage\", \"configurable\": {\"session_id\": \"\"}},\n        ):\n            yield message\n\n\ndef basic_chat_handler(\n    llm: BaseChatModel, chat_history: BaseChatMessageHistory, system_message: str = \"\"\n) -> Runnable[HumanMessage, AIMessage]:\n    \"\"\"TODO\"\"\"\n```",
        "current_file_path": "src/fastui_chat/session.py",
        "instruction": "Below is a detailed README.md of repository, repository sketch, as well as some relevant file sketches. Please fill the function body for the given function header.\n\n---\nREADME.md\n---\n# fastui-chat\n\nA minimalistic ChatBot Interface in pure python. </br>\nBuild on top of [FastUI](https://github.com/pydantic/FastUI) and [LangChain Core](https://github.com/langchain-ai/langchain).\n\n---\nRepository Sketch\n---\nHere is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 dev-install.sh\n\u251c\u2500\u2500 examples\n|   \u2514\u2500\u2500 simple_chatbot.py # from fastui_chat import ChatUI, basic_chat_handler;\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 fastui_chat\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 app.py\n        \u251c\u2500\u2500 chat.py # from fastui import AnyComponent, FastUI; from fastui import components as c;\n        \u251c\u2500\u2500 components.py # from fastui import components as c; from fastui import events as e;\n        \u251c\u2500\u2500 db.py\n        \u251c\u2500\u2500 fastui_core.py # from fastui import prebuilt_html;\n        \u2514\u2500\u2500 session.py\n```\n\n---\nCurrent File Sketch/1\n---\nHere is the file sketch of `src/fastui_chat/session.py`.\n\n```python\nfrom langchain_core.chat_history import BaseChatMessageHistory\nfrom langchain_core.language_models import BaseChatModel\nfrom langchain_core.messages import AIMessage, HumanMessage\nfrom langchain_core.prompts import ChatPromptTemplate, MessagesPlaceholder\nfrom langchain_core.runnables import Runnable\nfrom langchain_core.runnables.history import RunnableWithMessageHistory\n\n\nclass ChatSession:\n    def __init__(\n        self,\n        *,\n        chat_handler: Runnable[HumanMessage, AIMessage],\n        history: BaseChatMessageHistory\n    ) -> None:\n        pass\n\n    async def astream(self, user_msg: str):\n        async for message in self.chat_handler.astream(\n            HumanMessage(content=user_msg),\n            config={\"run_name\": \"ChatMessage\", \"configurable\": {\"session_id\": \"\"}},\n        ):\n            yield message\n\n\ndef basic_chat_handler(\n    llm: BaseChatModel, chat_history: BaseChatMessageHistory, system_message: str = \"\"\n) -> Runnable[HumanMessage, AIMessage]:\n    \"\"\"TODO\"\"\"\n```\n\n---\nFunction Complement\n---\ndef basic_chat_handler(\n    llm: BaseChatModel,\n",
        "input": "",
        "output": "Here is a complete function body.\n\n```python\ndef basic_chat_handler(\n    llm: BaseChatModel,\n    handler = (\n        ChatPromptTemplate.from_messages(\n            [\n                *((\"system\", system_message) if system_message else []),\n                MessagesPlaceholder(variable_name=\"history\"),\n                (\"human\", \"{user_msg}\"),\n            ]\n        )\n        | llm\n    )\n    return {\"user_msg\": lambda x: x.content} | RunnableWithMessageHistory(\n        handler,\n        lambda _: chat_history,\n        input_messages_key=\"user_msg\",\n        history_messages_key=\"history\",\n    )\n    \n\n```"
    }
]