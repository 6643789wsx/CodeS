[
    {
        "readme": "# Flameshow\n\nFlameshow is a terminal Flamegraph viewer.\n\n## Features\n\n- Renders Flamegraphs in your terminal\n- Supports zooming in and displaying percentages\n- Keyboard input is prioritized\n- All operations can also be performed using the mouse.\n- Can switch to different sample types\n\n## Usage\n\nView golang's goroutine dump:\n\n```shell\n$ curl http://localhost:9100/debug/pprof/goroutine -o goroutine.out\n$ flameshow goroutine.out\n```\n\nAfter entering the TUI, the available actions are listed on Footer:\n\n- <kbd>q</kbd> for quit\n- <kbd>j</kbd> <kbd>i</kbd> <kbd>j</kbd> <kbd>k</kbd> or <kbd>\u2190</kbd>\n  <kbd>\u2193</kbd> <kbd>\u2191</kbd> <kbd>\u2192</kbd> for moving around, and <kbd>Enter</kbd>\n  for zoom in, then <kbd>Esc</kbd> for zoom out.\n- You can also use a mouse, hover on a span will show it details, and click will\n  zoom it.\n\n## Supported Formats\n\nAs far as I know, there is no standard specification for profiles. Different\nlanguages or tools might generate varying profile formats. I'm actively working\non supporting more formats. Admittedly, I might not be familiar with every tool\nand its specific format. So, if you'd like Flameshow to integrate with a tool\nyou love, please feel free to reach out and submit an issue.\n\n- Golang pprof\n- [Brendan Gregg's Flamegraph](https://www.brendangregg.com/flamegraphs.html)",
        "instruction": "Below is a detailed README.md of repository. Please write a repository sketch in the form of a tree, including all folders, files, as well as imports information if necessary.\n\n---\nREADME.md\n---\n# Flameshow\n\nFlameshow is a terminal Flamegraph viewer.\n\n## Features\n\n- Renders Flamegraphs in your terminal\n- Supports zooming in and displaying percentages\n- Keyboard input is prioritized\n- All operations can also be performed using the mouse.\n- Can switch to different sample types\n\n## Usage\n\nView golang's goroutine dump:\n\n```shell\n$ curl http://localhost:9100/debug/pprof/goroutine -o goroutine.out\n$ flameshow goroutine.out\n```\n\nAfter entering the TUI, the available actions are listed on Footer:\n\n- <kbd>q</kbd> for quit\n- <kbd>j</kbd> <kbd>i</kbd> <kbd>j</kbd> <kbd>k</kbd> or <kbd>\u2190</kbd>\n  <kbd>\u2193</kbd> <kbd>\u2191</kbd> <kbd>\u2192</kbd> for moving around, and <kbd>Enter</kbd>\n  for zoom in, then <kbd>Esc</kbd> for zoom out.\n- You can also use a mouse, hover on a span will show it details, and click will\n  zoom it.\n\n## Supported Formats\n\nAs far as I know, there is no standard specification for profiles. Different\nlanguages or tools might generate varying profile formats. I'm actively working\non supporting more formats. Admittedly, I might not be familiar with every tool\nand its specific format. So, if you'd like Flameshow to integrate with a tool\nyou love, please feel free to reach out and submit an issue.\n\n- Golang pprof\n- [Brendan Gregg's Flamegraph](https://www.brendangregg.com/flamegraphs.html)\n\n---\nRepository Sketch\n---\n",
        "input": "",
        "output": "Here is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 flameshow\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 colors.py\n    \u251c\u2500\u2500 const.py\n    \u251c\u2500\u2500 exceptions.py\n    \u251c\u2500\u2500 main.py # from flameshow import __version__;\n    \u251c\u2500\u2500 models.py\n    \u251c\u2500\u2500 runtime.py\n    \u251c\u2500\u2500 utils.py\n    \u251c\u2500\u2500 parsers\n    |   \u251c\u2500\u2500 __init__.py\n    |   \u2514\u2500\u2500 stackcollapse_parser.py\n    \u251c\u2500\u2500 pprof_parser\n    |   \u251c\u2500\u2500 __init__.py\n    |   \u251c\u2500\u2500 parser.py # from . import profile_pb2;\n    |   \u2514\u2500\u2500 profile_pb2.py\n    \u2514\u2500\u2500 render\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 app.py # from flameshow import __version__;\n        \u251c\u2500\u2500 flamegraph.py\n        \u251c\u2500\u2500 framedetail.py\n        \u251c\u2500\u2500 header.py\n        \u2514\u2500\u2500 tabs.py\n```"
    }
]