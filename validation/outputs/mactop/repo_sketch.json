[
    {
        "readme": "# mactop\n\nMactop is a tool like htop, but you can decide the data you want and decide the\nlayout. It is more like a Grafana for your macbook, but in terminal.\n\n## Usage\n\n```\nsudo mactop\n```\n\nIt requires `sudo` because `powermetrics` requires `sudo`, you can run `mactop`\nwithout `sudo` but some metrics will be missing.\n\nFor M1 Macbook users, please run:\n\n```\nsudo mactop -t m1.xml\n```\n\nWhat is `-t` here? It's for \"theme\"! And you can have your own theme!\n\n## Design Your Own Mactop\n\nWe use HTML + CSS style to setup the layout.\n\nYou can use `id` or `class` to select the element, like this:\n\n```html\n<Mactop>\n  <layout>\n    <Horizontal id=\"row-1\">\n      <SensorsPanel></SensorsPanel>\n    </Horizontal>\n  </layout>\n\n  <style>\n    #row-1 {\n      color: red;\n    }\n  </style>\n</Mactop>\n```\n\nSave your content to a file, for example, `my-theme.xml`, then run `mactop` with\n`mactop -t my-theme.xml`.\n\nComponents do not support inline-css, but you can set attributes on components.\n\nCommon attributes that every components support:\n\n- `id`;\n- `class` or `classes`, separated by space;\n- `refresh_interval`: set this will overwrite command line arguments\n  `--refresh-interval` for that component.\n\nFor component's supported attributes and component's name, please refer to\n`mactop/panels/__init__.py` and check the source code. Please bare with me, it\nis messy for now, I am working on documentations. If you have any questions,\nfeel free to open an issue.\n\nFor examples of layouts, you can refer `mactop/themes/` directory.\n\nIf you made some beautiful layout, please send it to me! By open a PR or issue,\nI can merge it into this repo, thanks.\n\n## Debug\n\nMactop comes with verbose log support.\n\n`-v` means enable `info` log, and more `v` means more logs, max `-vvv`.\n\n```shell\nmactop -vvv -l mactop.log\n```\n\nThen you can open another terminal `tail -f mactop.log` to see the logs.\n\nMactop use `powermetrics` to get metrics from your mactop, `powermetrics` is\ndifferent on different Macbooks. If you met some issue, better submit a\n`powermetrics` sample in the issue, thanks.\n\nUse this command (add `--debug`), Mactop will write json formatted powermetrics\nfile on your current `$(PWD)/debug_json`. (If you decide to paste it, only one\nsample (one file) is enough).\n\n```shell\n$ mactop -vvv -l mactop.log --debug\n$ ls debug_json\nmactop_debug_20231206_16:34:28.json  mactop_debug_20231206_16:41:55.json  mactop_debug_20231206_16:46:21.json\nmactop_debug_20231206_16:34:29.json  mactop_debug_20231206_16:44:46.json\n```",
        "instruction": "Below is a detailed README.md of repository. Please write a repository sketch in the form of a tree, including all folders, files, as well as imports information if necessary.\n\n---\nREADME.md\n---\n# mactop\n\nMactop is a tool like htop, but you can decide the data you want and decide the\nlayout. It is more like a Grafana for your macbook, but in terminal.\n\n## Usage\n\n```\nsudo mactop\n```\n\nIt requires `sudo` because `powermetrics` requires `sudo`, you can run `mactop`\nwithout `sudo` but some metrics will be missing.\n\nFor M1 Macbook users, please run:\n\n```\nsudo mactop -t m1.xml\n```\n\nWhat is `-t` here? It's for \"theme\"! And you can have your own theme!\n\n## Design Your Own Mactop\n\nWe use HTML + CSS style to setup the layout.\n\nYou can use `id` or `class` to select the element, like this:\n\n```html\n<Mactop>\n  <layout>\n    <Horizontal id=\"row-1\">\n      <SensorsPanel></SensorsPanel>\n    </Horizontal>\n  </layout>\n\n  <style>\n    #row-1 {\n      color: red;\n    }\n  </style>\n</Mactop>\n```\n\nSave your content to a file, for example, `my-theme.xml`, then run `mactop` with\n`mactop -t my-theme.xml`.\n\nComponents do not support inline-css, but you can set attributes on components.\n\nCommon attributes that every components support:\n\n- `id`;\n- `class` or `classes`, separated by space;\n- `refresh_interval`: set this will overwrite command line arguments\n  `--refresh-interval` for that component.\n\nFor component's supported attributes and component's name, please refer to\n`mactop/panels/__init__.py` and check the source code. Please bare with me, it\nis messy for now, I am working on documentations. If you have any questions,\nfeel free to open an issue.\n\nFor examples of layouts, you can refer `mactop/themes/` directory.\n\nIf you made some beautiful layout, please send it to me! By open a PR or issue,\nI can merge it into this repo, thanks.\n\n## Debug\n\nMactop comes with verbose log support.\n\n`-v` means enable `info` log, and more `v` means more logs, max `-vvv`.\n\n```shell\nmactop -vvv -l mactop.log\n```\n\nThen you can open another terminal `tail -f mactop.log` to see the logs.\n\nMactop use `powermetrics` to get metrics from your mactop, `powermetrics` is\ndifferent on different Macbooks. If you met some issue, better submit a\n`powermetrics` sample in the issue, thanks.\n\nUse this command (add `--debug`), Mactop will write json formatted powermetrics\nfile on your current `$(PWD)/debug_json`. (If you decide to paste it, only one\nsample (one file) is enough).\n\n```shell\n$ mactop -vvv -l mactop.log --debug\n$ ls debug_json\nmactop_debug_20231206_16:34:28.json  mactop_debug_20231206_16:41:55.json  mactop_debug_20231206_16:46:21.json\nmactop_debug_20231206_16:34:29.json  mactop_debug_20231206_16:44:46.json\n```\n\n---\nRepository Sketch\n---\n",
        "input": "",
        "output": "Here is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 mactop\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 const.py\n    \u251c\u2500\u2500 layout_loader.py\n    \u251c\u2500\u2500 main.py # from . import __version__;\n    \u251c\u2500\u2500 metrics_store.py # import psutil;\n    \u251c\u2500\u2500 layouts\n    |   \u2514\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 metrics_source\n    |   \u251c\u2500\u2500 __init__.py\n    |   \u251c\u2500\u2500 ioreg.py\n    |   \u251c\u2500\u2500 powermetrics.py\n    |   \u2514\u2500\u2500 psutil_manager.py # import psutil;\n    \u251c\u2500\u2500 panels\n    |   \u251c\u2500\u2500 __init__.py\n    |   \u251c\u2500\u2500 _base.py\n    |   \u251c\u2500\u2500 battery.py\n    |   \u251c\u2500\u2500 cpu_freq.py # from mactop import const;\n    |   \u251c\u2500\u2500 cpu_percpu_usage.py # from mactop import const;\n    |   \u251c\u2500\u2500 cpu_total_usage_bar.py # from mactop import const;\n    |   \u251c\u2500\u2500 cpu_total_usage_text.py # from mactop import const;\n    |   \u251c\u2500\u2500 disk.py\n    |   \u251c\u2500\u2500 energy.py\n    |   \u251c\u2500\u2500 loadavg.py\n    |   \u251c\u2500\u2500 m1_cpu.py\n    |   \u251c\u2500\u2500 m1_gpu.py # from mactop import const;\n    |   \u251c\u2500\u2500 m1cpu_freq.py # from mactop import const;\n    |   \u251c\u2500\u2500 network_iobyte_rate_text.py\n    |   \u251c\u2500\u2500 network_iopacket_rate_text.py\n    |   \u251c\u2500\u2500 network_sparkline.py\n    |   \u251c\u2500\u2500 sensors.py\n    |   \u251c\u2500\u2500 swap_memory.py\n    |   \u251c\u2500\u2500 tasks.py\n    |   \u251c\u2500\u2500 uptime.py\n    |   \u2514\u2500\u2500 virtual_memory.py\n    \u251c\u2500\u2500 utils\n    |   \u251c\u2500\u2500 __init__.py\n    |   \u251c\u2500\u2500 formatting.py\n    |   \u2514\u2500\u2500 rwlock.py\n    \u2514\u2500\u2500 widgets\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 colorbar.py\n        \u251c\u2500\u2500 dynamic_text.py\n        \u251c\u2500\u2500 header.py\n        \u251c\u2500\u2500 labeled_colorbar.py\n        \u251c\u2500\u2500 labeled_progress.py\n        \u251c\u2500\u2500 labeled_sparkline.py\n        \u251c\u2500\u2500 labeled_vstringbar.py\n        \u2514\u2500\u2500 vstringbar.py\n```"
    }
]