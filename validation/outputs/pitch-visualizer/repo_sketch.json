[
    {
        "readme": "# Pitch Visualizer\n\nThis is a small Python script that visualizes the pitch of a pure vocal audio, merges it with the original video, and ultimately generates a video with dynamic pitch annotations.\n\n## Usage\n\nYou need to prepare two files:\n\n* Original video file (.mp4)\n* Isolated vocal audio file extracted from the original video (.mp3)\n\nTo accurately draw pitch comparisons, you need to know the key of the song (e.g., C or F#). In this software, we do not specifically distinguish between major and minor keys; the key is only for annotating the scale. If the song is in a minor key, use the key of the corresponding major scale. For example, A minor corresponds to C.\n\n```bash\npython gen_pitch.py --audio <voice.mp3> -t <tone> <video.mp3> -o <output.mp4>\n\n# Example\npython gen_pitch.py --audio wjk_raw.mp3 -t E wjk.mp4 -o wjk_with_pitch.mp4\n```\n\nThe `-o` option can be omitted, and it defaults to creating another video in the input video's folder.\n\n### Other Options\n\n* `--ffmpeg` allows you to specify the ffmpeg executable, necessary when ffmpeg is not in your PATH.\n* `--pitch_width` sets the width of the pitch graph, defaulting to half the width of the original video.\n* `--pitch_position` sets the position of the pitch graph, defaulting to `top_right`.\n* `--min_pitch` sets the minimum recognized pitch, defaulting to `D2`.\n* `--max_pitch` sets the maximum recognized pitch, defaulting to `G5`.\n\nIf you are familiar with the song's vocal range, adjusting `--min_pitch` and `--max_pitch` can enhance pitch recognition accuracy and speed up rendering.",
        "instruction": "Below is a detailed README.md of repository. Please write a repository sketch in the form of a tree, including all folders, files, as well as imports information if necessary.\n\n---\nREADME.md\n---\n# Pitch Visualizer\n\nThis is a small Python script that visualizes the pitch of a pure vocal audio, merges it with the original video, and ultimately generates a video with dynamic pitch annotations.\n\n## Usage\n\nYou need to prepare two files:\n\n* Original video file (.mp4)\n* Isolated vocal audio file extracted from the original video (.mp3)\n\nTo accurately draw pitch comparisons, you need to know the key of the song (e.g., C or F#). In this software, we do not specifically distinguish between major and minor keys; the key is only for annotating the scale. If the song is in a minor key, use the key of the corresponding major scale. For example, A minor corresponds to C.\n\n```bash\npython gen_pitch.py --audio <voice.mp3> -t <tone> <video.mp3> -o <output.mp4>\n\n# Example\npython gen_pitch.py --audio wjk_raw.mp3 -t E wjk.mp4 -o wjk_with_pitch.mp4\n```\n\nThe `-o` option can be omitted, and it defaults to creating another video in the input video's folder.\n\n### Other Options\n\n* `--ffmpeg` allows you to specify the ffmpeg executable, necessary when ffmpeg is not in your PATH.\n* `--pitch_width` sets the width of the pitch graph, defaulting to half the width of the original video.\n* `--pitch_position` sets the position of the pitch graph, defaulting to `top_right`.\n* `--min_pitch` sets the minimum recognized pitch, defaulting to `D2`.\n* `--max_pitch` sets the maximum recognized pitch, defaulting to `G5`.\n\nIf you are familiar with the song's vocal range, adjusting `--min_pitch` and `--max_pitch` can enhance pitch recognition accuracy and speed up rendering.\n\n---\nRepository Sketch\n---\n",
        "input": "",
        "output": "Here is a practicable repository sketch.\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 gen_pitch.py # import magic;\n\u251c\u2500\u2500 magic.py\n```"
    }
]